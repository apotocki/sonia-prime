#line 1 "beng.yy.cpp"
#include "sonia/config.hpp"
#include <stdint.h>

#line 5 "beng.yy.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

#ifdef yy_create_buffer
#define beng_lang_create_buffer_ALREADY_DEFINED
#else
#define yy_create_buffer beng_lang_create_buffer
#endif

#ifdef yy_delete_buffer
#define beng_lang_delete_buffer_ALREADY_DEFINED
#else
#define yy_delete_buffer beng_lang_delete_buffer
#endif

#ifdef yy_scan_buffer
#define beng_lang_scan_buffer_ALREADY_DEFINED
#else
#define yy_scan_buffer beng_lang_scan_buffer
#endif

#ifdef yy_scan_string
#define beng_lang_scan_string_ALREADY_DEFINED
#else
#define yy_scan_string beng_lang_scan_string
#endif

#ifdef yy_scan_bytes
#define beng_lang_scan_bytes_ALREADY_DEFINED
#else
#define yy_scan_bytes beng_lang_scan_bytes
#endif

#ifdef yy_init_buffer
#define beng_lang_init_buffer_ALREADY_DEFINED
#else
#define yy_init_buffer beng_lang_init_buffer
#endif

#ifdef yy_flush_buffer
#define beng_lang_flush_buffer_ALREADY_DEFINED
#else
#define yy_flush_buffer beng_lang_flush_buffer
#endif

#ifdef yy_load_buffer_state
#define beng_lang_load_buffer_state_ALREADY_DEFINED
#else
#define yy_load_buffer_state beng_lang_load_buffer_state
#endif

#ifdef yy_switch_to_buffer
#define beng_lang_switch_to_buffer_ALREADY_DEFINED
#else
#define yy_switch_to_buffer beng_lang_switch_to_buffer
#endif

#ifdef yypush_buffer_state
#define beng_langpush_buffer_state_ALREADY_DEFINED
#else
#define yypush_buffer_state beng_langpush_buffer_state
#endif

#ifdef yypop_buffer_state
#define beng_langpop_buffer_state_ALREADY_DEFINED
#else
#define yypop_buffer_state beng_langpop_buffer_state
#endif

#ifdef yyensure_buffer_stack
#define beng_langensure_buffer_stack_ALREADY_DEFINED
#else
#define yyensure_buffer_stack beng_langensure_buffer_stack
#endif

#ifdef yylex
#define beng_langlex_ALREADY_DEFINED
#else
#define yylex beng_langlex
#endif

#ifdef yyrestart
#define beng_langrestart_ALREADY_DEFINED
#else
#define yyrestart beng_langrestart
#endif

#ifdef yylex_init
#define beng_langlex_init_ALREADY_DEFINED
#else
#define yylex_init beng_langlex_init
#endif

#ifdef yylex_init_extra
#define beng_langlex_init_extra_ALREADY_DEFINED
#else
#define yylex_init_extra beng_langlex_init_extra
#endif

#ifdef yylex_destroy
#define beng_langlex_destroy_ALREADY_DEFINED
#else
#define yylex_destroy beng_langlex_destroy
#endif

#ifdef yyget_debug
#define beng_langget_debug_ALREADY_DEFINED
#else
#define yyget_debug beng_langget_debug
#endif

#ifdef yyset_debug
#define beng_langset_debug_ALREADY_DEFINED
#else
#define yyset_debug beng_langset_debug
#endif

#ifdef yyget_extra
#define beng_langget_extra_ALREADY_DEFINED
#else
#define yyget_extra beng_langget_extra
#endif

#ifdef yyset_extra
#define beng_langset_extra_ALREADY_DEFINED
#else
#define yyset_extra beng_langset_extra
#endif

#ifdef yyget_in
#define beng_langget_in_ALREADY_DEFINED
#else
#define yyget_in beng_langget_in
#endif

#ifdef yyset_in
#define beng_langset_in_ALREADY_DEFINED
#else
#define yyset_in beng_langset_in
#endif

#ifdef yyget_out
#define beng_langget_out_ALREADY_DEFINED
#else
#define yyget_out beng_langget_out
#endif

#ifdef yyset_out
#define beng_langset_out_ALREADY_DEFINED
#else
#define yyset_out beng_langset_out
#endif

#ifdef yyget_leng
#define beng_langget_leng_ALREADY_DEFINED
#else
#define yyget_leng beng_langget_leng
#endif

#ifdef yyget_text
#define beng_langget_text_ALREADY_DEFINED
#else
#define yyget_text beng_langget_text
#endif

#ifdef yyget_lineno
#define beng_langget_lineno_ALREADY_DEFINED
#else
#define yyget_lineno beng_langget_lineno
#endif

#ifdef yyset_lineno
#define beng_langset_lineno_ALREADY_DEFINED
#else
#define yyset_lineno beng_langset_lineno
#endif

#ifdef yyget_column
#define beng_langget_column_ALREADY_DEFINED
#else
#define yyget_column beng_langget_column
#endif

#ifdef yyset_column
#define beng_langset_column_ALREADY_DEFINED
#else
#define yyset_column beng_langset_column
#endif

#ifdef yywrap
#define beng_langwrap_ALREADY_DEFINED
#else
#define yywrap beng_langwrap
#endif

#ifdef yyget_lval
#define beng_langget_lval_ALREADY_DEFINED
#else
#define yyget_lval beng_langget_lval
#endif

#ifdef yyset_lval
#define beng_langset_lval_ALREADY_DEFINED
#else
#define yyset_lval beng_langset_lval
#endif

#ifdef yyget_lloc
#define beng_langget_lloc_ALREADY_DEFINED
#else
#define yyget_lloc beng_langget_lloc
#endif

#ifdef yyset_lloc
#define beng_langset_lloc_ALREADY_DEFINED
#else
#define yyset_lloc beng_langset_lloc
#endif

#ifdef yyalloc
#define beng_langalloc_ALREADY_DEFINED
#else
#define yyalloc beng_langalloc
#endif

#ifdef yyrealloc
#define beng_langrealloc_ALREADY_DEFINED
#else
#define yyrealloc beng_langrealloc
#endif

#ifdef yyfree
#define beng_langfree_ALREADY_DEFINED
#else
#define yyfree beng_langfree
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin , yyscanner )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex.
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    #define YY_LINENO_REWIND_TO(dst) \
            do {\
                const char *p;\
                for ( p = yy_cp-1; p >= (dst); --p)\
                    if ( *p == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

void yyrestart ( FILE *input_file , yyscan_t yyscanner );
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size , yyscan_t yyscanner );
void yy_delete_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void yy_flush_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
void yypop_buffer_state ( yyscan_t yyscanner );

static void yyensure_buffer_stack ( yyscan_t yyscanner );
static void yy_load_buffer_state ( yyscan_t yyscanner );
static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file , yyscan_t yyscanner );
#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER , yyscanner)

YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size , yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_string ( const char *yy_str , yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len , yyscan_t yyscanner );

void *yyalloc ( yy_size_t , yyscan_t yyscanner );
void *yyrealloc ( void *, yy_size_t , yyscan_t yyscanner );
void yyfree ( void * , yyscan_t yyscanner );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define beng_langwrap(yyscanner) (/*CONSTCOND*/1)
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

typedef const struct yy_trans_info *yy_state_type;

#define yytext_ptr yytext_r

static yy_state_type yy_get_previous_state ( yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  , yyscan_t yyscanner);
static int yy_get_next_buffer ( yyscan_t yyscanner );
static void yynoreturn yy_fatal_error ( const char* msg , yyscan_t yyscanner );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yyg->yy_c_buf_p = yy_cp;
#define YY_NUM_RULES 43
#define YY_END_OF_BUFFER 44
struct yy_trans_info
	{
	flex_int16_t yy_verify;
	flex_int16_t yy_nxt;
	};
static const struct yy_trans_info yy_transition[15567] =
    {
 {   0,   0 }, {   0,15311 }, {   0,   0 }, {   0,15309 }, {   1,2580 },
 {   2,2580 }, {   3,2580 }, {   4,2580 }, {   5,2580 }, {   6,2580 },
 {   7,2580 }, {   8,2580 }, {   9,2582 }, {  10,2582 }, {  11,2580 },
 {  12,2580 }, {  13,2582 }, {  14,2580 }, {  15,2580 }, {  16,2580 },
 {  17,2580 }, {  18,2580 }, {  19,2580 }, {  20,2580 }, {  21,2580 },
 {  22,2580 }, {  23,2580 }, {  24,2580 }, {  25,2580 }, {  26,2580 },
 {  27,2580 }, {  28,2580 }, {  29,2580 }, {  30,2580 }, {  31,2580 },
 {  32,2582 }, {  33,2580 }, {  34,2584 }, {  35,2580 }, {  36,2580 },
 {  37,2580 }, {  38,2580 }, {  39,2580 }, {  40,2586 }, {  41,2588 },
 {  42,2580 }, {  43,2580 }, {  44,2590 }, {  45,2594 }, {  46,2597 },

 {  47,2613 }, {  48,2616 }, {  49,2616 }, {  50,2616 }, {  51,2616 },
 {  52,2616 }, {  53,2616 }, {  54,2616 }, {  55,2616 }, {  56,2616 },
 {  57,2616 }, {  58,2618 }, {  59,2620 }, {  60,2580 }, {  61,2622 },
 {  62,2580 }, {  63,2580 }, {  64,2580 }, {  65,2658 }, {  66,2658 },
 {  67,2658 }, {  68,2658 }, {  69,2658 }, {  70,2658 }, {  71,2658 },
 {  72,2658 }, {  73,2658 }, {  74,2658 }, {  75,2658 }, {  76,2658 },
 {  77,2658 }, {  78,2658 }, {  79,2658 }, {  80,2658 }, {  81,2658 },
 {  82,2658 }, {  83,2658 }, {  84,2658 }, {  85,2658 }, {  86,2658 },
 {  87,2658 }, {  88,2658 }, {  89,2658 }, {  90,2658 }, {  91,2624 },
 {  92,2580 }, {  93,2626 }, {  94,2580 }, {  95,2750 }, {  96,2580 },

 {  97,2658 }, {  98,2842 }, {  99,2658 }, { 100,2934 }, { 101,3026 },
 { 102,3118 }, { 103,2658 }, { 104,2658 }, { 105,3210 }, { 106,2658 },
 { 107,2658 }, { 108,3302 }, { 109,2658 }, { 110,2658 }, { 111,2658 },
 { 112,2658 }, { 113,2658 }, { 114,3394 }, { 115,3486 }, { 116,3578 },
 { 117,2658 }, { 118,3670 }, { 119,2658 }, { 120,2658 }, { 121,2658 },
 { 122,2658 }, { 123,2628 }, { 124,2630 }, { 125,2632 }, { 126,2580 },
 { 127,2580 }, { 128,2580 }, { 129,2580 }, { 130,2580 }, { 131,2580 },
 { 132,2580 }, { 133,2580 }, { 134,2580 }, { 135,2580 }, { 136,2580 },
 { 137,2580 }, { 138,2580 }, { 139,2580 }, { 140,2580 }, { 141,2580 },
 { 142,2580 }, { 143,2580 }, { 144,2580 }, { 145,2580 }, { 146,2580 },

 { 147,2580 }, { 148,2580 }, { 149,2580 }, { 150,2580 }, { 151,2580 },
 { 152,2580 }, { 153,2580 }, { 154,2580 }, { 155,2580 }, { 156,2580 },
 { 157,2580 }, { 158,2580 }, { 159,2580 }, { 160,2580 }, { 161,2580 },
 { 162,2580 }, { 163,2580 }, { 164,2580 }, { 165,2580 }, { 166,2580 },
 { 167,2580 }, { 168,2580 }, { 169,2580 }, { 170,2580 }, { 171,2580 },
 { 172,2580 }, { 173,2580 }, { 174,2580 }, { 175,2580 }, { 176,2580 },
 { 177,2580 }, { 178,2580 }, { 179,2580 }, { 180,2580 }, { 181,2580 },
 { 182,2580 }, { 183,2580 }, { 184,2580 }, { 185,2580 }, { 186,2580 },
 { 187,2580 }, { 188,2580 }, { 189,2580 }, { 190,2580 }, { 191,2580 },
 { 192,2580 }, { 193,2580 }, { 194,2580 }, { 195,2580 }, { 196,2580 },

 { 197,2580 }, { 198,2580 }, { 199,2580 }, { 200,2580 }, { 201,2580 },
 { 202,2580 }, { 203,2580 }, { 204,2580 }, { 205,2580 }, { 206,2580 },
 { 207,2580 }, { 208,2580 }, { 209,2580 }, { 210,2580 }, { 211,2580 },
 { 212,2580 }, { 213,2580 }, { 214,2580 }, { 215,2580 }, { 216,2580 },
 { 217,2580 }, { 218,2580 }, { 219,2580 }, { 220,2580 }, { 221,2580 },
 { 222,2580 }, { 223,2580 }, { 224,2580 }, { 225,2580 }, { 226,2580 },
 { 227,2580 }, { 228,2580 }, { 229,2580 }, { 230,2580 }, { 231,2580 },
 { 232,2580 }, { 233,2580 }, { 234,2580 }, { 235,2580 }, { 236,2580 },
 { 237,2580 }, { 238,2580 }, { 239,2580 }, { 240,2580 }, { 241,2580 },
 { 242,2580 }, { 243,2580 }, { 244,2580 }, { 245,2580 }, { 246,2580 },

 { 247,2580 }, { 248,2580 }, { 249,2580 }, { 250,2580 }, { 251,2580 },
 { 252,2580 }, { 253,2580 }, { 254,2580 }, { 255,2580 }, { 256,2580 },
 {   0,   0 }, {   0,15051 }, {   1,2322 }, {   2,2322 }, {   3,2322 },
 {   4,2322 }, {   5,2322 }, {   6,2322 }, {   7,2322 }, {   8,2322 },
 {   9,2324 }, {  10,2324 }, {  11,2322 }, {  12,2322 }, {  13,2324 },
 {  14,2322 }, {  15,2322 }, {  16,2322 }, {  17,2322 }, {  18,2322 },
 {  19,2322 }, {  20,2322 }, {  21,2322 }, {  22,2322 }, {  23,2322 },
 {  24,2322 }, {  25,2322 }, {  26,2322 }, {  27,2322 }, {  28,2322 },
 {  29,2322 }, {  30,2322 }, {  31,2322 }, {  32,2324 }, {  33,2322 },
 {  34,2326 }, {  35,2322 }, {  36,2322 }, {  37,2322 }, {  38,2322 },

 {  39,2322 }, {  40,2328 }, {  41,2330 }, {  42,2322 }, {  43,2322 },
 {  44,2332 }, {  45,2336 }, {  46,2339 }, {  47,2355 }, {  48,2358 },
 {  49,2358 }, {  50,2358 }, {  51,2358 }, {  52,2358 }, {  53,2358 },
 {  54,2358 }, {  55,2358 }, {  56,2358 }, {  57,2358 }, {  58,2360 },
 {  59,2362 }, {  60,2322 }, {  61,2364 }, {  62,2322 }, {  63,2322 },
 {  64,2322 }, {  65,2400 }, {  66,2400 }, {  67,2400 }, {  68,2400 },
 {  69,2400 }, {  70,2400 }, {  71,2400 }, {  72,2400 }, {  73,2400 },
 {  74,2400 }, {  75,2400 }, {  76,2400 }, {  77,2400 }, {  78,2400 },
 {  79,2400 }, {  80,2400 }, {  81,2400 }, {  82,2400 }, {  83,2400 },
 {  84,2400 }, {  85,2400 }, {  86,2400 }, {  87,2400 }, {  88,2400 },

 {  89,2400 }, {  90,2400 }, {  91,2366 }, {  92,2322 }, {  93,2368 },
 {  94,2322 }, {  95,2492 }, {  96,2322 }, {  97,2400 }, {  98,2584 },
 {  99,2400 }, { 100,2676 }, { 101,2768 }, { 102,2860 }, { 103,2400 },
 { 104,2400 }, { 105,2952 }, { 106,2400 }, { 107,2400 }, { 108,3044 },
 { 109,2400 }, { 110,2400 }, { 111,2400 }, { 112,2400 }, { 113,2400 },
 { 114,3136 }, { 115,3228 }, { 116,3320 }, { 117,2400 }, { 118,3412 },
 { 119,2400 }, { 120,2400 }, { 121,2400 }, { 122,2400 }, { 123,2370 },
 { 124,2372 }, { 125,2374 }, { 126,2322 }, { 127,2322 }, { 128,2322 },
 { 129,2322 }, { 130,2322 }, { 131,2322 }, { 132,2322 }, { 133,2322 },
 { 134,2322 }, { 135,2322 }, { 136,2322 }, { 137,2322 }, { 138,2322 },

 { 139,2322 }, { 140,2322 }, { 141,2322 }, { 142,2322 }, { 143,2322 },
 { 144,2322 }, { 145,2322 }, { 146,2322 }, { 147,2322 }, { 148,2322 },
 { 149,2322 }, { 150,2322 }, { 151,2322 }, { 152,2322 }, { 153,2322 },
 { 154,2322 }, { 155,2322 }, { 156,2322 }, { 157,2322 }, { 158,2322 },
 { 159,2322 }, { 160,2322 }, { 161,2322 }, { 162,2322 }, { 163,2322 },
 { 164,2322 }, { 165,2322 }, { 166,2322 }, { 167,2322 }, { 168,2322 },
 { 169,2322 }, { 170,2322 }, { 171,2322 }, { 172,2322 }, { 173,2322 },
 { 174,2322 }, { 175,2322 }, { 176,2322 }, { 177,2322 }, { 178,2322 },
 { 179,2322 }, { 180,2322 }, { 181,2322 }, { 182,2322 }, { 183,2322 },
 { 184,2322 }, { 185,2322 }, { 186,2322 }, { 187,2322 }, { 188,2322 },

 { 189,2322 }, { 190,2322 }, { 191,2322 }, { 192,2322 }, { 193,2322 },
 { 194,2322 }, { 195,2322 }, { 196,2322 }, { 197,2322 }, { 198,2322 },
 { 199,2322 }, { 200,2322 }, { 201,2322 }, { 202,2322 }, { 203,2322 },
 { 204,2322 }, { 205,2322 }, { 206,2322 }, { 207,2322 }, { 208,2322 },
 { 209,2322 }, { 210,2322 }, { 211,2322 }, { 212,2322 }, { 213,2322 },
 { 214,2322 }, { 215,2322 }, { 216,2322 }, { 217,2322 }, { 218,2322 },
 { 219,2322 }, { 220,2322 }, { 221,2322 }, { 222,2322 }, { 223,2322 },
 { 224,2322 }, { 225,2322 }, { 226,2322 }, { 227,2322 }, { 228,2322 },
 { 229,2322 }, { 230,2322 }, { 231,2322 }, { 232,2322 }, { 233,2322 },
 { 234,2322 }, { 235,2322 }, { 236,2322 }, { 237,2322 }, { 238,2322 },

 { 239,2322 }, { 240,2322 }, { 241,2322 }, { 242,2322 }, { 243,2322 },
 { 244,2322 }, { 245,2322 }, { 246,2322 }, { 247,2322 }, { 248,2322 },
 { 249,2322 }, { 250,2322 }, { 251,2322 }, { 252,2322 }, { 253,2322 },
 { 254,2322 }, { 255,2322 }, { 256,2322 }, {   0,   0 }, {   0,14793 },
 {   1,3278 }, {   2,3278 }, {   3,3278 }, {   4,3278 }, {   5,3278 },
 {   6,3278 }, {   7,3278 }, {   8,3278 }, {   9,3278 }, {  10,3278 },
 {  11,3278 }, {  12,3278 }, {  13,3278 }, {  14,3278 }, {  15,3278 },
 {  16,3278 }, {  17,3278 }, {  18,3278 }, {  19,3278 }, {  20,3278 },
 {  21,3278 }, {  22,3278 }, {  23,3278 }, {  24,3278 }, {  25,3278 },
 {  26,3278 }, {  27,3278 }, {  28,3278 }, {  29,3278 }, {  30,3278 },

 {  31,3278 }, {  32,3278 }, {  33,3278 }, {  34,3278 }, {  35,3278 },
 {  36,3278 }, {  37,3278 }, {  38,3278 }, {  39,3278 }, {  40,3278 },
 {  41,3278 }, {  42,3536 }, {  43,3278 }, {  44,3278 }, {  45,3278 },
 {  46,3278 }, {  47,3794 }, {  48,3278 }, {  49,3278 }, {  50,3278 },
 {  51,3278 }, {  52,3278 }, {  53,3278 }, {  54,3278 }, {  55,3278 },
 {  56,3278 }, {  57,3278 }, {  58,3278 }, {  59,3278 }, {  60,3278 },
 {  61,3278 }, {  62,3278 }, {  63,3278 }, {  64,3278 }, {  65,3278 },
 {  66,3278 }, {  67,3278 }, {  68,3278 }, {  69,3278 }, {  70,3278 },
 {  71,3278 }, {  72,3278 }, {  73,3278 }, {  74,3278 }, {  75,3278 },
 {  76,3278 }, {  77,3278 }, {  78,3278 }, {  79,3278 }, {  80,3278 },

 {  81,3278 }, {  82,3278 }, {  83,3278 }, {  84,3278 }, {  85,3278 },
 {  86,3278 }, {  87,3278 }, {  88,3278 }, {  89,3278 }, {  90,3278 },
 {  91,3278 }, {  92,3278 }, {  93,3278 }, {  94,3278 }, {  95,3278 },
 {  96,3278 }, {  97,3278 }, {  98,3278 }, {  99,3278 }, { 100,3278 },
 { 101,3278 }, { 102,3278 }, { 103,3278 }, { 104,3278 }, { 105,3278 },
 { 106,3278 }, { 107,3278 }, { 108,3278 }, { 109,3278 }, { 110,3278 },
 { 111,3278 }, { 112,3278 }, { 113,3278 }, { 114,3278 }, { 115,3278 },
 { 116,3278 }, { 117,3278 }, { 118,3278 }, { 119,3278 }, { 120,3278 },
 { 121,3278 }, { 122,3278 }, { 123,3278 }, { 124,3278 }, { 125,3278 },
 { 126,3278 }, { 127,3278 }, { 128,4052 }, { 129,4052 }, { 130,4052 },

 { 131,4052 }, { 132,4052 }, { 133,4052 }, { 134,4052 }, { 135,4052 },
 { 136,4052 }, { 137,4052 }, { 138,4052 }, { 139,4052 }, { 140,4052 },
 { 141,4052 }, { 142,4052 }, { 143,4052 }, { 144,4052 }, { 145,4052 },
 { 146,4052 }, { 147,4052 }, { 148,4052 }, { 149,4052 }, { 150,4052 },
 { 151,4052 }, { 152,4052 }, { 153,4052 }, { 154,4052 }, { 155,4052 },
 { 156,4052 }, { 157,4052 }, { 158,4052 }, { 159,4052 }, { 160,4052 },
 { 161,4052 }, { 162,4052 }, { 163,4052 }, { 164,4052 }, { 165,4052 },
 { 166,4052 }, { 167,4052 }, { 168,4052 }, { 169,4052 }, { 170,4052 },
 { 171,4052 }, { 172,4052 }, { 173,4052 }, { 174,4052 }, { 175,4052 },
 { 176,4052 }, { 177,4052 }, { 178,4052 }, { 179,4052 }, { 180,4052 },

 { 181,4052 }, { 182,4052 }, { 183,4052 }, { 184,4052 }, { 185,4052 },
 { 186,4052 }, { 187,4052 }, { 188,4052 }, { 189,4052 }, { 190,4052 },
 { 191,4052 }, { 192,4052 }, { 193,4052 }, { 194,4310 }, { 195,4310 },
 { 196,4310 }, { 197,4310 }, { 198,4310 }, { 199,4310 }, { 200,4310 },
 { 201,4310 }, { 202,4310 }, { 203,4310 }, { 204,4310 }, { 205,4310 },
 { 206,4310 }, { 207,4310 }, { 208,4310 }, { 209,4310 }, { 210,4310 },
 { 211,4310 }, { 212,4310 }, { 213,4310 }, { 214,4310 }, { 215,4310 },
 { 216,4310 }, { 217,4310 }, { 218,4310 }, { 219,4310 }, { 220,4310 },
 { 221,4310 }, { 222,4310 }, { 223,4310 }, { 224,4568 }, { 225,4568 },
 { 226,4568 }, { 227,4568 }, { 228,4568 }, { 229,4568 }, { 230,4568 },

 { 231,4568 }, { 232,4568 }, { 233,4568 }, { 234,4568 }, { 235,4568 },
 { 236,4568 }, { 237,4568 }, { 238,4568 }, { 239,4568 }, { 240,4826 },
 { 241,4826 }, { 242,4826 }, { 243,4826 }, { 244,4826 }, { 245,4052 },
 { 246,4052 }, { 247,4052 }, { 248,4052 }, { 249,4052 }, { 250,4052 },
 { 251,4052 }, { 252,4052 }, { 253,4052 }, { 254,4052 }, { 255,4052 },
 { 256,3278 }, {   0,   0 }, {   0,14535 }, {   1,3020 }, {   2,3020 },
 {   3,3020 }, {   4,3020 }, {   5,3020 }, {   6,3020 }, {   7,3020 },
 {   8,3020 }, {   9,3020 }, {  10,3020 }, {  11,3020 }, {  12,3020 },
 {  13,3020 }, {  14,3020 }, {  15,3020 }, {  16,3020 }, {  17,3020 },
 {  18,3020 }, {  19,3020 }, {  20,3020 }, {  21,3020 }, {  22,3020 },

 {  23,3020 }, {  24,3020 }, {  25,3020 }, {  26,3020 }, {  27,3020 },
 {  28,3020 }, {  29,3020 }, {  30,3020 }, {  31,3020 }, {  32,3020 },
 {  33,3020 }, {  34,3020 }, {  35,3020 }, {  36,3020 }, {  37,3020 },
 {  38,3020 }, {  39,3020 }, {  40,3020 }, {  41,3020 }, {  42,3278 },
 {  43,3020 }, {  44,3020 }, {  45,3020 }, {  46,3020 }, {  47,3536 },
 {  48,3020 }, {  49,3020 }, {  50,3020 }, {  51,3020 }, {  52,3020 },
 {  53,3020 }, {  54,3020 }, {  55,3020 }, {  56,3020 }, {  57,3020 },
 {  58,3020 }, {  59,3020 }, {  60,3020 }, {  61,3020 }, {  62,3020 },
 {  63,3020 }, {  64,3020 }, {  65,3020 }, {  66,3020 }, {  67,3020 },
 {  68,3020 }, {  69,3020 }, {  70,3020 }, {  71,3020 }, {  72,3020 },

 {  73,3020 }, {  74,3020 }, {  75,3020 }, {  76,3020 }, {  77,3020 },
 {  78,3020 }, {  79,3020 }, {  80,3020 }, {  81,3020 }, {  82,3020 },
 {  83,3020 }, {  84,3020 }, {  85,3020 }, {  86,3020 }, {  87,3020 },
 {  88,3020 }, {  89,3020 }, {  90,3020 }, {  91,3020 }, {  92,3020 },
 {  93,3020 }, {  94,3020 }, {  95,3020 }, {  96,3020 }, {  97,3020 },
 {  98,3020 }, {  99,3020 }, { 100,3020 }, { 101,3020 }, { 102,3020 },
 { 103,3020 }, { 104,3020 }, { 105,3020 }, { 106,3020 }, { 107,3020 },
 { 108,3020 }, { 109,3020 }, { 110,3020 }, { 111,3020 }, { 112,3020 },
 { 113,3020 }, { 114,3020 }, { 115,3020 }, { 116,3020 }, { 117,3020 },
 { 118,3020 }, { 119,3020 }, { 120,3020 }, { 121,3020 }, { 122,3020 },

 { 123,3020 }, { 124,3020 }, { 125,3020 }, { 126,3020 }, { 127,3020 },
 { 128,3794 }, { 129,3794 }, { 130,3794 }, { 131,3794 }, { 132,3794 },
 { 133,3794 }, { 134,3794 }, { 135,3794 }, { 136,3794 }, { 137,3794 },
 { 138,3794 }, { 139,3794 }, { 140,3794 }, { 141,3794 }, { 142,3794 },
 { 143,3794 }, { 144,3794 }, { 145,3794 }, { 146,3794 }, { 147,3794 },
 { 148,3794 }, { 149,3794 }, { 150,3794 }, { 151,3794 }, { 152,3794 },
 { 153,3794 }, { 154,3794 }, { 155,3794 }, { 156,3794 }, { 157,3794 },
 { 158,3794 }, { 159,3794 }, { 160,3794 }, { 161,3794 }, { 162,3794 },
 { 163,3794 }, { 164,3794 }, { 165,3794 }, { 166,3794 }, { 167,3794 },
 { 168,3794 }, { 169,3794 }, { 170,3794 }, { 171,3794 }, { 172,3794 },

 { 173,3794 }, { 174,3794 }, { 175,3794 }, { 176,3794 }, { 177,3794 },
 { 178,3794 }, { 179,3794 }, { 180,3794 }, { 181,3794 }, { 182,3794 },
 { 183,3794 }, { 184,3794 }, { 185,3794 }, { 186,3794 }, { 187,3794 },
 { 188,3794 }, { 189,3794 }, { 190,3794 }, { 191,3794 }, { 192,3794 },
 { 193,3794 }, { 194,4052 }, { 195,4052 }, { 196,4052 }, { 197,4052 },
 { 198,4052 }, { 199,4052 }, { 200,4052 }, { 201,4052 }, { 202,4052 },
 { 203,4052 }, { 204,4052 }, { 205,4052 }, { 206,4052 }, { 207,4052 },
 { 208,4052 }, { 209,4052 }, { 210,4052 }, { 211,4052 }, { 212,4052 },
 { 213,4052 }, { 214,4052 }, { 215,4052 }, { 216,4052 }, { 217,4052 },
 { 218,4052 }, { 219,4052 }, { 220,4052 }, { 221,4052 }, { 222,4052 },

 { 223,4052 }, { 224,4310 }, { 225,4310 }, { 226,4310 }, { 227,4310 },
 { 228,4310 }, { 229,4310 }, { 230,4310 }, { 231,4310 }, { 232,4310 },
 { 233,4310 }, { 234,4310 }, { 235,4310 }, { 236,4310 }, { 237,4310 },
 { 238,4310 }, { 239,4310 }, { 240,4568 }, { 241,4568 }, { 242,4568 },
 { 243,4568 }, { 244,4568 }, { 245,3794 }, { 246,3794 }, { 247,3794 },
 { 248,3794 }, { 249,3794 }, { 250,3794 }, { 251,3794 }, { 252,3794 },
 { 253,3794 }, { 254,3794 }, { 255,3794 }, { 256,3020 }, {   0,   0 },
 {   0,14277 }, {   1,4568 }, {   2,4568 }, {   3,4568 }, {   4,4568 },
 {   5,4568 }, {   6,4568 }, {   7,4568 }, {   8,4568 }, {   9,4568 },
 {  10,4568 }, {  11,4568 }, {  12,4568 }, {  13,1602 }, {  14,4568 },

 {  15,4568 }, {  16,4568 }, {  17,4568 }, {  18,4568 }, {  19,4568 },
 {  20,4568 }, {  21,4568 }, {  22,4568 }, {  23,4568 }, {  24,4568 },
 {  25,4568 }, {  26,4568 }, {  27,4568 }, {  28,4568 }, {  29,4568 },
 {  30,4568 }, {  31,4568 }, {  32,4568 }, {  33,4568 }, {  34,4568 },
 {  35,4568 }, {  36,4568 }, {  37,4568 }, {  38,4568 }, {  39,4568 },
 {  40,4568 }, {  41,4568 }, {  42,4568 }, {  43,4568 }, {  44,4568 },
 {  45,4568 }, {  46,4568 }, {  47,4568 }, {  48,4568 }, {  49,4568 },
 {  50,4568 }, {  51,4568 }, {  52,4568 }, {  53,4568 }, {  54,4568 },
 {  55,4568 }, {  56,4568 }, {  57,4568 }, {  58,4568 }, {  59,4568 },
 {  60,4568 }, {  61,4568 }, {  62,4568 }, {  63,4568 }, {  64,4568 },

 {  65,4568 }, {  66,4568 }, {  67,4568 }, {  68,4568 }, {  69,4568 },
 {  70,4568 }, {  71,4568 }, {  72,4568 }, {  73,4568 }, {  74,4568 },
 {  75,4568 }, {  76,4568 }, {  77,4568 }, {  78,4568 }, {  79,4568 },
 {  80,4568 }, {  81,4568 }, {  82,4568 }, {  83,4568 }, {  84,4568 },
 {  85,4568 }, {  86,4568 }, {  87,4568 }, {  88,4568 }, {  89,4568 },
 {  90,4568 }, {  91,4568 }, {  92,4568 }, {  93,4568 }, {  94,4568 },
 {  95,4568 }, {  96,4568 }, {  97,4568 }, {  98,4568 }, {  99,4568 },
 { 100,4568 }, { 101,4568 }, { 102,4568 }, { 103,4568 }, { 104,4568 },
 { 105,4568 }, { 106,4568 }, { 107,4568 }, { 108,4568 }, { 109,4568 },
 { 110,4568 }, { 111,4568 }, { 112,4568 }, { 113,4568 }, { 114,4568 },

 { 115,4568 }, { 116,4568 }, { 117,4568 }, { 118,4568 }, { 119,4568 },
 { 120,4568 }, { 121,4568 }, { 122,4568 }, { 123,4568 }, { 124,4568 },
 { 125,4568 }, { 126,4568 }, { 127,4568 }, { 128,4568 }, { 129,4568 },
 { 130,4568 }, { 131,4568 }, { 132,4568 }, { 133,4568 }, { 134,4568 },
 { 135,4568 }, { 136,4568 }, { 137,4568 }, { 138,4568 }, { 139,4568 },
 { 140,4568 }, { 141,4568 }, { 142,4568 }, { 143,4568 }, { 144,4568 },
 { 145,4568 }, { 146,4568 }, { 147,4568 }, { 148,4568 }, { 149,4568 },
 { 150,4568 }, { 151,4568 }, { 152,4568 }, { 153,4568 }, { 154,4568 },
 { 155,4568 }, { 156,4568 }, { 157,4568 }, { 158,4568 }, { 159,4568 },
 { 160,4568 }, { 161,4568 }, { 162,4568 }, { 163,4568 }, { 164,4568 },

 { 165,4568 }, { 166,4568 }, { 167,4568 }, { 168,4568 }, { 169,4568 },
 { 170,4568 }, { 171,4568 }, { 172,4568 }, { 173,4568 }, { 174,4568 },
 { 175,4568 }, { 176,4568 }, { 177,4568 }, { 178,4568 }, { 179,4568 },
 { 180,4568 }, { 181,4568 }, { 182,4568 }, { 183,4568 }, { 184,4568 },
 { 185,4568 }, { 186,4568 }, { 187,4568 }, { 188,4568 }, { 189,4568 },
 { 190,4568 }, { 191,4568 }, { 192,4568 }, { 193,4568 }, { 194,4568 },
 { 195,4568 }, { 196,4568 }, { 197,4568 }, { 198,4568 }, { 199,4568 },
 { 200,4568 }, { 201,4568 }, { 202,4568 }, { 203,4568 }, { 204,4568 },
 { 205,4568 }, { 206,4568 }, { 207,4568 }, { 208,4568 }, { 209,4568 },
 { 210,4568 }, { 211,4568 }, { 212,4568 }, { 213,4568 }, { 214,4568 },

 { 215,4568 }, { 216,4568 }, { 217,4568 }, { 218,4568 }, { 219,4568 },
 { 220,4568 }, { 221,4568 }, { 222,4568 }, { 223,4568 }, { 224,4568 },
 { 225,4568 }, { 226,4568 }, { 227,4568 }, { 228,4568 }, { 229,4568 },
 { 230,4568 }, { 231,4568 }, { 232,4568 }, { 233,4568 }, { 234,4568 },
 { 235,4568 }, { 236,4568 }, { 237,4568 }, { 238,4568 }, { 239,4568 },
 { 240,4568 }, { 241,4568 }, { 242,4568 }, { 243,4568 }, { 244,4568 },
 { 245,4568 }, { 246,4568 }, { 247,4568 }, { 248,4568 }, { 249,4568 },
 { 250,4568 }, { 251,4568 }, { 252,4568 }, { 253,4568 }, { 254,4568 },
 { 255,4568 }, { 256,4568 }, {   0,   0 }, {   0,14019 }, {   1,4310 },
 {   2,4310 }, {   3,4310 }, {   4,4310 }, {   5,4310 }, {   6,4310 },

 {   7,4310 }, {   8,4310 }, {   9,4310 }, {  10,4310 }, {  11,4310 },
 {  12,4310 }, {  13,1344 }, {  14,4310 }, {  15,4310 }, {  16,4310 },
 {  17,4310 }, {  18,4310 }, {  19,4310 }, {  20,4310 }, {  21,4310 },
 {  22,4310 }, {  23,4310 }, {  24,4310 }, {  25,4310 }, {  26,4310 },
 {  27,4310 }, {  28,4310 }, {  29,4310 }, {  30,4310 }, {  31,4310 },
 {  32,4310 }, {  33,4310 }, {  34,4310 }, {  35,4310 }, {  36,4310 },
 {  37,4310 }, {  38,4310 }, {  39,4310 }, {  40,4310 }, {  41,4310 },
 {  42,4310 }, {  43,4310 }, {  44,4310 }, {  45,4310 }, {  46,4310 },
 {  47,4310 }, {  48,4310 }, {  49,4310 }, {  50,4310 }, {  51,4310 },
 {  52,4310 }, {  53,4310 }, {  54,4310 }, {  55,4310 }, {  56,4310 },

 {  57,4310 }, {  58,4310 }, {  59,4310 }, {  60,4310 }, {  61,4310 },
 {  62,4310 }, {  63,4310 }, {  64,4310 }, {  65,4310 }, {  66,4310 },
 {  67,4310 }, {  68,4310 }, {  69,4310 }, {  70,4310 }, {  71,4310 },
 {  72,4310 }, {  73,4310 }, {  74,4310 }, {  75,4310 }, {  76,4310 },
 {  77,4310 }, {  78,4310 }, {  79,4310 }, {  80,4310 }, {  81,4310 },
 {  82,4310 }, {  83,4310 }, {  84,4310 }, {  85,4310 }, {  86,4310 },
 {  87,4310 }, {  88,4310 }, {  89,4310 }, {  90,4310 }, {  91,4310 },
 {  92,4310 }, {  93,4310 }, {  94,4310 }, {  95,4310 }, {  96,4310 },
 {  97,4310 }, {  98,4310 }, {  99,4310 }, { 100,4310 }, { 101,4310 },
 { 102,4310 }, { 103,4310 }, { 104,4310 }, { 105,4310 }, { 106,4310 },

 { 107,4310 }, { 108,4310 }, { 109,4310 }, { 110,4310 }, { 111,4310 },
 { 112,4310 }, { 113,4310 }, { 114,4310 }, { 115,4310 }, { 116,4310 },
 { 117,4310 }, { 118,4310 }, { 119,4310 }, { 120,4310 }, { 121,4310 },
 { 122,4310 }, { 123,4310 }, { 124,4310 }, { 125,4310 }, { 126,4310 },
 { 127,4310 }, { 128,4310 }, { 129,4310 }, { 130,4310 }, { 131,4310 },
 { 132,4310 }, { 133,4310 }, { 134,4310 }, { 135,4310 }, { 136,4310 },
 { 137,4310 }, { 138,4310 }, { 139,4310 }, { 140,4310 }, { 141,4310 },
 { 142,4310 }, { 143,4310 }, { 144,4310 }, { 145,4310 }, { 146,4310 },
 { 147,4310 }, { 148,4310 }, { 149,4310 }, { 150,4310 }, { 151,4310 },
 { 152,4310 }, { 153,4310 }, { 154,4310 }, { 155,4310 }, { 156,4310 },

 { 157,4310 }, { 158,4310 }, { 159,4310 }, { 160,4310 }, { 161,4310 },
 { 162,4310 }, { 163,4310 }, { 164,4310 }, { 165,4310 }, { 166,4310 },
 { 167,4310 }, { 168,4310 }, { 169,4310 }, { 170,4310 }, { 171,4310 },
 { 172,4310 }, { 173,4310 }, { 174,4310 }, { 175,4310 }, { 176,4310 },
 { 177,4310 }, { 178,4310 }, { 179,4310 }, { 180,4310 }, { 181,4310 },
 { 182,4310 }, { 183,4310 }, { 184,4310 }, { 185,4310 }, { 186,4310 },
 { 187,4310 }, { 188,4310 }, { 189,4310 }, { 190,4310 }, { 191,4310 },
 { 192,4310 }, { 193,4310 }, { 194,4310 }, { 195,4310 }, { 196,4310 },
 { 197,4310 }, { 198,4310 }, { 199,4310 }, { 200,4310 }, { 201,4310 },
 { 202,4310 }, { 203,4310 }, { 204,4310 }, { 205,4310 }, { 206,4310 },

 { 207,4310 }, { 208,4310 }, { 209,4310 }, { 210,4310 }, { 211,4310 },
 { 212,4310 }, { 213,4310 }, { 214,4310 }, { 215,4310 }, { 216,4310 },
 { 217,4310 }, { 218,4310 }, { 219,4310 }, { 220,4310 }, { 221,4310 },
 { 222,4310 }, { 223,4310 }, { 224,4310 }, { 225,4310 }, { 226,4310 },
 { 227,4310 }, { 228,4310 }, { 229,4310 }, { 230,4310 }, { 231,4310 },
 { 232,4310 }, { 233,4310 }, { 234,4310 }, { 235,4310 }, { 236,4310 },
 { 237,4310 }, { 238,4310 }, { 239,4310 }, { 240,4310 }, { 241,4310 },
 { 242,4310 }, { 243,4310 }, { 244,4310 }, { 245,4310 }, { 246,4310 },
 { 247,4310 }, { 248,4310 }, { 249,4310 }, { 250,4310 }, { 251,4310 },
 { 252,4310 }, { 253,4310 }, { 254,4310 }, { 255,4310 }, { 256,4310 },

 {   0,   0 }, {   0,13761 }, {   1,1032 }, {   2,1032 }, {   3,1032 },
 {   4,1032 }, {   5,1032 }, {   6,1032 }, {   7,1032 }, {   8,1032 },
 {   9,1032 }, {  10,4310 }, {  11,1032 }, {  12,1032 }, {  13,4310 },
 {  14,1032 }, {  15,1032 }, {  16,1032 }, {  17,1032 }, {  18,1032 },
 {  19,1032 }, {  20,1032 }, {  21,1032 }, {  22,1032 }, {  23,1032 },
 {  24,1032 }, {  25,1032 }, {  26,1032 }, {  27,1032 }, {  28,1032 },
 {  29,1032 }, {  30,1032 }, {  31,1032 }, {  32,4310 }, {  33,4310 },
 {  34,1088 }, {  35,4310 }, {  36,4310 }, {  37,4310 }, {  38,4310 },
 {  39,4310 }, {  40,4310 }, {  41,4310 }, {  42,4310 }, {  43,4310 },
 {  44,4310 }, {  45,4310 }, {  46,4310 }, {  47,4310 }, {  48,4310 },

 {  49,4310 }, {  50,4310 }, {  51,4310 }, {  52,4310 }, {  53,4310 },
 {  54,4310 }, {  55,4310 }, {  56,4310 }, {  57,4310 }, {  58,4310 },
 {  59,4310 }, {  60,4310 }, {  61,4310 }, {  62,4310 }, {  63,4310 },
 {  64,4310 }, {  65,4310 }, {  66,4310 }, {  67,4310 }, {  68,4310 },
 {  69,4310 }, {  70,4310 }, {  71,4310 }, {  72,4310 }, {  73,4310 },
 {  74,4310 }, {  75,4310 }, {  76,4310 }, {  77,4310 }, {  78,4310 },
 {  79,4310 }, {  80,4310 }, {  81,4310 }, {  82,4310 }, {  83,4310 },
 {  84,4310 }, {  85,4310 }, {  86,4310 }, {  87,4310 }, {  88,4310 },
 {  89,4310 }, {  90,4310 }, {  91,4310 }, {  92,4567 }, {  93,4310 },
 {  94,4310 }, {  95,4310 }, {  96,4310 }, {  97,4310 }, {  98,4310 },

 {  99,4310 }, { 100,4310 }, { 101,4310 }, { 102,4310 }, { 103,4310 },
 { 104,4310 }, { 105,4310 }, { 106,4310 }, { 107,4310 }, { 108,4310 },
 { 109,4310 }, { 110,4310 }, { 111,4310 }, { 112,4310 }, { 113,4310 },
 { 114,4310 }, { 115,4310 }, { 116,4310 }, { 117,4310 }, { 118,4310 },
 { 119,4310 }, { 120,4310 }, { 121,4310 }, { 122,4310 }, { 123,4310 },
 { 124,4310 }, { 125,4310 }, { 126,4310 }, { 127,1032 }, { 128,4310 },
 { 129,4310 }, { 130,4310 }, { 131,4310 }, { 132,4310 }, { 133,4310 },
 { 134,4310 }, { 135,4310 }, { 136,4310 }, { 137,4310 }, { 138,4310 },
 { 139,4310 }, { 140,4310 }, { 141,4310 }, { 142,4310 }, { 143,4310 },
 { 144,4310 }, { 145,4310 }, { 146,4310 }, { 147,4310 }, { 148,4310 },

 { 149,4310 }, { 150,4310 }, { 151,4310 }, { 152,4310 }, { 153,4310 },
 { 154,4310 }, { 155,4310 }, { 156,4310 }, { 157,4310 }, { 158,4310 },
 { 159,4310 }, { 160,4310 }, { 161,4310 }, { 162,4310 }, { 163,4310 },
 { 164,4310 }, { 165,4310 }, { 166,4310 }, { 167,4310 }, { 168,4310 },
 { 169,4310 }, { 170,4310 }, { 171,4310 }, { 172,4310 }, { 173,4310 },
 { 174,4310 }, { 175,4310 }, { 176,4310 }, { 177,4310 }, { 178,4310 },
 { 179,4310 }, { 180,4310 }, { 181,4310 }, { 182,4310 }, { 183,4310 },
 { 184,4310 }, { 185,4310 }, { 186,4310 }, { 187,4310 }, { 188,4310 },
 { 189,4310 }, { 190,4310 }, { 191,4310 }, { 192,4310 }, { 193,4310 },
 { 194,4657 }, { 195,4657 }, { 196,4657 }, { 197,4657 }, { 198,4657 },

 { 199,4657 }, { 200,4657 }, { 201,4657 }, { 202,4657 }, { 203,4657 },
 { 204,4657 }, { 205,4657 }, { 206,4657 }, { 207,4657 }, { 208,4657 },
 { 209,4657 }, { 210,4657 }, { 211,4657 }, { 212,4657 }, { 213,4657 },
 { 214,4657 }, { 215,4657 }, { 216,4657 }, { 217,4657 }, { 218,4657 },
 { 219,4657 }, { 220,4657 }, { 221,4657 }, { 222,4657 }, { 223,4657 },
 { 224,4914 }, { 225,4914 }, { 226,4914 }, { 227,4914 }, { 228,4914 },
 { 229,4914 }, { 230,4914 }, { 231,4914 }, { 232,4914 }, { 233,4914 },
 { 234,4914 }, { 235,4914 }, { 236,4914 }, { 237,4914 }, { 238,4914 },
 { 239,4914 }, { 240,5171 }, { 241,5171 }, { 242,5171 }, { 243,5171 },
 { 244,5171 }, { 245,4310 }, { 246,4310 }, { 247,4310 }, { 248,4310 },

 { 249,4310 }, { 250,4310 }, { 251,4310 }, { 252,4310 }, { 253,4310 },
 { 254,4310 }, { 255,4310 }, { 256,1032 }, {   0,   0 }, {   0,13503 },
 {   1, 774 }, {   2, 774 }, {   3, 774 }, {   4, 774 }, {   5, 774 },
 {   6, 774 }, {   7, 774 }, {   8, 774 }, {   9, 774 }, {  10,4052 },
 {  11, 774 }, {  12, 774 }, {  13,4052 }, {  14, 774 }, {  15, 774 },
 {  16, 774 }, {  17, 774 }, {  18, 774 }, {  19, 774 }, {  20, 774 },
 {  21, 774 }, {  22, 774 }, {  23, 774 }, {  24, 774 }, {  25, 774 },
 {  26, 774 }, {  27, 774 }, {  28, 774 }, {  29, 774 }, {  30, 774 },
 {  31, 774 }, {  32,4052 }, {  33,4052 }, {  34, 830 }, {  35,4052 },
 {  36,4052 }, {  37,4052 }, {  38,4052 }, {  39,4052 }, {  40,4052 },

 {  41,4052 }, {  42,4052 }, {  43,4052 }, {  44,4052 }, {  45,4052 },
 {  46,4052 }, {  47,4052 }, {  48,4052 }, {  49,4052 }, {  50,4052 },
 {  51,4052 }, {  52,4052 }, {  53,4052 }, {  54,4052 }, {  55,4052 },
 {  56,4052 }, {  57,4052 }, {  58,4052 }, {  59,4052 }, {  60,4052 },
 {  61,4052 }, {  62,4052 }, {  63,4052 }, {  64,4052 }, {  65,4052 },
 {  66,4052 }, {  67,4052 }, {  68,4052 }, {  69,4052 }, {  70,4052 },
 {  71,4052 }, {  72,4052 }, {  73,4052 }, {  74,4052 }, {  75,4052 },
 {  76,4052 }, {  77,4052 }, {  78,4052 }, {  79,4052 }, {  80,4052 },
 {  81,4052 }, {  82,4052 }, {  83,4052 }, {  84,4052 }, {  85,4052 },
 {  86,4052 }, {  87,4052 }, {  88,4052 }, {  89,4052 }, {  90,4052 },

 {  91,4052 }, {  92,4309 }, {  93,4052 }, {  94,4052 }, {  95,4052 },
 {  96,4052 }, {  97,4052 }, {  98,4052 }, {  99,4052 }, { 100,4052 },
 { 101,4052 }, { 102,4052 }, { 103,4052 }, { 104,4052 }, { 105,4052 },
 { 106,4052 }, { 107,4052 }, { 108,4052 }, { 109,4052 }, { 110,4052 },
 { 111,4052 }, { 112,4052 }, { 113,4052 }, { 114,4052 }, { 115,4052 },
 { 116,4052 }, { 117,4052 }, { 118,4052 }, { 119,4052 }, { 120,4052 },
 { 121,4052 }, { 122,4052 }, { 123,4052 }, { 124,4052 }, { 125,4052 },
 { 126,4052 }, { 127, 774 }, { 128,4052 }, { 129,4052 }, { 130,4052 },
 { 131,4052 }, { 132,4052 }, { 133,4052 }, { 134,4052 }, { 135,4052 },
 { 136,4052 }, { 137,4052 }, { 138,4052 }, { 139,4052 }, { 140,4052 },

 { 141,4052 }, { 142,4052 }, { 143,4052 }, { 144,4052 }, { 145,4052 },
 { 146,4052 }, { 147,4052 }, { 148,4052 }, { 149,4052 }, { 150,4052 },
 { 151,4052 }, { 152,4052 }, { 153,4052 }, { 154,4052 }, { 155,4052 },
 { 156,4052 }, { 157,4052 }, { 158,4052 }, { 159,4052 }, { 160,4052 },
 { 161,4052 }, { 162,4052 }, { 163,4052 }, { 164,4052 }, { 165,4052 },
 { 166,4052 }, { 167,4052 }, { 168,4052 }, { 169,4052 }, { 170,4052 },
 { 171,4052 }, { 172,4052 }, { 173,4052 }, { 174,4052 }, { 175,4052 },
 { 176,4052 }, { 177,4052 }, { 178,4052 }, { 179,4052 }, { 180,4052 },
 { 181,4052 }, { 182,4052 }, { 183,4052 }, { 184,4052 }, { 185,4052 },
 { 186,4052 }, { 187,4052 }, { 188,4052 }, { 189,4052 }, { 190,4052 },

 { 191,4052 }, { 192,4052 }, { 193,4052 }, { 194,4399 }, { 195,4399 },
 { 196,4399 }, { 197,4399 }, { 198,4399 }, { 199,4399 }, { 200,4399 },
 { 201,4399 }, { 202,4399 }, { 203,4399 }, { 204,4399 }, { 205,4399 },
 { 206,4399 }, { 207,4399 }, { 208,4399 }, { 209,4399 }, { 210,4399 },
 { 211,4399 }, { 212,4399 }, { 213,4399 }, { 214,4399 }, { 215,4399 },
 { 216,4399 }, { 217,4399 }, { 218,4399 }, { 219,4399 }, { 220,4399 },
 { 221,4399 }, { 222,4399 }, { 223,4399 }, { 224,4656 }, { 225,4656 },
 { 226,4656 }, { 227,4656 }, { 228,4656 }, { 229,4656 }, { 230,4656 },
 { 231,4656 }, { 232,4656 }, { 233,4656 }, { 234,4656 }, { 235,4656 },
 { 236,4656 }, { 237,4656 }, { 238,4656 }, { 239,4656 }, { 240,4913 },

 { 241,4913 }, { 242,4913 }, { 243,4913 }, { 244,4913 }, { 245,4052 },
 { 246,4052 }, { 247,4052 }, { 248,4052 }, { 249,4052 }, { 250,4052 },
 { 251,4052 }, { 252,4052 }, { 253,4052 }, { 254,4052 }, { 255,4052 },
 { 256, 774 }, {   0,   0 }, {   0,13245 }, {   1, 516 }, {   2, 516 },
 {   3, 516 }, {   4, 516 }, {   5, 516 }, {   6, 516 }, {   7, 516 },
 {   8, 516 }, {   9, 516 }, {  10, 516 }, {  11, 516 }, {  12, 516 },
 {  13, 516 }, {  14, 516 }, {  15, 516 }, {  16, 516 }, {  17, 516 },
 {  18, 516 }, {  19, 516 }, {  20, 516 }, {  21, 516 }, {  22, 516 },
 {  23, 516 }, {  24, 516 }, {  25, 516 }, {  26, 516 }, {  27, 516 },
 {  28, 516 }, {  29, 516 }, {  30, 516 }, {  31, 516 }, {  32, 516 },

 {  33, 516 }, {  34, 516 }, {  35, 516 }, {  36, 516 }, {  37, 516 },
 {  38, 516 }, {  39, 516 }, {  40, 516 }, {  41, 516 }, {  42, 516 },
 {  43, 516 }, {  44, 516 }, {  45, 516 }, {  46, 516 }, {  47, 516 },
 {  48, 516 }, {  49, 516 }, {  50, 516 }, {  51, 516 }, {  52, 516 },
 {  53, 516 }, {  54, 516 }, {  55, 516 }, {  56, 516 }, {  57, 516 },
 {  58, 516 }, {  59, 516 }, {  60, 516 }, {  61, 516 }, {  62, 516 },
 {  63, 516 }, {  64, 516 }, {  65, 516 }, {  66, 516 }, {  67, 516 },
 {  68, 516 }, {  69, 516 }, {  70, 516 }, {  71, 516 }, {  72, 516 },
 {  73, 516 }, {  74, 516 }, {  75, 516 }, {  76, 516 }, {  77, 516 },
 {  78, 516 }, {  79, 516 }, {  80, 516 }, {  81, 516 }, {  82, 516 },

 {  83, 516 }, {  84, 516 }, {  85, 516 }, {  86, 516 }, {  87, 516 },
 {  88, 516 }, {  89, 516 }, {  90, 516 }, {  91, 516 }, {  92, 516 },
 {  93, 516 }, {  94, 516 }, {  95, 516 }, {  96, 516 }, {  97, 516 },
 {  98, 516 }, {  99, 516 }, { 100, 516 }, { 101, 516 }, { 102, 516 },
 { 103, 516 }, { 104, 516 }, { 105, 516 }, { 106, 516 }, { 107, 516 },
 { 108, 516 }, { 109, 516 }, { 110, 516 }, { 111, 516 }, { 112, 516 },
 { 113, 516 }, { 114, 516 }, { 115, 516 }, { 116, 516 }, { 117, 516 },
 { 118, 516 }, { 119, 516 }, { 120, 516 }, { 121, 516 }, { 122, 516 },
 { 123, 516 }, { 124, 516 }, { 125, 516 }, { 126, 516 }, { 127, 516 },
 { 128, 516 }, { 129, 516 }, { 130, 516 }, { 131, 516 }, { 132, 516 },

 { 133, 516 }, { 134, 516 }, { 135, 516 }, { 136, 516 }, { 137, 516 },
 { 138, 516 }, { 139, 516 }, { 140, 516 }, { 141, 516 }, { 142, 516 },
 { 143, 516 }, { 144, 516 }, { 145, 516 }, { 146, 516 }, { 147, 516 },
 { 148, 516 }, { 149, 516 }, { 150, 516 }, { 151, 516 }, { 152, 516 },
 { 153, 516 }, { 154, 516 }, { 155, 516 }, { 156, 516 }, { 157, 516 },
 { 158, 516 }, { 159, 516 }, { 160, 516 }, { 161, 516 }, { 162, 516 },
 { 163, 516 }, { 164, 516 }, { 165, 516 }, { 166, 516 }, { 167, 516 },
 { 168, 516 }, { 169, 516 }, { 170, 516 }, { 171, 516 }, { 172, 516 },
 { 173, 516 }, { 174, 516 }, { 175, 516 }, { 176, 516 }, { 177, 516 },
 { 178, 516 }, { 179, 516 }, { 180, 516 }, { 181, 516 }, { 182, 516 },

 { 183, 516 }, { 184, 516 }, { 185, 516 }, { 186, 516 }, { 187, 516 },
 { 188, 516 }, { 189, 516 }, { 190, 516 }, { 191, 516 }, { 192, 516 },
 { 193, 516 }, { 194, 516 }, { 195, 516 }, { 196, 516 }, { 197, 516 },
 { 198, 516 }, { 199, 516 }, { 200, 516 }, { 201, 516 }, { 202, 516 },
 { 203, 516 }, { 204, 516 }, { 205, 516 }, { 206, 516 }, { 207, 516 },
 { 208, 516 }, { 209, 516 }, { 210, 516 }, { 211, 516 }, { 212, 516 },
 { 213, 516 }, { 214, 516 }, { 215, 516 }, { 216, 516 }, { 217, 516 },
 { 218, 516 }, { 219, 516 }, { 220, 516 }, { 221, 516 }, { 222, 516 },
 { 223, 516 }, { 224, 516 }, { 225, 516 }, { 226, 516 }, { 227, 516 },
 { 228, 516 }, { 229, 516 }, { 230, 516 }, { 231, 516 }, { 232, 516 },

 { 233, 516 }, { 234, 516 }, { 235, 516 }, { 236, 516 }, { 237, 516 },
 { 238, 516 }, { 239, 516 }, { 240, 516 }, { 241, 516 }, { 242, 516 },
 { 243, 516 }, { 244, 516 }, { 245, 516 }, { 246, 516 }, { 247, 516 },
 { 248, 516 }, { 249, 516 }, { 250, 516 }, { 251, 516 }, { 252, 516 },
 { 253, 516 }, { 254, 516 }, { 255, 516 }, { 256, 516 }, {   0,   0 },
 {   0,12987 }, {   1, 258 }, {   2, 258 }, {   3, 258 }, {   4, 258 },
 {   5, 258 }, {   6, 258 }, {   7, 258 }, {   8, 258 }, {   9, 258 },
 {  10, 258 }, {  11, 258 }, {  12, 258 }, {  13, 258 }, {  14, 258 },
 {  15, 258 }, {  16, 258 }, {  17, 258 }, {  18, 258 }, {  19, 258 },
 {  20, 258 }, {  21, 258 }, {  22, 258 }, {  23, 258 }, {  24, 258 },

 {  25, 258 }, {  26, 258 }, {  27, 258 }, {  28, 258 }, {  29, 258 },
 {  30, 258 }, {  31, 258 }, {  32, 258 }, {  33, 258 }, {  34, 258 },
 {  35, 258 }, {  36, 258 }, {  37, 258 }, {  38, 258 }, {  39, 258 },
 {  40, 258 }, {  41, 258 }, {  42, 258 }, {  43, 258 }, {  44, 258 },
 {  45, 258 }, {  46, 258 }, {  47, 258 }, {  48, 258 }, {  49, 258 },
 {  50, 258 }, {  51, 258 }, {  52, 258 }, {  53, 258 }, {  54, 258 },
 {  55, 258 }, {  56, 258 }, {  57, 258 }, {  58, 258 }, {  59, 258 },
 {  60, 258 }, {  61, 258 }, {  62, 258 }, {  63, 258 }, {  64, 258 },
 {  65, 258 }, {  66, 258 }, {  67, 258 }, {  68, 258 }, {  69, 258 },
 {  70, 258 }, {  71, 258 }, {  72, 258 }, {  73, 258 }, {  74, 258 },

 {  75, 258 }, {  76, 258 }, {  77, 258 }, {  78, 258 }, {  79, 258 },
 {  80, 258 }, {  81, 258 }, {  82, 258 }, {  83, 258 }, {  84, 258 },
 {  85, 258 }, {  86, 258 }, {  87, 258 }, {  88, 258 }, {  89, 258 },
 {  90, 258 }, {  91, 258 }, {  92, 258 }, {  93, 258 }, {  94, 258 },
 {  95, 258 }, {  96, 258 }, {  97, 258 }, {  98, 258 }, {  99, 258 },
 { 100, 258 }, { 101, 258 }, { 102, 258 }, { 103, 258 }, { 104, 258 },
 { 105, 258 }, { 106, 258 }, { 107, 258 }, { 108, 258 }, { 109, 258 },
 { 110, 258 }, { 111, 258 }, { 112, 258 }, { 113, 258 }, { 114, 258 },
 { 115, 258 }, { 116, 258 }, { 117, 258 }, { 118, 258 }, { 119, 258 },
 { 120, 258 }, { 121, 258 }, { 122, 258 }, { 123, 258 }, { 124, 258 },

 { 125, 258 }, { 126, 258 }, { 127, 258 }, { 128, 258 }, { 129, 258 },
 { 130, 258 }, { 131, 258 }, { 132, 258 }, { 133, 258 }, { 134, 258 },
 { 135, 258 }, { 136, 258 }, { 137, 258 }, { 138, 258 }, { 139, 258 },
 { 140, 258 }, { 141, 258 }, { 142, 258 }, { 143, 258 }, { 144, 258 },
 { 145, 258 }, { 146, 258 }, { 147, 258 }, { 148, 258 }, { 149, 258 },
 { 150, 258 }, { 151, 258 }, { 152, 258 }, { 153, 258 }, { 154, 258 },
 { 155, 258 }, { 156, 258 }, { 157, 258 }, { 158, 258 }, { 159, 258 },
 { 160, 258 }, { 161, 258 }, { 162, 258 }, { 163, 258 }, { 164, 258 },
 { 165, 258 }, { 166, 258 }, { 167, 258 }, { 168, 258 }, { 169, 258 },
 { 170, 258 }, { 171, 258 }, { 172, 258 }, { 173, 258 }, { 174, 258 },

 { 175, 258 }, { 176, 258 }, { 177, 258 }, { 178, 258 }, { 179, 258 },
 { 180, 258 }, { 181, 258 }, { 182, 258 }, { 183, 258 }, { 184, 258 },
 { 185, 258 }, { 186, 258 }, { 187, 258 }, { 188, 258 }, { 189, 258 },
 { 190, 258 }, { 191, 258 }, { 192, 258 }, { 193, 258 }, { 194, 258 },
 { 195, 258 }, { 196, 258 }, { 197, 258 }, { 198, 258 }, { 199, 258 },
 { 200, 258 }, { 201, 258 }, { 202, 258 }, { 203, 258 }, { 204, 258 },
 { 205, 258 }, { 206, 258 }, { 207, 258 }, { 208, 258 }, { 209, 258 },
 { 210, 258 }, { 211, 258 }, { 212, 258 }, { 213, 258 }, { 214, 258 },
 { 215, 258 }, { 216, 258 }, { 217, 258 }, { 218, 258 }, { 219, 258 },
 { 220, 258 }, { 221, 258 }, { 222, 258 }, { 223, 258 }, { 224, 258 },

 { 225, 258 }, { 226, 258 }, { 227, 258 }, { 228, 258 }, { 229, 258 },
 { 230, 258 }, { 231, 258 }, { 232, 258 }, { 233, 258 }, { 234, 258 },
 { 235, 258 }, { 236, 258 }, { 237, 258 }, { 238, 258 }, { 239, 258 },
 { 240, 258 }, { 241, 258 }, { 242, 258 }, { 243, 258 }, { 244, 258 },
 { 245, 258 }, { 246, 258 }, { 247, 258 }, { 248, 258 }, { 249, 258 },
 { 250, 258 }, { 251, 258 }, { 252, 258 }, { 253, 258 }, { 254, 258 },
 { 255, 258 }, { 256, 258 }, {   0,  43 }, {   0,12729 }, {   0,   1 },
 {   0,12727 }, {   0,   7 }, {   0,12725 }, {   0,  27 }, {   0,12723 },
 {   0,  28 }, {   0,12721 }, {   0,  30 }, {   0,12719 }, {   9, 102 },
 {  10, 102 }, {   0,  43 }, {   0,12715 }, {  13, 102 }, {   0,  35 },

 {   0,12712 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,  43 }, {   0,12696 }, {  32, 102 }, {   0,  41 }, {   0,12693 },
 {   0,  31 }, {   0,12691 }, {   0,  29 }, {   0,12689 }, {   0,  34 },
 {   0,12687 }, {   0,  32 }, {   0,12685 }, {   0,  33 }, {   0,12683 },
 {   0,  25 }, {   0,12681 }, {   0,  43 }, {   0,12679 }, {   0,  26 },
 {   0,12677 }, {   0,   6 }, {   0,12675 }, {   0,  11 }, {   0,12673 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  10, 150 }, {  48,4379 }, {  49,4379 },

 {  50,4379 }, {  51,4379 }, {  52,4379 }, {  53,4379 }, {  54,4379 },
 {  55,4379 }, {  56,4379 }, {  57,4379 }, {  42,  76 }, {  62,  93 },
 {   0,  40 }, {   0,12651 }, {   0,   0 }, {  47,  78 }, {   0,   0 },
 {  46,4370 }, {   0,   0 }, {  48,4394 }, {  49,4394 }, {  50,4394 },
 {  51,4394 }, {  52,4394 }, {  53,4394 }, {  54,4394 }, {  55,4394 },
 {  56,4394 }, {  57,4394 }, {   0,   0 }, {   0,   0 }, {  58,  78 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   1 }, {   0,12625 }, {  69,4431 }, {   0,  39 },
 {   0,12622 }, {   0,   2 }, {   0,12620 }, {   0,   5 }, {   0,12618 },
 {   0,   0 }, {   9,   0 }, {  10,   0 }, {   0,  37 }, {   0,12613 },

 {  13,   0 }, {   0,  38 }, {   0,12610 }, {   0,   3 }, {   0,12608 },
 {   0,   4 }, {   0,12606 }, {   0,   0 }, {   0,   0 }, {  48,4411 },
 {  49,4411 }, {  50,4411 }, {  51,4411 }, {  52,4411 }, {  53,4411 },
 {  54,4411 }, {  55,4411 }, {  56,4411 }, {  57,4411 }, {  32,   0 },
 { 101,4431 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,4503 }, {  66,4503 }, {  67,4503 }, {  68,4503 },
 {  69,4503 }, {  70,4503 }, {  71,4503 }, {  72,4503 }, {  73,4503 },
 {  74,4503 }, {  75,4503 }, {  76,4503 }, {  77,4503 }, {  78,4503 },
 {  79,4503 }, {  80,4503 }, {  81,4503 }, {  82,4503 }, {  83,4503 },
 {  84,4503 }, {  85,4503 }, {  86,4503 }, {  87,4503 }, {  88,4503 },

 {  89,4503 }, {  90,4503 }, {   0,  36 }, {   0,12559 }, {   0,   0 },
 {   0,   0 }, {  95,4503 }, { 124,  69 }, {  97,4503 }, {  98,4503 },
 {  99,4503 }, { 100,4503 }, { 101,4503 }, { 102,4503 }, { 103,4503 },
 { 104,4503 }, { 105,4503 }, { 106,4503 }, { 107,4503 }, { 108,4503 },
 { 109,4503 }, { 110,4503 }, { 111,4503 }, { 112,4503 }, { 113,4503 },
 { 114,4503 }, { 115,4503 }, { 116,4503 }, { 117,4503 }, { 118,4503 },
 { 119,4503 }, { 120,4503 }, { 121,4503 }, { 122,4503 }, {   0,   6 },
 {   0,12527 }, {   0,   6 }, {   0,12525 }, {   0,   9 }, {   0,12523 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  10,   2 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  48,4319 }, {  49,4319 }, {  50,4319 }, {  51,4319 },
 {  52,4319 }, {  53,4319 }, {  54,4319 }, {  55,4319 }, {  56,4319 },
 {  57,4319 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,4411 }, {  66,4411 },
 {  67,4411 }, {  68,4411 }, {  69,4411 }, {  70,4411 }, {  71,4411 },
 {  72,4411 }, {  73,4411 }, {  74,4411 }, {  75,4411 }, {  76,4411 },
 {  77,4411 }, {  78,4411 }, {  79,4411 }, {  80,4411 }, {  81,4411 },
 {  82,4411 }, {  83,4411 }, {  84,4411 }, {  85,4411 }, {  86,4411 },
 {  87,4411 }, {  88,4411 }, {  89,4411 }, {  90,4411 }, {   0,  40 },
 {   0,12467 }, {   0,   0 }, {   0,   0 }, {  95,4411 }, {   0,   0 },

 {  97,4411 }, {  98,4411 }, {  99,4411 }, { 100,4411 }, { 101,4411 },
 { 102,4411 }, { 103,4411 }, { 104,4411 }, { 105,4411 }, { 106,4411 },
 { 107,4411 }, { 108,4411 }, { 109,4411 }, { 110,4411 }, { 111,4411 },
 { 112,4411 }, { 113,4411 }, { 114,4411 }, { 115,4411 }, { 116,4411 },
 { 117,4411 }, { 118,4411 }, { 119,4411 }, { 120,4411 }, { 121,4411 },
 { 122,4411 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,4227 }, {  49,4227 },
 {  50,4227 }, {  51,4227 }, {  52,4227 }, {  53,4227 }, {  54,4227 },

 {  55,4227 }, {  56,4227 }, {  57,4227 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,4319 }, {  66,4319 }, {  67,4319 }, {  68,4319 }, {  69,4319 },
 {  70,4319 }, {  71,4319 }, {  72,4319 }, {  73,4319 }, {  74,4319 },
 {  75,4319 }, {  76,4319 }, {  77,4319 }, {  78,4319 }, {  79,4319 },
 {  80,4319 }, {  81,4319 }, {  82,4319 }, {  83,4319 }, {  84,4319 },
 {  85,4319 }, {  86,4319 }, {  87,4319 }, {  88,4319 }, {  89,4319 },
 {  90,4319 }, {   0,  40 }, {   0,12375 }, {   0,   0 }, {   0,   0 },
 {  95,4319 }, {   0,   0 }, {  97,4319 }, {  98,4319 }, {  99,4319 },
 { 100,4319 }, { 101,4319 }, { 102,4319 }, { 103,4319 }, { 104,4319 },

 { 105,4319 }, { 106,4319 }, { 107,4319 }, { 108,4319 }, { 109,4319 },
 { 110,4319 }, { 111,4411 }, { 112,4319 }, { 113,4319 }, { 114,4319 },
 { 115,4319 }, { 116,4319 }, { 117,4319 }, { 118,4319 }, { 119,4319 },
 { 120,4319 }, { 121,4319 }, { 122,4319 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,4135 }, {  49,4135 }, {  50,4135 }, {  51,4135 }, {  52,4135 },
 {  53,4135 }, {  54,4135 }, {  55,4135 }, {  56,4135 }, {  57,4135 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  65,4227 }, {  66,4227 }, {  67,4227 },
 {  68,4227 }, {  69,4227 }, {  70,4227 }, {  71,4227 }, {  72,4227 },
 {  73,4227 }, {  74,4227 }, {  75,4227 }, {  76,4227 }, {  77,4227 },
 {  78,4227 }, {  79,4227 }, {  80,4227 }, {  81,4227 }, {  82,4227 },
 {  83,4227 }, {  84,4227 }, {  85,4227 }, {  86,4227 }, {  87,4227 },
 {  88,4227 }, {  89,4227 }, {  90,4227 }, {   0,  40 }, {   0,12283 },
 {   0,   0 }, {   0,   0 }, {  95,4227 }, {   0,   0 }, {  97,4227 },
 {  98,4227 }, {  99,4227 }, { 100,4227 }, { 101,4411 }, { 102,4227 },
 { 103,4227 }, { 104,4227 }, { 105,4227 }, { 106,4227 }, { 107,4227 },
 { 108,4227 }, { 109,4227 }, { 110,4227 }, { 111,4227 }, { 112,4227 },

 { 113,4227 }, { 114,4227 }, { 115,4227 }, { 116,4227 }, { 117,4227 },
 { 118,4227 }, { 119,4227 }, { 120,4227 }, { 121,4227 }, { 122,4227 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,4043 }, {  49,4043 }, {  50,4043 },
 {  51,4043 }, {  52,4043 }, {  53,4043 }, {  54,4043 }, {  55,4043 },
 {  56,4043 }, {  57,4043 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,4135 },
 {  66,4135 }, {  67,4135 }, {  68,4135 }, {  69,4135 }, {  70,4135 },

 {  71,4135 }, {  72,4135 }, {  73,4135 }, {  74,4135 }, {  75,4135 },
 {  76,4135 }, {  77,4135 }, {  78,4135 }, {  79,4135 }, {  80,4135 },
 {  81,4135 }, {  82,4135 }, {  83,4135 }, {  84,4135 }, {  85,4135 },
 {  86,4135 }, {  87,4135 }, {  88,4135 }, {  89,4135 }, {  90,4135 },
 {   0,  40 }, {   0,12191 }, {   0,   0 }, {   0,   0 }, {  95,4135 },
 {   0,   0 }, {  97,4135 }, {  98,4135 }, {  99,4135 }, { 100,4135 },
 { 101,4135 }, { 102,4135 }, { 103,4135 }, { 104,4135 }, { 105,4135 },
 { 106,4135 }, { 107,4135 }, { 108,4135 }, { 109,4135 }, { 110,4411 },
 { 111,4135 }, { 112,4135 }, { 113,4135 }, { 114,4135 }, { 115,4135 },
 { 116,4135 }, { 117,4135 }, { 118,4135 }, { 119,4135 }, { 120,4503 },

 { 121,4135 }, { 122,4135 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,3951 },
 {  49,3951 }, {  50,3951 }, {  51,3951 }, {  52,3951 }, {  53,3951 },
 {  54,3951 }, {  55,3951 }, {  56,3951 }, {  57,3951 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,4043 }, {  66,4043 }, {  67,4043 }, {  68,4043 },
 {  69,4043 }, {  70,4043 }, {  71,4043 }, {  72,4043 }, {  73,4043 },
 {  74,4043 }, {  75,4043 }, {  76,4043 }, {  77,4043 }, {  78,4043 },

 {  79,4043 }, {  80,4043 }, {  81,4043 }, {  82,4043 }, {  83,4043 },
 {  84,4043 }, {  85,4043 }, {  86,4043 }, {  87,4043 }, {  88,4043 },
 {  89,4043 }, {  90,4043 }, {   0,  40 }, {   0,12099 }, {   0,   0 },
 {   0,   0 }, {  95,4043 }, {   0,   0 }, {  97,4043 }, {  98,4043 },
 {  99,4043 }, { 100,4043 }, { 101,4043 }, { 102,4043 }, { 103,4043 },
 { 104,4043 }, { 105,4043 }, { 106,4043 }, { 107,4043 }, { 108,4503 },
 { 109,4043 }, { 110,4595 }, { 111,4043 }, { 112,4043 }, { 113,4043 },
 { 114,4043 }, { 115,4043 }, { 116,4043 }, { 117,4043 }, { 118,4043 },
 { 119,4043 }, { 120,4043 }, { 121,4043 }, { 122,4043 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,3859 }, {  49,3859 }, {  50,3859 }, {  51,3859 },
 {  52,3859 }, {  53,3859 }, {  54,3859 }, {  55,3859 }, {  56,3859 },
 {  57,3859 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,3951 }, {  66,3951 },
 {  67,3951 }, {  68,3951 }, {  69,3951 }, {  70,3951 }, {  71,3951 },
 {  72,3951 }, {  73,3951 }, {  74,3951 }, {  75,3951 }, {  76,3951 },
 {  77,3951 }, {  78,3951 }, {  79,3951 }, {  80,3951 }, {  81,3951 },
 {  82,3951 }, {  83,3951 }, {  84,3951 }, {  85,3951 }, {  86,3951 },

 {  87,3951 }, {  88,3951 }, {  89,3951 }, {  90,3951 }, {   0,  40 },
 {   0,12007 }, {   0,   0 }, {   0,   0 }, {  95,3951 }, {   0,   0 },
 {  97,3951 }, {  98,3951 }, {  99,3951 }, { 100,3951 }, { 101,3951 },
 { 102,3951 }, { 103,3951 }, { 104,3951 }, { 105,3951 }, { 106,3951 },
 { 107,3951 }, { 108,3951 }, { 109,3951 }, { 110,4595 }, { 111,3951 },
 { 112,3951 }, { 113,3951 }, { 114,3951 }, { 115,3951 }, { 116,3951 },
 { 117,3951 }, { 118,3951 }, { 119,3951 }, { 120,3951 }, { 121,3951 },
 { 122,3951 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,3767 }, {  49,3767 },
 {  50,3767 }, {  51,3767 }, {  52,3767 }, {  53,3767 }, {  54,3767 },
 {  55,3767 }, {  56,3767 }, {  57,3767 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,3859 }, {  66,3859 }, {  67,3859 }, {  68,3859 }, {  69,3859 },
 {  70,3859 }, {  71,3859 }, {  72,3859 }, {  73,3859 }, {  74,3859 },
 {  75,3859 }, {  76,3859 }, {  77,3859 }, {  78,3859 }, {  79,3859 },
 {  80,3859 }, {  81,3859 }, {  82,3859 }, {  83,3859 }, {  84,3859 },
 {  85,3859 }, {  86,3859 }, {  87,3859 }, {  88,3859 }, {  89,3859 },
 {  90,3859 }, {   0,  40 }, {   0,11915 }, {   0,   0 }, {   0,   0 },

 {  95,3859 }, {   0,   0 }, {  97,3859 }, {  98,3859 }, {  99,3859 },
 { 100,3859 }, { 101,4595 }, { 102,3859 }, { 103,3859 }, { 104,3859 },
 { 105,3859 }, { 106,3859 }, { 107,3859 }, { 108,3859 }, { 109,3859 },
 { 110,3859 }, { 111,3859 }, { 112,3859 }, { 113,3859 }, { 114,3859 },
 { 115,3859 }, { 116,3859 }, { 117,3859 }, { 118,3859 }, { 119,3859 },
 { 120,3859 }, { 121,3859 }, { 122,3859 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,3675 }, {  49,3675 }, {  50,3675 }, {  51,3675 }, {  52,3675 },

 {  53,3675 }, {  54,3675 }, {  55,3675 }, {  56,3675 }, {  57,3675 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,3767 }, {  66,3767 }, {  67,3767 },
 {  68,3767 }, {  69,3767 }, {  70,3767 }, {  71,3767 }, {  72,3767 },
 {  73,3767 }, {  74,3767 }, {  75,3767 }, {  76,3767 }, {  77,3767 },
 {  78,3767 }, {  79,3767 }, {  80,3767 }, {  81,3767 }, {  82,3767 },
 {  83,3767 }, {  84,3767 }, {  85,3767 }, {  86,3767 }, {  87,3767 },
 {  88,3767 }, {  89,3767 }, {  90,3767 }, {   0,  40 }, {   0,11823 },
 {   0,   0 }, {   0,   0 }, {  95,3767 }, {   0,   0 }, {  97,3767 },
 {  98,3767 }, {  99,3767 }, { 100,3767 }, { 101,4595 }, { 102,3767 },

 { 103,3767 }, { 104,3767 }, { 105,3767 }, { 106,3767 }, { 107,3767 },
 { 108,3767 }, { 109,3767 }, { 110,3767 }, { 111,3767 }, { 112,3767 },
 { 113,3767 }, { 114,3767 }, { 115,3767 }, { 116,3767 }, { 117,3767 },
 { 118,3767 }, { 119,3767 }, { 120,3767 }, { 121,3767 }, { 122,3767 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,3583 }, {  49,3583 }, {  50,3583 },
 {  51,3583 }, {  52,3583 }, {  53,3583 }, {  54,3583 }, {  55,3583 },
 {  56,3583 }, {  57,3583 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,3675 },
 {  66,3675 }, {  67,3675 }, {  68,3675 }, {  69,3675 }, {  70,3675 },
 {  71,3675 }, {  72,3675 }, {  73,3675 }, {  74,3675 }, {  75,3675 },
 {  76,3675 }, {  77,3675 }, {  78,3675 }, {  79,3675 }, {  80,3675 },
 {  81,3675 }, {  82,3675 }, {  83,3675 }, {  84,3675 }, {  85,3675 },
 {  86,3675 }, {  87,3675 }, {  88,3675 }, {  89,3675 }, {  90,3675 },
 {   0,  40 }, {   0,11731 }, {   0,   0 }, {   0,   0 }, {  95,3675 },
 {   0,   0 }, {  97,3675 }, {  98,3675 }, {  99,3675 }, { 100,3675 },
 { 101,3675 }, { 102,3675 }, { 103,3675 }, { 104,3675 }, { 105,3675 },
 { 106,3675 }, { 107,3675 }, { 108,3675 }, { 109,3675 }, { 110,3675 },

 { 111,3675 }, { 112,3675 }, { 113,3675 }, { 114,3675 }, { 115,3675 },
 { 116,4595 }, { 117,3675 }, { 118,3675 }, { 119,3675 }, { 120,3675 },
 { 121,3675 }, { 122,3675 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,3491 },
 {  49,3491 }, {  50,3491 }, {  51,3491 }, {  52,3491 }, {  53,3491 },
 {  54,3491 }, {  55,3491 }, {  56,3491 }, {  57,3491 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,3583 }, {  66,3583 }, {  67,3583 }, {  68,3583 },

 {  69,3583 }, {  70,3583 }, {  71,3583 }, {  72,3583 }, {  73,3583 },
 {  74,3583 }, {  75,3583 }, {  76,3583 }, {  77,3583 }, {  78,3583 },
 {  79,3583 }, {  80,3583 }, {  81,3583 }, {  82,3583 }, {  83,3583 },
 {  84,3583 }, {  85,3583 }, {  86,3583 }, {  87,3583 }, {  88,3583 },
 {  89,3583 }, {  90,3583 }, {   0,  40 }, {   0,11639 }, {   0,   0 },
 {   0,   0 }, {  95,3583 }, {   0,   0 }, {  97,3583 }, {  98,3583 },
 {  99,3583 }, { 100,3583 }, { 101,3583 }, { 102,3583 }, { 103,3583 },
 { 104,3583 }, { 105,3583 }, { 106,3583 }, { 107,3583 }, { 108,3583 },
 { 109,3583 }, { 110,3583 }, { 111,3583 }, { 112,3583 }, { 113,3583 },
 { 114,3583 }, { 115,3583 }, { 116,3583 }, { 117,3583 }, { 118,3583 },

 { 119,3583 }, { 120,3583 }, { 121,4595 }, { 122,3583 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,3399 }, {  49,3399 }, {  50,3399 }, {  51,3399 },
 {  52,3399 }, {  53,3399 }, {  54,3399 }, {  55,3399 }, {  56,3399 },
 {  57,3399 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,3491 }, {  66,3491 },
 {  67,3491 }, {  68,3491 }, {  69,3491 }, {  70,3491 }, {  71,3491 },
 {  72,3491 }, {  73,3491 }, {  74,3491 }, {  75,3491 }, {  76,3491 },

 {  77,3491 }, {  78,3491 }, {  79,3491 }, {  80,3491 }, {  81,3491 },
 {  82,3491 }, {  83,3491 }, {  84,3491 }, {  85,3491 }, {  86,3491 },
 {  87,3491 }, {  88,3491 }, {  89,3491 }, {  90,3491 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,3491 }, {   0,   0 },
 {  97,4595 }, {  98,3491 }, {  99,3491 }, { 100,3491 }, { 101,3491 },
 { 102,3491 }, { 103,3491 }, { 104,3491 }, { 105,3491 }, { 106,3491 },
 { 107,3491 }, { 108,3491 }, { 109,3491 }, { 110,3491 }, { 111,3491 },
 { 112,3491 }, { 113,3491 }, { 114,3491 }, { 115,3491 }, { 116,3491 },
 { 117,3491 }, { 118,3491 }, { 119,3491 }, { 120,3491 }, { 121,3491 },
 { 122,3491 }, {   0,   3 }, {   0,11515 }, {   1,4595 }, {   2,4595 },

 {   3,4595 }, {   4,4595 }, {   5,4595 }, {   6,4595 }, {   7,4595 },
 {   8,4595 }, {   9,4595 }, {  10,4595 }, {  11,4595 }, {  12,4595 },
 {  13,4595 }, {  14,4595 }, {  15,4595 }, {  16,4595 }, {  17,4595 },
 {  18,4595 }, {  19,4595 }, {  20,4595 }, {  21,4595 }, {  22,4595 },
 {  23,4595 }, {  24,4595 }, {  25,4595 }, {  26,4595 }, {  27,4595 },
 {  28,4595 }, {  29,4595 }, {  30,4595 }, {  31,4595 }, {  32,4595 },
 {  33,4595 }, {  34,4595 }, {  35,4595 }, {  36,4595 }, {  37,4595 },
 {  38,4595 }, {  39,4595 }, {  40,4595 }, {  41,4595 }, {   0,   0 },
 {  43,4595 }, {  44,4595 }, {  45,4595 }, {  46,4595 }, {  47,4595 },
 {  48,4595 }, {  49,4595 }, {  50,4595 }, {  51,4595 }, {  52,4595 },

 {  53,4595 }, {  54,4595 }, {  55,4595 }, {  56,4595 }, {  57,4595 },
 {  58,4595 }, {  59,4595 }, {  60,4595 }, {  61,4595 }, {  62,4595 },
 {  63,4595 }, {  64,4595 }, {  65,4595 }, {  66,4595 }, {  67,4595 },
 {  68,4595 }, {  69,4595 }, {  70,4595 }, {  71,4595 }, {  72,4595 },
 {  73,4595 }, {  74,4595 }, {  75,4595 }, {  76,4595 }, {  77,4595 },
 {  78,4595 }, {  79,4595 }, {  80,4595 }, {  81,4595 }, {  82,4595 },
 {  83,4595 }, {  84,4595 }, {  85,4595 }, {  86,4595 }, {  87,4595 },
 {  88,4595 }, {  89,4595 }, {  90,4595 }, {  91,4595 }, {  92,4595 },
 {  93,4595 }, {  94,4595 }, {  95,4595 }, {  96,4595 }, {  97,4595 },
 {  98,4595 }, {  99,4595 }, { 100,4595 }, { 101,4595 }, { 102,4595 },

 { 103,4595 }, { 104,4595 }, { 105,4595 }, { 106,4595 }, { 107,4595 },
 { 108,4595 }, { 109,4595 }, { 110,4595 }, { 111,4595 }, { 112,4595 },
 { 113,4595 }, { 114,4595 }, { 115,4595 }, { 116,4595 }, { 117,4595 },
 { 118,4595 }, { 119,4595 }, { 120,4595 }, { 121,4595 }, { 122,4595 },
 { 123,4595 }, { 124,4595 }, { 125,4595 }, { 126,4595 }, { 127,4595 },
 { 128,4595 }, { 129,4595 }, { 130,4595 }, { 131,4595 }, { 132,4595 },
 { 133,4595 }, { 134,4595 }, { 135,4595 }, { 136,4595 }, { 137,4595 },
 { 138,4595 }, { 139,4595 }, { 140,4595 }, { 141,4595 }, { 142,4595 },
 { 143,4595 }, { 144,4595 }, { 145,4595 }, { 146,4595 }, { 147,4595 },
 { 148,4595 }, { 149,4595 }, { 150,4595 }, { 151,4595 }, { 152,4595 },

 { 153,4595 }, { 154,4595 }, { 155,4595 }, { 156,4595 }, { 157,4595 },
 { 158,4595 }, { 159,4595 }, { 160,4595 }, { 161,4595 }, { 162,4595 },
 { 163,4595 }, { 164,4595 }, { 165,4595 }, { 166,4595 }, { 167,4595 },
 { 168,4595 }, { 169,4595 }, { 170,4595 }, { 171,4595 }, { 172,4595 },
 { 173,4595 }, { 174,4595 }, { 175,4595 }, { 176,4595 }, { 177,4595 },
 { 178,4595 }, { 179,4595 }, { 180,4595 }, { 181,4595 }, { 182,4595 },
 { 183,4595 }, { 184,4595 }, { 185,4595 }, { 186,4595 }, { 187,4595 },
 { 188,4595 }, { 189,4595 }, { 190,4595 }, { 191,4595 }, { 192,4595 },
 { 193,4595 }, { 194,4595 }, { 195,4595 }, { 196,4595 }, { 197,4595 },
 { 198,4595 }, { 199,4595 }, { 200,4595 }, { 201,4595 }, { 202,4595 },

 { 203,4595 }, { 204,4595 }, { 205,4595 }, { 206,4595 }, { 207,4595 },
 { 208,4595 }, { 209,4595 }, { 210,4595 }, { 211,4595 }, { 212,4595 },
 { 213,4595 }, { 214,4595 }, { 215,4595 }, { 216,4595 }, { 217,4595 },
 { 218,4595 }, { 219,4595 }, { 220,4595 }, { 221,4595 }, { 222,4595 },
 { 223,4595 }, { 224,4595 }, { 225,4595 }, { 226,4595 }, { 227,4595 },
 { 228,4595 }, { 229,4595 }, { 230,4595 }, { 231,4595 }, { 232,4595 },
 { 233,4595 }, { 234,4595 }, { 235,4595 }, { 236,4595 }, { 237,4595 },
 { 238,4595 }, { 239,4595 }, { 240,4595 }, { 241,4595 }, { 242,4595 },
 { 243,4595 }, { 244,4595 }, { 245,4595 }, { 246,4595 }, { 247,4595 },
 { 248,4595 }, { 249,4595 }, { 250,4595 }, { 251,4595 }, { 252,4595 },

 { 253,4595 }, { 254,4595 }, { 255,4595 }, { 256,4595 }, {   0,  43 },
 {   0,11257 }, {   1,-1351 }, {   2,-1351 }, {   3,-1351 }, {   4,-1351 },
 {   5,-1351 }, {   6,-1351 }, {   7,-1351 }, {   8,-1351 }, {   9,-1351 },
 {  10,-1351 }, {  11,-1351 }, {  12,-1351 }, {  13,-1351 }, {  14,-1351 },
 {  15,-1351 }, {  16,-1351 }, {  17,-1351 }, {  18,-1351 }, {  19,-1351 },
 {  20,-1351 }, {  21,-1351 }, {  22,-1351 }, {  23,-1351 }, {  24,-1351 },
 {  25,-1351 }, {  26,-1351 }, {  27,-1351 }, {  28,-1351 }, {  29,-1351 },
 {  30,-1351 }, {  31,-1351 }, {  32,-1351 }, {  33,-1351 }, {  34,-1351 },
 {  35,-1351 }, {  36,-1351 }, {  37,-1351 }, {  38,-1351 }, {  39,-1351 },
 {  40,-1351 }, {  41,-1351 }, {  42,-1351 }, {  43,-1351 }, {  44,-1351 },

 {  45,-1351 }, {  46,-1351 }, {  47,-1349 }, {  48,-1351 }, {  49,-1351 },
 {  50,-1351 }, {  51,-1351 }, {  52,-1351 }, {  53,-1351 }, {  54,-1351 },
 {  55,-1351 }, {  56,-1351 }, {  57,-1351 }, {  58,-1351 }, {  59,-1351 },
 {  60,-1351 }, {  61,-1351 }, {  62,-1351 }, {  63,-1351 }, {  64,-1351 },
 {  65,-1351 }, {  66,-1351 }, {  67,-1351 }, {  68,-1351 }, {  69,-1351 },
 {  70,-1351 }, {  71,-1351 }, {  72,-1351 }, {  73,-1351 }, {  74,-1351 },
 {  75,-1351 }, {  76,-1351 }, {  77,-1351 }, {  78,-1351 }, {  79,-1351 },
 {  80,-1351 }, {  81,-1351 }, {  82,-1351 }, {  83,-1351 }, {  84,-1351 },
 {  85,-1351 }, {  86,-1351 }, {  87,-1351 }, {  88,-1351 }, {  89,-1351 },
 {  90,-1351 }, {  91,-1351 }, {  92,-1351 }, {  93,-1351 }, {  94,-1351 },

 {  95,-1351 }, {  96,-1351 }, {  97,-1351 }, {  98,-1351 }, {  99,-1351 },
 { 100,-1351 }, { 101,-1351 }, { 102,-1351 }, { 103,-1351 }, { 104,-1351 },
 { 105,-1351 }, { 106,-1351 }, { 107,-1351 }, { 108,-1351 }, { 109,-1351 },
 { 110,-1351 }, { 111,-1351 }, { 112,-1351 }, { 113,-1351 }, { 114,-1351 },
 { 115,-1351 }, { 116,-1351 }, { 117,-1351 }, { 118,-1351 }, { 119,-1351 },
 { 120,-1351 }, { 121,-1351 }, { 122,-1351 }, { 123,-1351 }, { 124,-1351 },
 { 125,-1351 }, { 126,-1351 }, { 127,-1351 }, { 128,-1351 }, { 129,-1351 },
 { 130,-1351 }, { 131,-1351 }, { 132,-1351 }, { 133,-1351 }, { 134,-1351 },
 { 135,-1351 }, { 136,-1351 }, { 137,-1351 }, { 138,-1351 }, { 139,-1351 },
 { 140,-1351 }, { 141,-1351 }, { 142,-1351 }, { 143,-1351 }, { 144,-1351 },

 { 145,-1351 }, { 146,-1351 }, { 147,-1351 }, { 148,-1351 }, { 149,-1351 },
 { 150,-1351 }, { 151,-1351 }, { 152,-1351 }, { 153,-1351 }, { 154,-1351 },
 { 155,-1351 }, { 156,-1351 }, { 157,-1351 }, { 158,-1351 }, { 159,-1351 },
 { 160,-1351 }, { 161,-1351 }, { 162,-1351 }, { 163,-1351 }, { 164,-1351 },
 { 165,-1351 }, { 166,-1351 }, { 167,-1351 }, { 168,-1351 }, { 169,-1351 },
 { 170,-1351 }, { 171,-1351 }, { 172,-1351 }, { 173,-1351 }, { 174,-1351 },
 { 175,-1351 }, { 176,-1351 }, { 177,-1351 }, { 178,-1351 }, { 179,-1351 },
 { 180,-1351 }, { 181,-1351 }, { 182,-1351 }, { 183,-1351 }, { 184,-1351 },
 { 185,-1351 }, { 186,-1351 }, { 187,-1351 }, { 188,-1351 }, { 189,-1351 },
 { 190,-1351 }, { 191,-1351 }, { 192,-1351 }, { 193,-1351 }, { 194,-1351 },

 { 195,-1351 }, { 196,-1351 }, { 197,-1351 }, { 198,-1351 }, { 199,-1351 },
 { 200,-1351 }, { 201,-1351 }, { 202,-1351 }, { 203,-1351 }, { 204,-1351 },
 { 205,-1351 }, { 206,-1351 }, { 207,-1351 }, { 208,-1351 }, { 209,-1351 },
 { 210,-1351 }, { 211,-1351 }, { 212,-1351 }, { 213,-1351 }, { 214,-1351 },
 { 215,-1351 }, { 216,-1351 }, { 217,-1351 }, { 218,-1351 }, { 219,-1351 },
 { 220,-1351 }, { 221,-1351 }, { 222,-1351 }, { 223,-1351 }, { 224,-1351 },
 { 225,-1351 }, { 226,-1351 }, { 227,-1351 }, { 228,-1351 }, { 229,-1351 },
 { 230,-1351 }, { 231,-1351 }, { 232,-1351 }, { 233,-1351 }, { 234,-1351 },
 { 235,-1351 }, { 236,-1351 }, { 237,-1351 }, { 238,-1351 }, { 239,-1351 },
 { 240,-1351 }, { 241,-1351 }, { 242,-1351 }, { 243,-1351 }, { 244,-1351 },

 { 245,-1351 }, { 246,-1351 }, { 247,-1351 }, { 248,-1351 }, { 249,-1351 },
 { 250,-1351 }, { 251,-1351 }, { 252,-1351 }, { 253,-1351 }, { 254,-1351 },
 { 255,-1351 }, { 256,-1351 }, {   0,   3 }, {   0,10999 }, {   1,4079 },
 {   2,4079 }, {   3,4079 }, {   4,4079 }, {   5,4079 }, {   6,4079 },
 {   7,4079 }, {   8,4079 }, {   9,4079 }, {  10,4079 }, {  11,4079 },
 {  12,4079 }, {  13,4079 }, {  14,4079 }, {  15,4079 }, {  16,4079 },
 {  17,4079 }, {  18,4079 }, {  19,4079 }, {  20,4079 }, {  21,4079 },
 {  22,4079 }, {  23,4079 }, {  24,4079 }, {  25,4079 }, {  26,4079 },
 {  27,4079 }, {  28,4079 }, {  29,4079 }, {  30,4079 }, {  31,4079 },
 {  32,4079 }, {  33,4079 }, {  34,4079 }, {  35,4079 }, {  36,4079 },

 {  37,4079 }, {  38,4079 }, {  39,4079 }, {  40,4079 }, {  41,4079 },
 {  42,-1621 }, {  43,4079 }, {  44,4079 }, {  45,4079 }, {  46,4079 },
 {  47,4079 }, {  48,4079 }, {  49,4079 }, {  50,4079 }, {  51,4079 },
 {  52,4079 }, {  53,4079 }, {  54,4079 }, {  55,4079 }, {  56,4079 },
 {  57,4079 }, {  58,4079 }, {  59,4079 }, {  60,4079 }, {  61,4079 },
 {  62,4079 }, {  63,4079 }, {  64,4079 }, {  65,4079 }, {  66,4079 },
 {  67,4079 }, {  68,4079 }, {  69,4079 }, {  70,4079 }, {  71,4079 },
 {  72,4079 }, {  73,4079 }, {  74,4079 }, {  75,4079 }, {  76,4079 },
 {  77,4079 }, {  78,4079 }, {  79,4079 }, {  80,4079 }, {  81,4079 },
 {  82,4079 }, {  83,4079 }, {  84,4079 }, {  85,4079 }, {  86,4079 },

 {  87,4079 }, {  88,4079 }, {  89,4079 }, {  90,4079 }, {  91,4079 },
 {  92,4079 }, {  93,4079 }, {  94,4079 }, {  95,4079 }, {  96,4079 },
 {  97,4079 }, {  98,4079 }, {  99,4079 }, { 100,4079 }, { 101,4079 },
 { 102,4079 }, { 103,4079 }, { 104,4079 }, { 105,4079 }, { 106,4079 },
 { 107,4079 }, { 108,4079 }, { 109,4079 }, { 110,4079 }, { 111,4079 },
 { 112,4079 }, { 113,4079 }, { 114,4079 }, { 115,4079 }, { 116,4079 },
 { 117,4079 }, { 118,4079 }, { 119,4079 }, { 120,4079 }, { 121,4079 },
 { 122,4079 }, { 123,4079 }, { 124,4079 }, { 125,4079 }, { 126,4079 },
 { 127,4079 }, { 128,4079 }, { 129,4079 }, { 130,4079 }, { 131,4079 },
 { 132,4079 }, { 133,4079 }, { 134,4079 }, { 135,4079 }, { 136,4079 },

 { 137,4079 }, { 138,4079 }, { 139,4079 }, { 140,4079 }, { 141,4079 },
 { 142,4079 }, { 143,4079 }, { 144,4079 }, { 145,4079 }, { 146,4079 },
 { 147,4079 }, { 148,4079 }, { 149,4079 }, { 150,4079 }, { 151,4079 },
 { 152,4079 }, { 153,4079 }, { 154,4079 }, { 155,4079 }, { 156,4079 },
 { 157,4079 }, { 158,4079 }, { 159,4079 }, { 160,4079 }, { 161,4079 },
 { 162,4079 }, { 163,4079 }, { 164,4079 }, { 165,4079 }, { 166,4079 },
 { 167,4079 }, { 168,4079 }, { 169,4079 }, { 170,4079 }, { 171,4079 },
 { 172,4079 }, { 173,4079 }, { 174,4079 }, { 175,4079 }, { 176,4079 },
 { 177,4079 }, { 178,4079 }, { 179,4079 }, { 180,4079 }, { 181,4079 },
 { 182,4079 }, { 183,4079 }, { 184,4079 }, { 185,4079 }, { 186,4079 },

 { 187,4079 }, { 188,4079 }, { 189,4079 }, { 190,4079 }, { 191,4079 },
 { 192,4079 }, { 193,4079 }, { 194,4079 }, { 195,4079 }, { 196,4079 },
 { 197,4079 }, { 198,4079 }, { 199,4079 }, { 200,4079 }, { 201,4079 },
 { 202,4079 }, { 203,4079 }, { 204,4079 }, { 205,4079 }, { 206,4079 },
 { 207,4079 }, { 208,4079 }, { 209,4079 }, { 210,4079 }, { 211,4079 },
 { 212,4079 }, { 213,4079 }, { 214,4079 }, { 215,4079 }, { 216,4079 },
 { 217,4079 }, { 218,4079 }, { 219,4079 }, { 220,4079 }, { 221,4079 },
 { 222,4079 }, { 223,4079 }, { 224,4079 }, { 225,4079 }, { 226,4079 },
 { 227,4079 }, { 228,4079 }, { 229,4079 }, { 230,4079 }, { 231,4079 },
 { 232,4079 }, { 233,4079 }, { 234,4079 }, { 235,4079 }, { 236,4079 },

 { 237,4079 }, { 238,4079 }, { 239,4079 }, { 240,4079 }, { 241,4079 },
 { 242,4079 }, { 243,4079 }, { 244,4079 }, { 245,4079 }, { 246,4079 },
 { 247,4079 }, { 248,4079 }, { 249,4079 }, { 250,4079 }, { 251,4079 },
 { 252,4079 }, { 253,4079 }, { 254,4079 }, { 255,4079 }, { 256,4079 },
 {   0,   3 }, {   0,10741 }, {   1,3821 }, {   2,3821 }, {   3,3821 },
 {   4,3821 }, {   5,3821 }, {   6,3821 }, {   7,3821 }, {   8,3821 },
 {   9,3821 }, {  10,3821 }, {  11,3821 }, {  12,3821 }, {  13,3821 },
 {  14,3821 }, {  15,3821 }, {  16,3821 }, {  17,3821 }, {  18,3821 },
 {  19,3821 }, {  20,3821 }, {  21,3821 }, {  22,3821 }, {  23,3821 },
 {  24,3821 }, {  25,3821 }, {  26,3821 }, {  27,3821 }, {  28,3821 },

 {  29,3821 }, {  30,3821 }, {  31,3821 }, {  32,3821 }, {  33,3821 },
 {  34,3821 }, {  35,3821 }, {  36,3821 }, {  37,3821 }, {  38,3821 },
 {  39,3821 }, {  40,3821 }, {  41,3821 }, {   0,   0 }, {  43,3821 },
 {  44,3821 }, {  45,3821 }, {  46,3821 }, {  47,3821 }, {  48,3821 },
 {  49,3821 }, {  50,3821 }, {  51,3821 }, {  52,3821 }, {  53,3821 },
 {  54,3821 }, {  55,3821 }, {  56,3821 }, {  57,3821 }, {  58,3821 },
 {  59,3821 }, {  60,3821 }, {  61,3821 }, {  62,3821 }, {  63,3821 },
 {  64,3821 }, {  65,3821 }, {  66,3821 }, {  67,3821 }, {  68,3821 },
 {  69,3821 }, {  70,3821 }, {  71,3821 }, {  72,3821 }, {  73,3821 },
 {  74,3821 }, {  75,3821 }, {  76,3821 }, {  77,3821 }, {  78,3821 },

 {  79,3821 }, {  80,3821 }, {  81,3821 }, {  82,3821 }, {  83,3821 },
 {  84,3821 }, {  85,3821 }, {  86,3821 }, {  87,3821 }, {  88,3821 },
 {  89,3821 }, {  90,3821 }, {  91,3821 }, {  92,3821 }, {  93,3821 },
 {  94,3821 }, {  95,3821 }, {  96,3821 }, {  97,3821 }, {  98,3821 },
 {  99,3821 }, { 100,3821 }, { 101,3821 }, { 102,3821 }, { 103,3821 },
 { 104,3821 }, { 105,3821 }, { 106,3821 }, { 107,3821 }, { 108,3821 },
 { 109,3821 }, { 110,3821 }, { 111,3821 }, { 112,3821 }, { 113,3821 },
 { 114,3821 }, { 115,3821 }, { 116,3821 }, { 117,3821 }, { 118,3821 },
 { 119,3821 }, { 120,3821 }, { 121,3821 }, { 122,3821 }, { 123,3821 },
 { 124,3821 }, { 125,3821 }, { 126,3821 }, { 127,3821 }, { 128,3821 },

 { 129,3821 }, { 130,3821 }, { 131,3821 }, { 132,3821 }, { 133,3821 },
 { 134,3821 }, { 135,3821 }, { 136,3821 }, { 137,3821 }, { 138,3821 },
 { 139,3821 }, { 140,3821 }, { 141,3821 }, { 142,3821 }, { 143,3821 },
 { 144,3821 }, { 145,3821 }, { 146,3821 }, { 147,3821 }, { 148,3821 },
 { 149,3821 }, { 150,3821 }, { 151,3821 }, { 152,3821 }, { 153,3821 },
 { 154,3821 }, { 155,3821 }, { 156,3821 }, { 157,3821 }, { 158,3821 },
 { 159,3821 }, { 160,3821 }, { 161,3821 }, { 162,3821 }, { 163,3821 },
 { 164,3821 }, { 165,3821 }, { 166,3821 }, { 167,3821 }, { 168,3821 },
 { 169,3821 }, { 170,3821 }, { 171,3821 }, { 172,3821 }, { 173,3821 },
 { 174,3821 }, { 175,3821 }, { 176,3821 }, { 177,3821 }, { 178,3821 },

 { 179,3821 }, { 180,3821 }, { 181,3821 }, { 182,3821 }, { 183,3821 },
 { 184,3821 }, { 185,3821 }, { 186,3821 }, { 187,3821 }, { 188,3821 },
 { 189,3821 }, { 190,3821 }, { 191,3821 }, { 192,3821 }, { 193,3821 },
 { 194,3821 }, { 195,3821 }, { 196,3821 }, { 197,3821 }, { 198,3821 },
 { 199,3821 }, { 200,3821 }, { 201,3821 }, { 202,3821 }, { 203,3821 },
 { 204,3821 }, { 205,3821 }, { 206,3821 }, { 207,3821 }, { 208,3821 },
 { 209,3821 }, { 210,3821 }, { 211,3821 }, { 212,3821 }, { 213,3821 },
 { 214,3821 }, { 215,3821 }, { 216,3821 }, { 217,3821 }, { 218,3821 },
 { 219,3821 }, { 220,3821 }, { 221,3821 }, { 222,3821 }, { 223,3821 },
 { 224,3821 }, { 225,3821 }, { 226,3821 }, { 227,3821 }, { 228,3821 },

 { 229,3821 }, { 230,3821 }, { 231,3821 }, { 232,3821 }, { 233,3821 },
 { 234,3821 }, { 235,3821 }, { 236,3821 }, { 237,3821 }, { 238,3821 },
 { 239,3821 }, { 240,3821 }, { 241,3821 }, { 242,3821 }, { 243,3821 },
 { 244,3821 }, { 245,3821 }, { 246,3821 }, { 247,3821 }, { 248,3821 },
 { 249,3821 }, { 250,3821 }, { 251,3821 }, { 252,3821 }, { 253,3821 },
 { 254,3821 }, { 255,3821 }, { 256,3821 }, {   0,   3 }, {   0,10483 },
 {   1,3563 }, {   2,3563 }, {   3,3563 }, {   4,3563 }, {   5,3563 },
 {   6,3563 }, {   7,3563 }, {   8,3563 }, {   9,3563 }, {  10,3563 },
 {  11,3563 }, {  12,3563 }, {  13,3563 }, {  14,3563 }, {  15,3563 },
 {  16,3563 }, {  17,3563 }, {  18,3563 }, {  19,3563 }, {  20,3563 },

 {  21,3563 }, {  22,3563 }, {  23,3563 }, {  24,3563 }, {  25,3563 },
 {  26,3563 }, {  27,3563 }, {  28,3563 }, {  29,3563 }, {  30,3563 },
 {  31,3563 }, {  32,3563 }, {  33,3563 }, {  34,3563 }, {  35,3563 },
 {  36,3563 }, {  37,3563 }, {  38,3563 }, {  39,3563 }, {  40,3563 },
 {  41,3563 }, {   0,   0 }, {  43,3563 }, {  44,3563 }, {  45,3563 },
 {  46,3563 }, {  47,3563 }, {  48,3563 }, {  49,3563 }, {  50,3563 },
 {  51,3563 }, {  52,3563 }, {  53,3563 }, {  54,3563 }, {  55,3563 },
 {  56,3563 }, {  57,3563 }, {  58,3563 }, {  59,3563 }, {  60,3563 },
 {  61,3563 }, {  62,3563 }, {  63,3563 }, {  64,3563 }, {  65,3563 },
 {  66,3563 }, {  67,3563 }, {  68,3563 }, {  69,3563 }, {  70,3563 },

 {  71,3563 }, {  72,3563 }, {  73,3563 }, {  74,3563 }, {  75,3563 },
 {  76,3563 }, {  77,3563 }, {  78,3563 }, {  79,3563 }, {  80,3563 },
 {  81,3563 }, {  82,3563 }, {  83,3563 }, {  84,3563 }, {  85,3563 },
 {  86,3563 }, {  87,3563 }, {  88,3563 }, {  89,3563 }, {  90,3563 },
 {  91,3563 }, {  92,3563 }, {  93,3563 }, {  94,3563 }, {  95,3563 },
 {  96,3563 }, {  97,3563 }, {  98,3563 }, {  99,3563 }, { 100,3563 },
 { 101,3563 }, { 102,3563 }, { 103,3563 }, { 104,3563 }, { 105,3563 },
 { 106,3563 }, { 107,3563 }, { 108,3563 }, { 109,3563 }, { 110,3563 },
 { 111,3563 }, { 112,3563 }, { 113,3563 }, { 114,3563 }, { 115,3563 },
 { 116,3563 }, { 117,3563 }, { 118,3563 }, { 119,3563 }, { 120,3563 },

 { 121,3563 }, { 122,3563 }, { 123,3563 }, { 124,3563 }, { 125,3563 },
 { 126,3563 }, { 127,3563 }, { 128,3821 }, { 129,3821 }, { 130,3821 },
 { 131,3821 }, { 132,3821 }, { 133,3821 }, { 134,3821 }, { 135,3821 },
 { 136,3821 }, { 137,3821 }, { 138,3821 }, { 139,3821 }, { 140,3821 },
 { 141,3821 }, { 142,3821 }, { 143,3821 }, { 144,3821 }, { 145,3821 },
 { 146,3821 }, { 147,3821 }, { 148,3821 }, { 149,3821 }, { 150,3821 },
 { 151,3821 }, { 152,3821 }, { 153,3821 }, { 154,3821 }, { 155,3821 },
 { 156,3821 }, { 157,3821 }, { 158,3821 }, { 159,3821 }, { 160,3821 },
 { 161,3821 }, { 162,3821 }, { 163,3821 }, { 164,3821 }, { 165,3821 },
 { 166,3821 }, { 167,3821 }, { 168,3821 }, { 169,3821 }, { 170,3821 },

 { 171,3821 }, { 172,3821 }, { 173,3821 }, { 174,3821 }, { 175,3821 },
 { 176,3821 }, { 177,3821 }, { 178,3821 }, { 179,3821 }, { 180,3821 },
 { 181,3821 }, { 182,3821 }, { 183,3821 }, { 184,3821 }, { 185,3821 },
 { 186,3821 }, { 187,3821 }, { 188,3821 }, { 189,3821 }, { 190,3821 },
 { 191,3821 }, { 192,3563 }, { 193,3563 }, { 194,3563 }, { 195,3563 },
 { 196,3563 }, { 197,3563 }, { 198,3563 }, { 199,3563 }, { 200,3563 },
 { 201,3563 }, { 202,3563 }, { 203,3563 }, { 204,3563 }, { 205,3563 },
 { 206,3563 }, { 207,3563 }, { 208,3563 }, { 209,3563 }, { 210,3563 },
 { 211,3563 }, { 212,3563 }, { 213,3563 }, { 214,3563 }, { 215,3563 },
 { 216,3563 }, { 217,3563 }, { 218,3563 }, { 219,3563 }, { 220,3563 },

 { 221,3563 }, { 222,3563 }, { 223,3563 }, { 224,3563 }, { 225,3563 },
 { 226,3563 }, { 227,3563 }, { 228,3563 }, { 229,3563 }, { 230,3563 },
 { 231,3563 }, { 232,3563 }, { 233,3563 }, { 234,3563 }, { 235,3563 },
 { 236,3563 }, { 237,3563 }, { 238,3563 }, { 239,3563 }, { 240,3563 },
 { 241,3563 }, { 242,3563 }, { 243,3563 }, { 244,3563 }, { 245,3563 },
 { 246,3563 }, { 247,3563 }, { 248,3563 }, { 249,3563 }, { 250,3563 },
 { 251,3563 }, { 252,3563 }, { 253,3563 }, { 254,3563 }, { 255,3563 },
 { 256,3563 }, {   0,   3 }, {   0,10225 }, {   1,3305 }, {   2,3305 },
 {   3,3305 }, {   4,3305 }, {   5,3305 }, {   6,3305 }, {   7,3305 },
 {   8,3305 }, {   9,3305 }, {  10,3305 }, {  11,3305 }, {  12,3305 },

 {  13,3305 }, {  14,3305 }, {  15,3305 }, {  16,3305 }, {  17,3305 },
 {  18,3305 }, {  19,3305 }, {  20,3305 }, {  21,3305 }, {  22,3305 },
 {  23,3305 }, {  24,3305 }, {  25,3305 }, {  26,3305 }, {  27,3305 },
 {  28,3305 }, {  29,3305 }, {  30,3305 }, {  31,3305 }, {  32,3305 },
 {  33,3305 }, {  34,3305 }, {  35,3305 }, {  36,3305 }, {  37,3305 },
 {  38,3305 }, {  39,3305 }, {  40,3305 }, {  41,3305 }, {   0,   0 },
 {  43,3305 }, {  44,3305 }, {  45,3305 }, {  46,3305 }, {  47,3305 },
 {  48,3305 }, {  49,3305 }, {  50,3305 }, {  51,3305 }, {  52,3305 },
 {  53,3305 }, {  54,3305 }, {  55,3305 }, {  56,3305 }, {  57,3305 },
 {  58,3305 }, {  59,3305 }, {  60,3305 }, {  61,3305 }, {  62,3305 },

 {  63,3305 }, {  64,3305 }, {  65,3305 }, {  66,3305 }, {  67,3305 },
 {  68,3305 }, {  69,3305 }, {  70,3305 }, {  71,3305 }, {  72,3305 },
 {  73,3305 }, {  74,3305 }, {  75,3305 }, {  76,3305 }, {  77,3305 },
 {  78,3305 }, {  79,3305 }, {  80,3305 }, {  81,3305 }, {  82,3305 },
 {  83,3305 }, {  84,3305 }, {  85,3305 }, {  86,3305 }, {  87,3305 },
 {  88,3305 }, {  89,3305 }, {  90,3305 }, {  91,3305 }, {  92,3305 },
 {  93,3305 }, {  94,3305 }, {  95,3305 }, {  96,3305 }, {  97,3305 },
 {  98,3305 }, {  99,3305 }, { 100,3305 }, { 101,3305 }, { 102,3305 },
 { 103,3305 }, { 104,3305 }, { 105,3305 }, { 106,3305 }, { 107,3305 },
 { 108,3305 }, { 109,3305 }, { 110,3305 }, { 111,3305 }, { 112,3305 },

 { 113,3305 }, { 114,3305 }, { 115,3305 }, { 116,3305 }, { 117,3305 },
 { 118,3305 }, { 119,3305 }, { 120,3305 }, { 121,3305 }, { 122,3305 },
 { 123,3305 }, { 124,3305 }, { 125,3305 }, { 126,3305 }, { 127,3305 },
 { 128,3821 }, { 129,3821 }, { 130,3821 }, { 131,3821 }, { 132,3821 },
 { 133,3821 }, { 134,3821 }, { 135,3821 }, { 136,3821 }, { 137,3821 },
 { 138,3821 }, { 139,3821 }, { 140,3821 }, { 141,3821 }, { 142,3821 },
 { 143,3821 }, { 144,3821 }, { 145,3821 }, { 146,3821 }, { 147,3821 },
 { 148,3821 }, { 149,3821 }, { 150,3821 }, { 151,3821 }, { 152,3821 },
 { 153,3821 }, { 154,3821 }, { 155,3821 }, { 156,3821 }, { 157,3821 },
 { 158,3821 }, { 159,3821 }, { 160,3821 }, { 161,3821 }, { 162,3821 },

 { 163,3821 }, { 164,3821 }, { 165,3821 }, { 166,3821 }, { 167,3821 },
 { 168,3821 }, { 169,3821 }, { 170,3821 }, { 171,3821 }, { 172,3821 },
 { 173,3821 }, { 174,3821 }, { 175,3821 }, { 176,3821 }, { 177,3821 },
 { 178,3821 }, { 179,3821 }, { 180,3821 }, { 181,3821 }, { 182,3821 },
 { 183,3821 }, { 184,3821 }, { 185,3821 }, { 186,3821 }, { 187,3821 },
 { 188,3821 }, { 189,3821 }, { 190,3821 }, { 191,3821 }, { 192,3305 },
 { 193,3305 }, { 194,3305 }, { 195,3305 }, { 196,3305 }, { 197,3305 },
 { 198,3305 }, { 199,3305 }, { 200,3305 }, { 201,3305 }, { 202,3305 },
 { 203,3305 }, { 204,3305 }, { 205,3305 }, { 206,3305 }, { 207,3305 },
 { 208,3305 }, { 209,3305 }, { 210,3305 }, { 211,3305 }, { 212,3305 },

 { 213,3305 }, { 214,3305 }, { 215,3305 }, { 216,3305 }, { 217,3305 },
 { 218,3305 }, { 219,3305 }, { 220,3305 }, { 221,3305 }, { 222,3305 },
 { 223,3305 }, { 224,3305 }, { 225,3305 }, { 226,3305 }, { 227,3305 },
 { 228,3305 }, { 229,3305 }, { 230,3305 }, { 231,3305 }, { 232,3305 },
 { 233,3305 }, { 234,3305 }, { 235,3305 }, { 236,3305 }, { 237,3305 },
 { 238,3305 }, { 239,3305 }, { 240,3305 }, { 241,3305 }, { 242,3305 },
 { 243,3305 }, { 244,3305 }, { 245,3305 }, { 246,3305 }, { 247,3305 },
 { 248,3305 }, { 249,3305 }, { 250,3305 }, { 251,3305 }, { 252,3305 },
 { 253,3305 }, { 254,3305 }, { 255,3305 }, { 256,3305 }, {   0,   3 },
 {   0,9967 }, {   1,3047 }, {   2,3047 }, {   3,3047 }, {   4,3047 },

 {   5,3047 }, {   6,3047 }, {   7,3047 }, {   8,3047 }, {   9,3047 },
 {  10,3047 }, {  11,3047 }, {  12,3047 }, {  13,3047 }, {  14,3047 },
 {  15,3047 }, {  16,3047 }, {  17,3047 }, {  18,3047 }, {  19,3047 },
 {  20,3047 }, {  21,3047 }, {  22,3047 }, {  23,3047 }, {  24,3047 },
 {  25,3047 }, {  26,3047 }, {  27,3047 }, {  28,3047 }, {  29,3047 },
 {  30,3047 }, {  31,3047 }, {  32,3047 }, {  33,3047 }, {  34,3047 },
 {  35,3047 }, {  36,3047 }, {  37,3047 }, {  38,3047 }, {  39,3047 },
 {  40,3047 }, {  41,3047 }, {   0,   0 }, {  43,3047 }, {  44,3047 },
 {  45,3047 }, {  46,3047 }, {  47,3047 }, {  48,3047 }, {  49,3047 },
 {  50,3047 }, {  51,3047 }, {  52,3047 }, {  53,3047 }, {  54,3047 },

 {  55,3047 }, {  56,3047 }, {  57,3047 }, {  58,3047 }, {  59,3047 },
 {  60,3047 }, {  61,3047 }, {  62,3047 }, {  63,3047 }, {  64,3047 },
 {  65,3047 }, {  66,3047 }, {  67,3047 }, {  68,3047 }, {  69,3047 },
 {  70,3047 }, {  71,3047 }, {  72,3047 }, {  73,3047 }, {  74,3047 },
 {  75,3047 }, {  76,3047 }, {  77,3047 }, {  78,3047 }, {  79,3047 },
 {  80,3047 }, {  81,3047 }, {  82,3047 }, {  83,3047 }, {  84,3047 },
 {  85,3047 }, {  86,3047 }, {  87,3047 }, {  88,3047 }, {  89,3047 },
 {  90,3047 }, {  91,3047 }, {  92,3047 }, {  93,3047 }, {  94,3047 },
 {  95,3047 }, {  96,3047 }, {  97,3047 }, {  98,3047 }, {  99,3047 },
 { 100,3047 }, { 101,3047 }, { 102,3047 }, { 103,3047 }, { 104,3047 },

 { 105,3047 }, { 106,3047 }, { 107,3047 }, { 108,3047 }, { 109,3047 },
 { 110,3047 }, { 111,3047 }, { 112,3047 }, { 113,3047 }, { 114,3047 },
 { 115,3047 }, { 116,3047 }, { 117,3047 }, { 118,3047 }, { 119,3047 },
 { 120,3047 }, { 121,3047 }, { 122,3047 }, { 123,3047 }, { 124,3047 },
 { 125,3047 }, { 126,3047 }, { 127,3047 }, { 128,3821 }, { 129,3821 },
 { 130,3821 }, { 131,3821 }, { 132,3821 }, { 133,3821 }, { 134,3821 },
 { 135,3821 }, { 136,3821 }, { 137,3821 }, { 138,3821 }, { 139,3821 },
 { 140,3821 }, { 141,3821 }, { 142,3821 }, { 143,3821 }, { 144,3821 },
 { 145,3821 }, { 146,3821 }, { 147,3821 }, { 148,3821 }, { 149,3821 },
 { 150,3821 }, { 151,3821 }, { 152,3821 }, { 153,3821 }, { 154,3821 },

 { 155,3821 }, { 156,3821 }, { 157,3821 }, { 158,3821 }, { 159,3821 },
 { 160,3821 }, { 161,3821 }, { 162,3821 }, { 163,3821 }, { 164,3821 },
 { 165,3821 }, { 166,3821 }, { 167,3821 }, { 168,3821 }, { 169,3821 },
 { 170,3821 }, { 171,3821 }, { 172,3821 }, { 173,3821 }, { 174,3821 },
 { 175,3821 }, { 176,3821 }, { 177,3821 }, { 178,3821 }, { 179,3821 },
 { 180,3821 }, { 181,3821 }, { 182,3821 }, { 183,3821 }, { 184,3821 },
 { 185,3821 }, { 186,3821 }, { 187,3821 }, { 188,3821 }, { 189,3821 },
 { 190,3821 }, { 191,3821 }, { 192,3047 }, { 193,3047 }, { 194,3047 },
 { 195,3047 }, { 196,3047 }, { 197,3047 }, { 198,3047 }, { 199,3047 },
 { 200,3047 }, { 201,3047 }, { 202,3047 }, { 203,3047 }, { 204,3047 },

 { 205,3047 }, { 206,3047 }, { 207,3047 }, { 208,3047 }, { 209,3047 },
 { 210,3047 }, { 211,3047 }, { 212,3047 }, { 213,3047 }, { 214,3047 },
 { 215,3047 }, { 216,3047 }, { 217,3047 }, { 218,3047 }, { 219,3047 },
 { 220,3047 }, { 221,3047 }, { 222,3047 }, { 223,3047 }, { 224,3047 },
 { 225,3047 }, { 226,3047 }, { 227,3047 }, { 228,3047 }, { 229,3047 },
 { 230,3047 }, { 231,3047 }, { 232,3047 }, { 233,3047 }, { 234,3047 },
 { 235,3047 }, { 236,3047 }, { 237,3047 }, { 238,3047 }, { 239,3047 },
 { 240,3047 }, { 241,3047 }, { 242,3047 }, { 243,3047 }, { 244,3047 },
 { 245,3047 }, { 246,3047 }, { 247,3047 }, { 248,3047 }, { 249,3047 },
 { 250,3047 }, { 251,3047 }, { 252,3047 }, { 253,3047 }, { 254,3047 },

 { 255,3047 }, { 256,3047 }, {   0,  43 }, {   0,9709 }, {   1,3821 },
 {   2,3821 }, {   3,3821 }, {   4,3821 }, {   5,3821 }, {   6,3821 },
 {   7,3821 }, {   8,3821 }, {   9,3821 }, {  10,3821 }, {  11,3821 },
 {  12,3821 }, {  13,-2818 }, {  14,3821 }, {  15,3821 }, {  16,3821 },
 {  17,3821 }, {  18,3821 }, {  19,3821 }, {  20,3821 }, {  21,3821 },
 {  22,3821 }, {  23,3821 }, {  24,3821 }, {  25,3821 }, {  26,3821 },
 {  27,3821 }, {  28,3821 }, {  29,3821 }, {  30,3821 }, {  31,3821 },
 {  32,3821 }, {  33,3821 }, {  34,3821 }, {  35,3821 }, {  36,3821 },
 {  37,3821 }, {  38,3821 }, {  39,3821 }, {  40,3821 }, {  41,3821 },
 {  42,3821 }, {  43,3821 }, {  44,3821 }, {  45,3821 }, {  46,3821 },

 {  47,3821 }, {  48,3821 }, {  49,3821 }, {  50,3821 }, {  51,3821 },
 {  52,3821 }, {  53,3821 }, {  54,3821 }, {  55,3821 }, {  56,3821 },
 {  57,3821 }, {  58,3821 }, {  59,3821 }, {  60,3821 }, {  61,3821 },
 {  62,3821 }, {  63,3821 }, {  64,3821 }, {  65,3821 }, {  66,3821 },
 {  67,3821 }, {  68,3821 }, {  69,3821 }, {  70,3821 }, {  71,3821 },
 {  72,3821 }, {  73,3821 }, {  74,3821 }, {  75,3821 }, {  76,3821 },
 {  77,3821 }, {  78,3821 }, {  79,3821 }, {  80,3821 }, {  81,3821 },
 {  82,3821 }, {  83,3821 }, {  84,3821 }, {  85,3821 }, {  86,3821 },
 {  87,3821 }, {  88,3821 }, {  89,3821 }, {  90,3821 }, {  91,3821 },
 {  92,3821 }, {  93,3821 }, {  94,3821 }, {  95,3821 }, {  96,3821 },

 {  97,3821 }, {  98,3821 }, {  99,3821 }, { 100,3821 }, { 101,3821 },
 { 102,3821 }, { 103,3821 }, { 104,3821 }, { 105,3821 }, { 106,3821 },
 { 107,3821 }, { 108,3821 }, { 109,3821 }, { 110,3821 }, { 111,3821 },
 { 112,3821 }, { 113,3821 }, { 114,3821 }, { 115,3821 }, { 116,3821 },
 { 117,3821 }, { 118,3821 }, { 119,3821 }, { 120,3821 }, { 121,3821 },
 { 122,3821 }, { 123,3821 }, { 124,3821 }, { 125,3821 }, { 126,3821 },
 { 127,3821 }, { 128,3821 }, { 129,3821 }, { 130,3821 }, { 131,3821 },
 { 132,3821 }, { 133,3821 }, { 134,3821 }, { 135,3821 }, { 136,3821 },
 { 137,3821 }, { 138,3821 }, { 139,3821 }, { 140,3821 }, { 141,3821 },
 { 142,3821 }, { 143,3821 }, { 144,3821 }, { 145,3821 }, { 146,3821 },

 { 147,3821 }, { 148,3821 }, { 149,3821 }, { 150,3821 }, { 151,3821 },
 { 152,3821 }, { 153,3821 }, { 154,3821 }, { 155,3821 }, { 156,3821 },
 { 157,3821 }, { 158,3821 }, { 159,3821 }, { 160,3821 }, { 161,3821 },
 { 162,3821 }, { 163,3821 }, { 164,3821 }, { 165,3821 }, { 166,3821 },
 { 167,3821 }, { 168,3821 }, { 169,3821 }, { 170,3821 }, { 171,3821 },
 { 172,3821 }, { 173,3821 }, { 174,3821 }, { 175,3821 }, { 176,3821 },
 { 177,3821 }, { 178,3821 }, { 179,3821 }, { 180,3821 }, { 181,3821 },
 { 182,3821 }, { 183,3821 }, { 184,3821 }, { 185,3821 }, { 186,3821 },
 { 187,3821 }, { 188,3821 }, { 189,3821 }, { 190,3821 }, { 191,3821 },
 { 192,3821 }, { 193,3821 }, { 194,3821 }, { 195,3821 }, { 196,3821 },

 { 197,3821 }, { 198,3821 }, { 199,3821 }, { 200,3821 }, { 201,3821 },
 { 202,3821 }, { 203,3821 }, { 204,3821 }, { 205,3821 }, { 206,3821 },
 { 207,3821 }, { 208,3821 }, { 209,3821 }, { 210,3821 }, { 211,3821 },
 { 212,3821 }, { 213,3821 }, { 214,3821 }, { 215,3821 }, { 216,3821 },
 { 217,3821 }, { 218,3821 }, { 219,3821 }, { 220,3821 }, { 221,3821 },
 { 222,3821 }, { 223,3821 }, { 224,3821 }, { 225,3821 }, { 226,3821 },
 { 227,3821 }, { 228,3821 }, { 229,3821 }, { 230,3821 }, { 231,3821 },
 { 232,3821 }, { 233,3821 }, { 234,3821 }, { 235,3821 }, { 236,3821 },
 { 237,3821 }, { 238,3821 }, { 239,3821 }, { 240,3821 }, { 241,3821 },
 { 242,3821 }, { 243,3821 }, { 244,3821 }, { 245,3821 }, { 246,3821 },

 { 247,3821 }, { 248,3821 }, { 249,3821 }, { 250,3821 }, { 251,3821 },
 { 252,3821 }, { 253,3821 }, { 254,3821 }, { 255,3821 }, { 256,3821 },
 {   0,   8 }, {   0,9451 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  10,3821 }, {   0,   0 }, {   0,   0 }, {  13,3821 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,3821 }, {  33,3821 },
 {   0,   0 }, {  35,3821 }, {  36,3821 }, {  37,3821 }, {  38,3821 },

 {  39,3821 }, {  40,3821 }, {  41,3821 }, {  42,3821 }, {  43,3821 },
 {  44,3821 }, {  45,3821 }, {  46,3821 }, {  47,3821 }, {  48,3821 },
 {  49,3821 }, {  50,3821 }, {  51,3821 }, {  52,3821 }, {  53,3821 },
 {  54,3821 }, {  55,3821 }, {  56,3821 }, {  57,3821 }, {  58,3821 },
 {  59,3821 }, {  60,3821 }, {  61,3821 }, {  62,3821 }, {  63,3821 },
 {  64,3821 }, {  65,3821 }, {  66,3821 }, {  67,3821 }, {  68,3821 },
 {  69,3821 }, {  70,3821 }, {  71,3821 }, {  72,3821 }, {  73,3821 },
 {  74,3821 }, {  75,3821 }, {  76,3821 }, {  77,3821 }, {  78,3821 },
 {  79,3821 }, {  80,3821 }, {  81,3821 }, {  82,3821 }, {  83,3821 },
 {  84,3821 }, {  85,3821 }, {  86,3821 }, {  87,3821 }, {  88,3821 },

 {  89,3821 }, {  90,3821 }, {  91,3821 }, {   0,   0 }, {  93,3821 },
 {  94,3821 }, {  95,3821 }, {  96,3821 }, {  97,3821 }, {  98,3821 },
 {  99,3821 }, { 100,3821 }, { 101,3821 }, { 102,3821 }, { 103,3821 },
 { 104,3821 }, { 105,3821 }, { 106,3821 }, { 107,3821 }, { 108,3821 },
 { 109,3821 }, { 110,3821 }, { 111,3821 }, { 112,3821 }, { 113,3821 },
 { 114,3821 }, { 115,3821 }, { 116,3821 }, { 117,3821 }, { 118,3821 },
 { 119,3821 }, { 120,3821 }, { 121,3821 }, { 122,3821 }, { 123,3821 },
 { 124,3821 }, { 125,3821 }, { 126,3821 }, {   0,   0 }, { 128,3821 },
 { 129,3821 }, { 130,3821 }, { 131,3821 }, { 132,3821 }, { 133,3821 },
 { 134,3821 }, { 135,3821 }, { 136,3821 }, { 137,3821 }, { 138,3821 },

 { 139,3821 }, { 140,3821 }, { 141,3821 }, { 142,3821 }, { 143,3821 },
 { 144,3821 }, { 145,3821 }, { 146,3821 }, { 147,3821 }, { 148,3821 },
 { 149,3821 }, { 150,3821 }, { 151,3821 }, { 152,3821 }, { 153,3821 },
 { 154,3821 }, { 155,3821 }, { 156,3821 }, { 157,3821 }, { 158,3821 },
 { 159,3821 }, { 160,3821 }, { 161,3821 }, { 162,3821 }, { 163,3821 },
 { 164,3821 }, { 165,3821 }, { 166,3821 }, { 167,3821 }, { 168,3821 },
 { 169,3821 }, { 170,3821 }, { 171,3821 }, { 172,3821 }, { 173,3821 },
 { 174,3821 }, { 175,3821 }, { 176,3821 }, { 177,3821 }, { 178,3821 },
 { 179,3821 }, { 180,3821 }, { 181,3821 }, { 182,3821 }, { 183,3821 },
 { 184,3821 }, { 185,3821 }, { 186,3821 }, { 187,3821 }, { 188,3821 },

 { 189,3821 }, { 190,3821 }, { 191,3821 }, { 192,3821 }, { 193,3821 },
 { 194,4078 }, { 195,4078 }, { 196,4078 }, { 197,4078 }, { 198,4078 },
 { 199,4078 }, { 200,4078 }, { 201,4078 }, { 202,4078 }, { 203,4078 },
 { 204,4078 }, { 205,4078 }, { 206,4078 }, { 207,4078 }, { 208,4078 },
 { 209,4078 }, { 210,4078 }, { 211,4078 }, { 212,4078 }, { 213,4078 },
 { 214,4078 }, { 215,4078 }, { 216,4078 }, { 217,4078 }, { 218,4078 },
 { 219,4078 }, { 220,4078 }, { 221,4078 }, { 222,4078 }, { 223,4078 },
 { 224,4335 }, { 225,4335 }, { 226,4335 }, { 227,4335 }, { 228,4335 },
 { 229,4335 }, { 230,4335 }, { 231,4335 }, { 232,4335 }, { 233,4335 },
 { 234,4335 }, { 235,4335 }, { 236,4335 }, { 237,4335 }, { 238,4335 },

 { 239,4335 }, { 240,4592 }, { 241,4592 }, { 242,4592 }, { 243,4592 },
 { 244,4592 }, { 245,3821 }, { 246,3821 }, { 247,3821 }, { 248,3821 },
 { 249,3821 }, { 250,3821 }, { 251,3821 }, { 252,3821 }, { 253,3821 },
 { 254,3821 }, { 255,3821 }, {   0,  43 }, {   0,9194 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  34,-3329 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  39,-3329 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,4592 }, {  49,4592 }, {  50,4592 }, {  51,4592 },
 {  52,4592 }, {  53,4592 }, {  54,4592 }, {  55,4592 }, {  56,4592 },
 {  57,4592 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  88,4602 }, {   0,   8 }, {   0,9104 }, {   0,   0 },
 {  92,-3329 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  97,-3329 }, {  98,-3329 }, {   0,   0 }, {  10,3474 }, {   0,   0 },
 { 102,-3329 }, {  13,3474 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, { 110,-3329 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, { 114,-3329 }, {   0,   0 }, { 116,-3329 },
 {   0,   0 }, { 118,-3329 }, {   0,   0 }, { 120,4602 }, {   0,   0 },
 {  32,3474 }, {  33,3474 }, {   0,   0 }, {  35,3474 }, {  36,3474 },
 {  37,3474 }, {  38,3474 }, {  39,3474 }, {  40,3474 }, {  41,3474 },

 {  42,3474 }, {  43,3474 }, {  44,3474 }, {  45,3474 }, {  46,3474 },
 {  47,3474 }, {  48,3474 }, {  49,3474 }, {  50,3474 }, {  51,3474 },
 {  52,3474 }, {  53,3474 }, {  54,3474 }, {  55,3474 }, {  56,3474 },
 {  57,3474 }, {  58,3474 }, {  59,3474 }, {  60,3474 }, {  61,3474 },
 {  62,3474 }, {  63,3474 }, {  64,3474 }, {  65,3474 }, {  66,3474 },
 {  67,3474 }, {  68,3474 }, {  69,3474 }, {  70,3474 }, {  71,3474 },
 {  72,3474 }, {  73,3474 }, {  74,3474 }, {  75,3474 }, {  76,3474 },
 {  77,3474 }, {  78,3474 }, {  79,3474 }, {  80,3474 }, {  81,3474 },
 {  82,3474 }, {  83,3474 }, {  84,3474 }, {  85,3474 }, {  86,3474 },
 {  87,3474 }, {  88,3474 }, {  89,3474 }, {  90,3474 }, {  91,3474 },

 {   0,   0 }, {  93,3474 }, {  94,3474 }, {  95,3474 }, {  96,3474 },
 {  97,3474 }, {  98,3474 }, {  99,3474 }, { 100,3474 }, { 101,3474 },
 { 102,3474 }, { 103,3474 }, { 104,3474 }, { 105,3474 }, { 106,3474 },
 { 107,3474 }, { 108,3474 }, { 109,3474 }, { 110,3474 }, { 111,3474 },
 { 112,3474 }, { 113,3474 }, { 114,3474 }, { 115,3474 }, { 116,3474 },
 { 117,3474 }, { 118,3474 }, { 119,3474 }, { 120,3474 }, { 121,3474 },
 { 122,3474 }, { 123,3474 }, { 124,3474 }, { 125,3474 }, { 126,3474 },
 {   0,   0 }, { 128,4584 }, { 129,4584 }, { 130,4584 }, { 131,4584 },
 { 132,4584 }, { 133,4584 }, { 134,4584 }, { 135,4584 }, { 136,4584 },
 { 137,4584 }, { 138,4584 }, { 139,4584 }, { 140,4584 }, { 141,4584 },

 { 142,4584 }, { 143,4584 }, { 144,4584 }, { 145,4584 }, { 146,4584 },
 { 147,4584 }, { 148,4584 }, { 149,4584 }, { 150,4584 }, { 151,4584 },
 { 152,4584 }, { 153,4584 }, { 154,4584 }, { 155,4584 }, { 156,4584 },
 { 157,4584 }, { 158,4584 }, { 159,4584 }, { 160,4584 }, { 161,4584 },
 { 162,4584 }, { 163,4584 }, { 164,4584 }, { 165,4584 }, { 166,4584 },
 { 167,4584 }, { 168,4584 }, { 169,4584 }, { 170,4584 }, { 171,4584 },
 { 172,4584 }, { 173,4584 }, { 174,4584 }, { 175,4584 }, { 176,4584 },
 { 177,4584 }, { 178,4584 }, { 179,4584 }, { 180,4584 }, { 181,4584 },
 { 182,4584 }, { 183,4584 }, { 184,4584 }, { 185,4584 }, { 186,4584 },
 { 187,4584 }, { 188,4584 }, { 189,4584 }, { 190,4584 }, { 191,4584 },

 { 192,3474 }, { 193,3474 }, { 194,3731 }, { 195,3731 }, { 196,3731 },
 { 197,3731 }, { 198,3731 }, { 199,3731 }, { 200,3731 }, { 201,3731 },
 { 202,3731 }, { 203,3731 }, { 204,3731 }, { 205,3731 }, { 206,3731 },
 { 207,3731 }, { 208,3731 }, { 209,3731 }, { 210,3731 }, { 211,3731 },
 { 212,3731 }, { 213,3731 }, { 214,3731 }, { 215,3731 }, { 216,3731 },
 { 217,3731 }, { 218,3731 }, { 219,3731 }, { 220,3731 }, { 221,3731 },
 { 222,3731 }, { 223,3731 }, { 224,3988 }, { 225,3988 }, { 226,3988 },
 { 227,3988 }, { 228,3988 }, { 229,3988 }, { 230,3988 }, { 231,3988 },
 { 232,3988 }, { 233,3988 }, { 234,3988 }, { 235,3988 }, { 236,3988 },
 { 237,3988 }, { 238,3988 }, { 239,3988 }, { 240,4245 }, { 241,4245 },

 { 242,4245 }, { 243,4245 }, { 244,4245 }, { 245,3474 }, { 246,3474 },
 { 247,3474 }, { 248,3474 }, { 249,3474 }, { 250,3474 }, { 251,3474 },
 { 252,3474 }, { 253,3474 }, { 254,3474 }, { 255,3474 }, {   0,   8 },
 {   0,8847 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  10,3217 }, {   0,   0 }, {   0,   0 }, {  13,3217 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  32,3217 }, {  33,3217 }, {   0,   0 },

 {  35,3217 }, {  36,3217 }, {  37,3217 }, {  38,3217 }, {  39,3217 },
 {  40,3217 }, {  41,3217 }, {  42,3217 }, {  43,3217 }, {  44,3217 },
 {  45,3217 }, {  46,3217 }, {  47,3217 }, {  48,3217 }, {  49,3217 },
 {  50,3217 }, {  51,3217 }, {  52,3217 }, {  53,3217 }, {  54,3217 },
 {  55,3217 }, {  56,3217 }, {  57,3217 }, {  58,3217 }, {  59,3217 },
 {  60,3217 }, {  61,3217 }, {  62,3217 }, {  63,3217 }, {  64,3217 },
 {  65,3217 }, {  66,3217 }, {  67,3217 }, {  68,3217 }, {  69,3217 },
 {  70,3217 }, {  71,3217 }, {  72,3217 }, {  73,3217 }, {  74,3217 },
 {  75,3217 }, {  76,3217 }, {  77,3217 }, {  78,3217 }, {  79,3217 },
 {  80,3217 }, {  81,3217 }, {  82,3217 }, {  83,3217 }, {  84,3217 },

 {  85,3217 }, {  86,3217 }, {  87,3217 }, {  88,3217 }, {  89,3217 },
 {  90,3217 }, {  91,3217 }, {   0,   0 }, {  93,3217 }, {  94,3217 },
 {  95,3217 }, {  96,3217 }, {  97,3217 }, {  98,3217 }, {  99,3217 },
 { 100,3217 }, { 101,3217 }, { 102,3217 }, { 103,3217 }, { 104,3217 },
 { 105,3217 }, { 106,3217 }, { 107,3217 }, { 108,3217 }, { 109,3217 },
 { 110,3217 }, { 111,3217 }, { 112,3217 }, { 113,3217 }, { 114,3217 },
 { 115,3217 }, { 116,3217 }, { 117,3217 }, { 118,3217 }, { 119,3217 },
 { 120,3217 }, { 121,3217 }, { 122,3217 }, { 123,3217 }, { 124,3217 },
 { 125,3217 }, { 126,3217 }, {   0,   0 }, { 128,4584 }, { 129,4584 },
 { 130,4584 }, { 131,4584 }, { 132,4584 }, { 133,4584 }, { 134,4584 },

 { 135,4584 }, { 136,4584 }, { 137,4584 }, { 138,4584 }, { 139,4584 },
 { 140,4584 }, { 141,4584 }, { 142,4584 }, { 143,4584 }, { 144,4584 },
 { 145,4584 }, { 146,4584 }, { 147,4584 }, { 148,4584 }, { 149,4584 },
 { 150,4584 }, { 151,4584 }, { 152,4584 }, { 153,4584 }, { 154,4584 },
 { 155,4584 }, { 156,4584 }, { 157,4584 }, { 158,4584 }, { 159,4584 },
 { 160,4584 }, { 161,4584 }, { 162,4584 }, { 163,4584 }, { 164,4584 },
 { 165,4584 }, { 166,4584 }, { 167,4584 }, { 168,4584 }, { 169,4584 },
 { 170,4584 }, { 171,4584 }, { 172,4584 }, { 173,4584 }, { 174,4584 },
 { 175,4584 }, { 176,4584 }, { 177,4584 }, { 178,4584 }, { 179,4584 },
 { 180,4584 }, { 181,4584 }, { 182,4584 }, { 183,4584 }, { 184,4584 },

 { 185,4584 }, { 186,4584 }, { 187,4584 }, { 188,4584 }, { 189,4584 },
 { 190,4584 }, { 191,4584 }, { 192,3217 }, { 193,3217 }, { 194,3474 },
 { 195,3474 }, { 196,3474 }, { 197,3474 }, { 198,3474 }, { 199,3474 },
 { 200,3474 }, { 201,3474 }, { 202,3474 }, { 203,3474 }, { 204,3474 },
 { 205,3474 }, { 206,3474 }, { 207,3474 }, { 208,3474 }, { 209,3474 },
 { 210,3474 }, { 211,3474 }, { 212,3474 }, { 213,3474 }, { 214,3474 },
 { 215,3474 }, { 216,3474 }, { 217,3474 }, { 218,3474 }, { 219,3474 },
 { 220,3474 }, { 221,3474 }, { 222,3474 }, { 223,3474 }, { 224,3731 },
 { 225,3731 }, { 226,3731 }, { 227,3731 }, { 228,3731 }, { 229,3731 },
 { 230,3731 }, { 231,3731 }, { 232,3731 }, { 233,3731 }, { 234,3731 },

 { 235,3731 }, { 236,3731 }, { 237,3731 }, { 238,3731 }, { 239,3731 },
 { 240,3988 }, { 241,3988 }, { 242,3988 }, { 243,3988 }, { 244,3988 },
 { 245,3217 }, { 246,3217 }, { 247,3217 }, { 248,3217 }, { 249,3217 },
 { 250,3217 }, { 251,3217 }, { 252,3217 }, { 253,3217 }, { 254,3217 },
 { 255,3217 }, {   0,   8 }, {   0,8590 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  10,2960 }, {   0,   0 }, {   0,   0 },
 {  13,2960 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,2960 },
 {  33,2960 }, {   0,   0 }, {  35,2960 }, {  36,2960 }, {  37,2960 },
 {  38,2960 }, {  39,2960 }, {  40,2960 }, {  41,2960 }, {  42,2960 },
 {  43,2960 }, {  44,2960 }, {  45,2960 }, {  46,2960 }, {  47,2960 },
 {  48,2960 }, {  49,2960 }, {  50,2960 }, {  51,2960 }, {  52,2960 },
 {  53,2960 }, {  54,2960 }, {  55,2960 }, {  56,2960 }, {  57,2960 },
 {  58,2960 }, {  59,2960 }, {  60,2960 }, {  61,2960 }, {  62,2960 },
 {  63,2960 }, {  64,2960 }, {  65,2960 }, {  66,2960 }, {  67,2960 },
 {  68,2960 }, {  69,2960 }, {  70,2960 }, {  71,2960 }, {  72,2960 },
 {  73,2960 }, {  74,2960 }, {  75,2960 }, {  76,2960 }, {  77,2960 },

 {  78,2960 }, {  79,2960 }, {  80,2960 }, {  81,2960 }, {  82,2960 },
 {  83,2960 }, {  84,2960 }, {  85,2960 }, {  86,2960 }, {  87,2960 },
 {  88,2960 }, {  89,2960 }, {  90,2960 }, {  91,2960 }, {   0,   0 },
 {  93,2960 }, {  94,2960 }, {  95,2960 }, {  96,2960 }, {  97,2960 },
 {  98,2960 }, {  99,2960 }, { 100,2960 }, { 101,2960 }, { 102,2960 },
 { 103,2960 }, { 104,2960 }, { 105,2960 }, { 106,2960 }, { 107,2960 },
 { 108,2960 }, { 109,2960 }, { 110,2960 }, { 111,2960 }, { 112,2960 },
 { 113,2960 }, { 114,2960 }, { 115,2960 }, { 116,2960 }, { 117,2960 },
 { 118,2960 }, { 119,2960 }, { 120,2960 }, { 121,2960 }, { 122,2960 },
 { 123,2960 }, { 124,2960 }, { 125,2960 }, { 126,2960 }, {   0,   0 },

 { 128,4584 }, { 129,4584 }, { 130,4584 }, { 131,4584 }, { 132,4584 },
 { 133,4584 }, { 134,4584 }, { 135,4584 }, { 136,4584 }, { 137,4584 },
 { 138,4584 }, { 139,4584 }, { 140,4584 }, { 141,4584 }, { 142,4584 },
 { 143,4584 }, { 144,4584 }, { 145,4584 }, { 146,4584 }, { 147,4584 },
 { 148,4584 }, { 149,4584 }, { 150,4584 }, { 151,4584 }, { 152,4584 },
 { 153,4584 }, { 154,4584 }, { 155,4584 }, { 156,4584 }, { 157,4584 },
 { 158,4584 }, { 159,4584 }, { 160,4584 }, { 161,4584 }, { 162,4584 },
 { 163,4584 }, { 164,4584 }, { 165,4584 }, { 166,4584 }, { 167,4584 },
 { 168,4584 }, { 169,4584 }, { 170,4584 }, { 171,4584 }, { 172,4584 },
 { 173,4584 }, { 174,4584 }, { 175,4584 }, { 176,4584 }, { 177,4584 },

 { 178,4584 }, { 179,4584 }, { 180,4584 }, { 181,4584 }, { 182,4584 },
 { 183,4584 }, { 184,4584 }, { 185,4584 }, { 186,4584 }, { 187,4584 },
 { 188,4584 }, { 189,4584 }, { 190,4584 }, { 191,4584 }, { 192,2960 },
 { 193,2960 }, { 194,3217 }, { 195,3217 }, { 196,3217 }, { 197,3217 },
 { 198,3217 }, { 199,3217 }, { 200,3217 }, { 201,3217 }, { 202,3217 },
 { 203,3217 }, { 204,3217 }, { 205,3217 }, { 206,3217 }, { 207,3217 },
 { 208,3217 }, { 209,3217 }, { 210,3217 }, { 211,3217 }, { 212,3217 },
 { 213,3217 }, { 214,3217 }, { 215,3217 }, { 216,3217 }, { 217,3217 },
 { 218,3217 }, { 219,3217 }, { 220,3217 }, { 221,3217 }, { 222,3217 },
 { 223,3217 }, { 224,3474 }, { 225,3474 }, { 226,3474 }, { 227,3474 },

 { 228,3474 }, { 229,3474 }, { 230,3474 }, { 231,3474 }, { 232,3474 },
 { 233,3474 }, { 234,3474 }, { 235,3474 }, { 236,3474 }, { 237,3474 },
 { 238,3474 }, { 239,3474 }, { 240,3731 }, { 241,3731 }, { 242,3731 },
 { 243,3731 }, { 244,3731 }, { 245,2960 }, { 246,2960 }, { 247,2960 },
 { 248,2960 }, { 249,2960 }, { 250,2960 }, { 251,2960 }, { 252,2960 },
 { 253,2960 }, { 254,2960 }, { 255,2960 }, {   0,  42 }, {   0,8333 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  42 }, {   0,8323 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,  41 }, {   0,8299 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },
 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {  48, -10 }, {  49, -10 }, {  50, -10 },
 {  51, -10 }, {  52, -10 }, {  53, -10 }, {  54, -10 }, {  55, -10 },
 {  56, -10 }, {  57, -10 }, {   0,   0 }, {  69,  71 }, {   0,   0 },

 {   0,8262 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  69,  61 }, {  46, -24 },
 {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },
 {  57,   0 }, {   0,  40 }, {   0,8240 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 101,  71 }, {   0,   0 }, {  69,  37 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 101,  61 }, {   0,   0 }, {   0,   0 }, {  43,4513 }, {   0,   0 },
 {  45,4513 }, {   0,   0 }, {   0,   0 }, {  48,4523 }, {  49,4523 },

 {  50,4523 }, {  51,4523 }, {  52,4523 }, {  53,4523 }, {  54,4523 },
 {  55,4523 }, {  56,4523 }, {  57,4523 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 101,  37 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },

 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },
 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {   0,  40 }, {   0,8148 },
 {   0,   0 }, {   0,   0 }, {  95,   0 }, {   0,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48, -92 }, {  49, -92 }, {  50, -92 },
 {  51, -92 }, {  52, -92 }, {  53, -92 }, {  54, -92 }, {  55, -92 },
 {  56, -92 }, {  57, -92 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,   0 },
 {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 },
 {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 },
 {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 },
 {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 },

 {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 },
 {   0,  40 }, {   0,8056 }, {   0,   0 }, {   0,   0 }, {  95,   0 },
 {   0,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 },
 { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 },
 { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 },
 { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 },
 { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 },
 { 121,   0 }, { 122,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-184 },
 {  49,-184 }, {  50,-184 }, {  51,-184 }, {  52,-184 }, {  53,-184 },
 {  54,-184 }, {  55,-184 }, {  56,-184 }, {  57,-184 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65, -92 }, {  66, -92 }, {  67, -92 }, {  68, -92 },
 {  69, -92 }, {  70, -92 }, {  71, -92 }, {  72, -92 }, {  73, -92 },
 {  74, -92 }, {  75, -92 }, {  76, -92 }, {  77, -92 }, {  78, -92 },
 {  79, -92 }, {  80, -92 }, {  81, -92 }, {  82, -92 }, {  83, -92 },
 {  84, -92 }, {  85, -92 }, {  86, -92 }, {  87, -92 }, {  88, -92 },
 {  89, -92 }, {  90, -92 }, {   0,  40 }, {   0,7964 }, {   0,   0 },

 {   0,   0 }, {  95, -92 }, {   0,   0 }, {  97, -92 }, {  98, -92 },
 {  99, -92 }, { 100, -92 }, { 101, -92 }, { 102, -92 }, { 103, -92 },
 { 104, -92 }, { 105, -92 }, { 106, -92 }, { 107, -92 }, { 108, -92 },
 { 109, -92 }, { 110, -92 }, { 111,4327 }, { 112, -92 }, { 113, -92 },
 { 114, -92 }, { 115, -92 }, { 116, -92 }, { 117, -92 }, { 118, -92 },
 { 119, -92 }, { 120, -92 }, { 121, -92 }, { 122, -92 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-276 }, {  49,-276 }, {  50,-276 }, {  51,-276 },

 {  52,-276 }, {  53,-276 }, {  54,-276 }, {  55,-276 }, {  56,-276 },
 {  57,-276 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-184 }, {  66,-184 },
 {  67,-184 }, {  68,-184 }, {  69,-184 }, {  70,-184 }, {  71,-184 },
 {  72,-184 }, {  73,-184 }, {  74,-184 }, {  75,-184 }, {  76,-184 },
 {  77,-184 }, {  78,-184 }, {  79,-184 }, {  80,-184 }, {  81,-184 },
 {  82,-184 }, {  83,-184 }, {  84,-184 }, {  85,-184 }, {  86,-184 },
 {  87,-184 }, {  88,-184 }, {  89,-184 }, {  90,-184 }, {   0,  40 },
 {   0,7872 }, {   0,   0 }, {   0,   0 }, {  95,-184 }, {   0,   0 },
 {  97,-184 }, {  98,-184 }, {  99,4327 }, { 100,-184 }, { 101,-184 },

 { 102,-184 }, { 103,-184 }, { 104,-184 }, { 105,-184 }, { 106,-184 },
 { 107,-184 }, { 108,-184 }, { 109,-184 }, { 110,-184 }, { 111,-184 },
 { 112,-184 }, { 113,-184 }, { 114,-184 }, { 115,-184 }, { 116,-184 },
 { 117,-184 }, { 118,-184 }, { 119,-184 }, { 120,-184 }, { 121,-184 },
 { 122,-184 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-368 }, {  49,-368 },
 {  50,-368 }, {  51,-368 }, {  52,-368 }, {  53,-368 }, {  54,-368 },
 {  55,-368 }, {  56,-368 }, {  57,-368 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-276 }, {  66,-276 }, {  67,-276 }, {  68,-276 }, {  69,-276 },
 {  70,-276 }, {  71,-276 }, {  72,-276 }, {  73,-276 }, {  74,-276 },
 {  75,-276 }, {  76,-276 }, {  77,-276 }, {  78,-276 }, {  79,-276 },
 {  80,-276 }, {  81,-276 }, {  82,-276 }, {  83,-276 }, {  84,-276 },
 {  85,-276 }, {  86,-276 }, {  87,-276 }, {  88,-276 }, {  89,-276 },
 {  90,-276 }, {   0,  40 }, {   0,7780 }, {   0,   0 }, {   0,   0 },
 {  95,-276 }, {   0,   0 }, {  97,-276 }, {  98,-276 }, {  99,-276 },
 { 100,-276 }, { 101,-276 }, { 102,-276 }, { 103,-276 }, { 104,-276 },
 { 105,-276 }, { 106,-276 }, { 107,-276 }, { 108,-276 }, { 109,-276 },

 { 110,-276 }, { 111,-276 }, { 112,-276 }, { 113,-276 }, { 114,-276 },
 { 115,-276 }, { 116,-276 }, { 117,4327 }, { 118,-276 }, { 119,-276 },
 { 120,-276 }, { 121,-276 }, { 122,-276 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-460 }, {  49,-460 }, {  50,-460 }, {  51,-460 }, {  52,-460 },
 {  53,-460 }, {  54,-460 }, {  55,-460 }, {  56,-460 }, {  57,-460 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-368 }, {  66,-368 }, {  67,-368 },

 {  68,-368 }, {  69,-368 }, {  70,-368 }, {  71,-368 }, {  72,-368 },
 {  73,-368 }, {  74,-368 }, {  75,-368 }, {  76,-368 }, {  77,-368 },
 {  78,-368 }, {  79,-368 }, {  80,-368 }, {  81,-368 }, {  82,-368 },
 {  83,-368 }, {  84,-368 }, {  85,-368 }, {  86,-368 }, {  87,-368 },
 {  88,-368 }, {  89,-368 }, {  90,-368 }, {   0,  40 }, {   0,7688 },
 {   0,   0 }, {   0,   0 }, {  95,-368 }, {   0,   0 }, {  97,-368 },
 {  98,-368 }, {  99,-368 }, { 100,-368 }, { 101,-368 }, { 102,-368 },
 { 103,-368 }, { 104,-368 }, { 105,-368 }, { 106,-368 }, { 107,-368 },
 { 108,-368 }, { 109,-368 }, { 110,-368 }, { 111,-368 }, { 112,-368 },
 { 113,-368 }, { 114,-368 }, { 115,-368 }, { 116,4327 }, { 117,-368 },

 { 118,-368 }, { 119,-368 }, { 120,-368 }, { 121,-368 }, { 122,-368 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-552 }, {  49,-552 }, {  50,-552 },
 {  51,-552 }, {  52,-552 }, {  53,-552 }, {  54,-552 }, {  55,-552 },
 {  56,-552 }, {  57,-552 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-460 },
 {  66,-460 }, {  67,-460 }, {  68,-460 }, {  69,-460 }, {  70,-460 },
 {  71,-460 }, {  72,-460 }, {  73,-460 }, {  74,-460 }, {  75,-460 },

 {  76,-460 }, {  77,-460 }, {  78,-460 }, {  79,-460 }, {  80,-460 },
 {  81,-460 }, {  82,-460 }, {  83,-460 }, {  84,-460 }, {  85,-460 },
 {  86,-460 }, {  87,-460 }, {  88,-460 }, {  89,-460 }, {  90,-460 },
 {   0,  12 }, {   0,7596 }, {   0,   0 }, {   0,   0 }, {  95,-460 },
 {   0,   0 }, {  97,-460 }, {  98,-460 }, {  99,-460 }, { 100,-460 },
 { 101,-460 }, { 102,-460 }, { 103,-460 }, { 104,-460 }, { 105,-460 },
 { 106,-460 }, { 107,-460 }, { 108,-460 }, { 109,-460 }, { 110,-460 },
 { 111,4327 }, { 112,-460 }, { 113,-460 }, { 114,-460 }, { 115,-460 },
 { 116,-460 }, { 117,-460 }, { 118,-460 }, { 119,-460 }, { 120,-460 },
 { 121,-460 }, { 122,-460 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-644 },
 {  49,-644 }, {  50,-644 }, {  51,-644 }, {  52,-644 }, {  53,-644 },
 {  54,-644 }, {  55,-644 }, {  56,-644 }, {  57,-644 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-552 }, {  66,-552 }, {  67,-552 }, {  68,-552 },
 {  69,-552 }, {  70,-552 }, {  71,-552 }, {  72,-552 }, {  73,-552 },
 {  74,-552 }, {  75,-552 }, {  76,-552 }, {  77,-552 }, {  78,-552 },
 {  79,-552 }, {  80,-552 }, {  81,-552 }, {  82,-552 }, {  83,-552 },

 {  84,-552 }, {  85,-552 }, {  86,-552 }, {  87,-552 }, {  88,-552 },
 {  89,-552 }, {  90,-552 }, {   0,  40 }, {   0,7504 }, {   0,   0 },
 {   0,   0 }, {  95,-552 }, {   0,   0 }, {  97,-552 }, {  98,-552 },
 {  99,-552 }, { 100,-552 }, { 101,-552 }, { 102,-552 }, { 103,-552 },
 { 104,-552 }, { 105,-552 }, { 106,-552 }, { 107,-552 }, { 108,-552 },
 { 109,-552 }, { 110,-552 }, { 111,-552 }, { 112,-552 }, { 113,-552 },
 { 114,-552 }, { 115,-552 }, { 116,-552 }, { 117,-552 }, { 118,-552 },
 { 119,-552 }, { 120,-552 }, { 121,-552 }, { 122,-552 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-736 }, {  49,-736 }, {  50,-736 }, {  51,-736 },
 {  52,-736 }, {  53,-736 }, {  54,-736 }, {  55,-736 }, {  56,-736 },
 {  57,-736 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-644 }, {  66,-644 },
 {  67,-644 }, {  68,-644 }, {  69,-644 }, {  70,-644 }, {  71,-644 },
 {  72,-644 }, {  73,-644 }, {  74,-644 }, {  75,-644 }, {  76,-644 },
 {  77,-644 }, {  78,-644 }, {  79,-644 }, {  80,-644 }, {  81,-644 },
 {  82,-644 }, {  83,-644 }, {  84,-644 }, {  85,-644 }, {  86,-644 },
 {  87,-644 }, {  88,-644 }, {  89,-644 }, {  90,-644 }, {   0,  40 },

 {   0,7412 }, {   0,   0 }, {   0,   0 }, {  95,-644 }, {   0,   0 },
 {  97,-644 }, {  98,-644 }, {  99,-644 }, { 100,-644 }, { 101,-644 },
 { 102,-644 }, { 103,-644 }, { 104,-644 }, { 105,-644 }, { 106,-644 },
 { 107,-644 }, { 108,-644 }, { 109,-644 }, { 110,-644 }, { 111,-644 },
 { 112,-644 }, { 113,-644 }, { 114,-644 }, { 115,-644 }, { 116,4235 },
 { 117,-644 }, { 118,-644 }, { 119,-644 }, { 120,-644 }, { 121,-644 },
 { 122,-644 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-828 }, {  49,-828 },

 {  50,-828 }, {  51,-828 }, {  52,-828 }, {  53,-828 }, {  54,-828 },
 {  55,-828 }, {  56,-828 }, {  57,-828 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-736 }, {  66,-736 }, {  67,-736 }, {  68,-736 }, {  69,-736 },
 {  70,-736 }, {  71,-736 }, {  72,-736 }, {  73,-736 }, {  74,-736 },
 {  75,-736 }, {  76,-736 }, {  77,-736 }, {  78,-736 }, {  79,-736 },
 {  80,-736 }, {  81,-736 }, {  82,-736 }, {  83,-736 }, {  84,-736 },
 {  85,-736 }, {  86,-736 }, {  87,-736 }, {  88,-736 }, {  89,-736 },
 {  90,-736 }, {   0,  40 }, {   0,7320 }, {   0,   0 }, {   0,   0 },
 {  95,-736 }, {   0,   0 }, {  97,-736 }, {  98,-736 }, {  99,-736 },

 { 100,-736 }, { 101,-736 }, { 102,-736 }, { 103,-736 }, { 104,-736 },
 { 105,-736 }, { 106,-736 }, { 107,-736 }, { 108,-736 }, { 109,-736 },
 { 110,-736 }, { 111,-736 }, { 112,-736 }, { 113,-736 }, { 114,-736 },
 { 115,-736 }, { 116,4235 }, { 117,-736 }, { 118,-736 }, { 119,-736 },
 { 120,-736 }, { 121,-736 }, { 122,-736 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-920 }, {  49,-920 }, {  50,-920 }, {  51,-920 }, {  52,-920 },
 {  53,-920 }, {  54,-920 }, {  55,-920 }, {  56,-920 }, {  57,-920 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-828 }, {  66,-828 }, {  67,-828 },
 {  68,-828 }, {  69,-828 }, {  70,-828 }, {  71,-828 }, {  72,-828 },
 {  73,-828 }, {  74,-828 }, {  75,-828 }, {  76,-828 }, {  77,-828 },
 {  78,-828 }, {  79,-828 }, {  80,-828 }, {  81,-828 }, {  82,-828 },
 {  83,-828 }, {  84,-828 }, {  85,-828 }, {  86,-828 }, {  87,-828 },
 {  88,-828 }, {  89,-828 }, {  90,-828 }, {   0,  40 }, {   0,7228 },
 {   0,   0 }, {   0,   0 }, {  95,-828 }, {   0,   0 }, {  97,-828 },
 {  98,-828 }, {  99,-828 }, { 100,-828 }, { 101,-828 }, { 102,-828 },
 { 103,-828 }, { 104,-828 }, { 105,-828 }, { 106,-828 }, { 107,-828 },

 { 108,-828 }, { 109,-828 }, { 110,-828 }, { 111,-828 }, { 112,-828 },
 { 113,-828 }, { 114,-828 }, { 115,-828 }, { 116,4235 }, { 117,-828 },
 { 118,-828 }, { 119,-828 }, { 120,-828 }, { 121,-828 }, { 122,-828 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-1012 }, {  49,-1012 }, {  50,-1012 },
 {  51,-1012 }, {  52,-1012 }, {  53,-1012 }, {  54,-1012 }, {  55,-1012 },
 {  56,-1012 }, {  57,-1012 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-920 },

 {  66,-920 }, {  67,-920 }, {  68,-920 }, {  69,-920 }, {  70,-920 },
 {  71,-920 }, {  72,-920 }, {  73,-920 }, {  74,-920 }, {  75,-920 },
 {  76,-920 }, {  77,-920 }, {  78,-920 }, {  79,-920 }, {  80,-920 },
 {  81,-920 }, {  82,-920 }, {  83,-920 }, {  84,-920 }, {  85,-920 },
 {  86,-920 }, {  87,-920 }, {  88,-920 }, {  89,-920 }, {  90,-920 },
 {   0,  40 }, {   0,7136 }, {   0,   0 }, {   0,   0 }, {  95,-920 },
 {   0,   0 }, {  97,-920 }, {  98,-920 }, {  99,-920 }, { 100,-920 },
 { 101,-920 }, { 102,-920 }, { 103,-920 }, { 104,-920 }, { 105,-920 },
 { 106,-920 }, { 107,-920 }, { 108,-920 }, { 109,-920 }, { 110,-920 },
 { 111,-920 }, { 112,-920 }, { 113,-920 }, { 114,4235 }, { 115,-920 },

 { 116,-920 }, { 117,-920 }, { 118,-920 }, { 119,-920 }, { 120,-920 },
 { 121,-920 }, { 122,-920 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-1104 },
 {  49,-1104 }, {  50,-1104 }, {  51,-1104 }, {  52,-1104 }, {  53,-1104 },
 {  54,-1104 }, {  55,-1104 }, {  56,-1104 }, {  57,-1104 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-1012 }, {  66,-1012 }, {  67,-1012 }, {  68,-1012 },
 {  69,-1012 }, {  70,-1012 }, {  71,-1012 }, {  72,-1012 }, {  73,-1012 },

 {  74,-1012 }, {  75,-1012 }, {  76,-1012 }, {  77,-1012 }, {  78,-1012 },
 {  79,-1012 }, {  80,-1012 }, {  81,-1012 }, {  82,-1012 }, {  83,-1012 },
 {  84,-1012 }, {  85,-1012 }, {  86,-1012 }, {  87,-1012 }, {  88,-1012 },
 {  89,-1012 }, {  90,-1012 }, {   0,  40 }, {   0,7044 }, {   0,   0 },
 {   0,   0 }, {  95,-1012 }, {   0,   0 }, {  97,-1012 }, {  98,-1012 },
 {  99,-1012 }, { 100,-1012 }, { 101,-1012 }, { 102,-1012 }, { 103,-1012 },
 { 104,-1012 }, { 105,-1012 }, { 106,-1012 }, { 107,-1012 }, { 108,-1012 },
 { 109,-1012 }, { 110,-1012 }, { 111,-1012 }, { 112,4235 }, { 113,-1012 },
 { 114,-1012 }, { 115,-1012 }, { 116,-1012 }, { 117,-1012 }, { 118,-1012 },
 { 119,-1012 }, { 120,-1012 }, { 121,-1012 }, { 122,-1012 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-1196 }, {  49,-1196 }, {  50,-1196 }, {  51,-1196 },
 {  52,-1196 }, {  53,-1196 }, {  54,-1196 }, {  55,-1196 }, {  56,-1196 },
 {  57,-1196 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-1104 }, {  66,-1104 },
 {  67,-1104 }, {  68,-1104 }, {  69,-1104 }, {  70,-1104 }, {  71,-1104 },
 {  72,-1104 }, {  73,-1104 }, {  74,-1104 }, {  75,-1104 }, {  76,-1104 },
 {  77,-1104 }, {  78,-1104 }, {  79,-1104 }, {  80,-1104 }, {  81,-1104 },

 {  82,-1104 }, {  83,-1104 }, {  84,-1104 }, {  85,-1104 }, {  86,-1104 },
 {  87,-1104 }, {  88,-1104 }, {  89,-1104 }, {  90,-1104 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,-1104 }, {   0,   0 },
 {  97,-1104 }, {  98,-1104 }, {  99,-1104 }, { 100,-1104 }, { 101,-1104 },
 { 102,-1104 }, { 103,-1104 }, { 104,-1104 }, { 105,-1104 }, { 106,-1104 },
 { 107,-1104 }, { 108,-1104 }, { 109,-1104 }, { 110,-1104 }, { 111,-1104 },
 { 112,-1104 }, { 113,-1104 }, { 114,4235 }, { 115,-1104 }, { 116,-1104 },
 { 117,-1104 }, { 118,-1104 }, { 119,-1104 }, { 120,-1104 }, { 121,-1104 },
 { 122,-1104 }, {   0,   3 }, {   0,6920 }, {   1,   0 }, {   2,   0 },
 {   3,   0 }, {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 },

 {   8,   0 }, {   9,   0 }, {  10,   0 }, {  11,   0 }, {  12,   0 },
 {  13,   0 }, {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 },
 {  18,   0 }, {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 },
 {  23,   0 }, {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 },
 {  28,   0 }, {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32,   0 },
 {  33,   0 }, {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 }, {   0,   0 },
 {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 }, {  47,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },

 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },
 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },
 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 },
 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },

 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },
 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },
 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },
 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },
 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },
 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },

 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },
 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },
 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },
 { 193,   0 }, { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 },
 { 198,   0 }, { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 },
 { 203,   0 }, { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 },

 { 208,   0 }, { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 },
 { 213,   0 }, { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 },
 { 218,   0 }, { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 },
 { 223,   0 }, { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 },
 { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 },
 { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 },
 { 238,   0 }, { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 },
 { 243,   0 }, { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 },
 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },
 { 253,   0 }, { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,   3 },

 {   0,6662 }, {   1,-258 }, {   2,-258 }, {   3,-258 }, {   4,-258 },
 {   5,-258 }, {   6,-258 }, {   7,-258 }, {   8,-258 }, {   9,-258 },
 {  10,-258 }, {  11,-258 }, {  12,-258 }, {  13,-258 }, {  14,-258 },
 {  15,-258 }, {  16,-258 }, {  17,-258 }, {  18,-258 }, {  19,-258 },
 {  20,-258 }, {  21,-258 }, {  22,-258 }, {  23,-258 }, {  24,-258 },
 {  25,-258 }, {  26,-258 }, {  27,-258 }, {  28,-258 }, {  29,-258 },
 {  30,-258 }, {  31,-258 }, {  32,-258 }, {  33,-258 }, {  34,-258 },
 {  35,-258 }, {  36,-258 }, {  37,-258 }, {  38,-258 }, {  39,-258 },
 {  40,-258 }, {  41,-258 }, {   0,   0 }, {  43,-258 }, {  44,-258 },
 {  45,-258 }, {  46,-258 }, {  47,-258 }, {  48,-258 }, {  49,-258 },

 {  50,-258 }, {  51,-258 }, {  52,-258 }, {  53,-258 }, {  54,-258 },
 {  55,-258 }, {  56,-258 }, {  57,-258 }, {  58,-258 }, {  59,-258 },
 {  60,-258 }, {  61,-258 }, {  62,-258 }, {  63,-258 }, {  64,-258 },
 {  65,-258 }, {  66,-258 }, {  67,-258 }, {  68,-258 }, {  69,-258 },
 {  70,-258 }, {  71,-258 }, {  72,-258 }, {  73,-258 }, {  74,-258 },
 {  75,-258 }, {  76,-258 }, {  77,-258 }, {  78,-258 }, {  79,-258 },
 {  80,-258 }, {  81,-258 }, {  82,-258 }, {  83,-258 }, {  84,-258 },
 {  85,-258 }, {  86,-258 }, {  87,-258 }, {  88,-258 }, {  89,-258 },
 {  90,-258 }, {  91,-258 }, {  92,-258 }, {  93,-258 }, {  94,-258 },
 {  95,-258 }, {  96,-258 }, {  97,-258 }, {  98,-258 }, {  99,-258 },

 { 100,-258 }, { 101,-258 }, { 102,-258 }, { 103,-258 }, { 104,-258 },
 { 105,-258 }, { 106,-258 }, { 107,-258 }, { 108,-258 }, { 109,-258 },
 { 110,-258 }, { 111,-258 }, { 112,-258 }, { 113,-258 }, { 114,-258 },
 { 115,-258 }, { 116,-258 }, { 117,-258 }, { 118,-258 }, { 119,-258 },
 { 120,-258 }, { 121,-258 }, { 122,-258 }, { 123,-258 }, { 124,-258 },
 { 125,-258 }, { 126,-258 }, { 127,-258 }, { 128,-258 }, { 129,-258 },
 { 130,-258 }, { 131,-258 }, { 132,-258 }, { 133,-258 }, { 134,-258 },
 { 135,-258 }, { 136,-258 }, { 137,-258 }, { 138,-258 }, { 139,-258 },
 { 140,-258 }, { 141,-258 }, { 142,-258 }, { 143,-258 }, { 144,-258 },
 { 145,-258 }, { 146,-258 }, { 147,-258 }, { 148,-258 }, { 149,-258 },

 { 150,-258 }, { 151,-258 }, { 152,-258 }, { 153,-258 }, { 154,-258 },
 { 155,-258 }, { 156,-258 }, { 157,-258 }, { 158,-258 }, { 159,-258 },
 { 160,-258 }, { 161,-258 }, { 162,-258 }, { 163,-258 }, { 164,-258 },
 { 165,-258 }, { 166,-258 }, { 167,-258 }, { 168,-258 }, { 169,-258 },
 { 170,-258 }, { 171,-258 }, { 172,-258 }, { 173,-258 }, { 174,-258 },
 { 175,-258 }, { 176,-258 }, { 177,-258 }, { 178,-258 }, { 179,-258 },
 { 180,-258 }, { 181,-258 }, { 182,-258 }, { 183,-258 }, { 184,-258 },
 { 185,-258 }, { 186,-258 }, { 187,-258 }, { 188,-258 }, { 189,-258 },
 { 190,-258 }, { 191,-258 }, { 192,-258 }, { 193,-258 }, { 194,-258 },
 { 195,-258 }, { 196,-258 }, { 197,-258 }, { 198,-258 }, { 199,-258 },

 { 200,-258 }, { 201,-258 }, { 202,-258 }, { 203,-258 }, { 204,-258 },
 { 205,-258 }, { 206,-258 }, { 207,-258 }, { 208,-258 }, { 209,-258 },
 { 210,-258 }, { 211,-258 }, { 212,-258 }, { 213,-258 }, { 214,-258 },
 { 215,-258 }, { 216,-258 }, { 217,-258 }, { 218,-258 }, { 219,-258 },
 { 220,-258 }, { 221,-258 }, { 222,-258 }, { 223,-258 }, { 224,-258 },
 { 225,-258 }, { 226,-258 }, { 227,-258 }, { 228,-258 }, { 229,-258 },
 { 230,-258 }, { 231,-258 }, { 232,-258 }, { 233,-258 }, { 234,-258 },
 { 235,-258 }, { 236,-258 }, { 237,-258 }, { 238,-258 }, { 239,-258 },
 { 240,-258 }, { 241,-258 }, { 242,-258 }, { 243,-258 }, { 244,-258 },
 { 245,-258 }, { 246,-258 }, { 247,-258 }, { 248,-258 }, { 249,-258 },

 { 250,-258 }, { 251,-258 }, { 252,-258 }, { 253,-258 }, { 254,-258 },
 { 255,-258 }, { 256,-258 }, {   0,   3 }, {   0,6404 }, {   1,-516 },
 {   2,-516 }, {   3,-516 }, {   4,-516 }, {   5,-516 }, {   6,-516 },
 {   7,-516 }, {   8,-516 }, {   9,-516 }, {  10,-516 }, {  11,-516 },
 {  12,-516 }, {  13,-516 }, {  14,-516 }, {  15,-516 }, {  16,-516 },
 {  17,-516 }, {  18,-516 }, {  19,-516 }, {  20,-516 }, {  21,-516 },
 {  22,-516 }, {  23,-516 }, {  24,-516 }, {  25,-516 }, {  26,-516 },
 {  27,-516 }, {  28,-516 }, {  29,-516 }, {  30,-516 }, {  31,-516 },
 {  32,-516 }, {  33,-516 }, {  34,-516 }, {  35,-516 }, {  36,-516 },
 {  37,-516 }, {  38,-516 }, {  39,-516 }, {  40,-516 }, {  41,-516 },

 {   0,   0 }, {  43,-516 }, {  44,-516 }, {  45,-516 }, {  46,-516 },
 {  47,-516 }, {  48,-516 }, {  49,-516 }, {  50,-516 }, {  51,-516 },
 {  52,-516 }, {  53,-516 }, {  54,-516 }, {  55,-516 }, {  56,-516 },
 {  57,-516 }, {  58,-516 }, {  59,-516 }, {  60,-516 }, {  61,-516 },
 {  62,-516 }, {  63,-516 }, {  64,-516 }, {  65,-516 }, {  66,-516 },
 {  67,-516 }, {  68,-516 }, {  69,-516 }, {  70,-516 }, {  71,-516 },
 {  72,-516 }, {  73,-516 }, {  74,-516 }, {  75,-516 }, {  76,-516 },
 {  77,-516 }, {  78,-516 }, {  79,-516 }, {  80,-516 }, {  81,-516 },
 {  82,-516 }, {  83,-516 }, {  84,-516 }, {  85,-516 }, {  86,-516 },
 {  87,-516 }, {  88,-516 }, {  89,-516 }, {  90,-516 }, {  91,-516 },

 {  92,-516 }, {  93,-516 }, {  94,-516 }, {  95,-516 }, {  96,-516 },
 {  97,-516 }, {  98,-516 }, {  99,-516 }, { 100,-516 }, { 101,-516 },
 { 102,-516 }, { 103,-516 }, { 104,-516 }, { 105,-516 }, { 106,-516 },
 { 107,-516 }, { 108,-516 }, { 109,-516 }, { 110,-516 }, { 111,-516 },
 { 112,-516 }, { 113,-516 }, { 114,-516 }, { 115,-516 }, { 116,-516 },
 { 117,-516 }, { 118,-516 }, { 119,-516 }, { 120,-516 }, { 121,-516 },
 { 122,-516 }, { 123,-516 }, { 124,-516 }, { 125,-516 }, { 126,-516 },
 { 127,-516 }, { 128,-258 }, { 129,-258 }, { 130,-258 }, { 131,-258 },
 { 132,-258 }, { 133,-258 }, { 134,-258 }, { 135,-258 }, { 136,-258 },
 { 137,-258 }, { 138,-258 }, { 139,-258 }, { 140,-258 }, { 141,-258 },

 { 142,-258 }, { 143,-258 }, { 144,-258 }, { 145,-258 }, { 146,-258 },
 { 147,-258 }, { 148,-258 }, { 149,-258 }, { 150,-258 }, { 151,-258 },
 { 152,-258 }, { 153,-258 }, { 154,-258 }, { 155,-258 }, { 156,-258 },
 { 157,-258 }, { 158,-258 }, { 159,-258 }, { 160,-258 }, { 161,-258 },
 { 162,-258 }, { 163,-258 }, { 164,-258 }, { 165,-258 }, { 166,-258 },
 { 167,-258 }, { 168,-258 }, { 169,-258 }, { 170,-258 }, { 171,-258 },
 { 172,-258 }, { 173,-258 }, { 174,-258 }, { 175,-258 }, { 176,-258 },
 { 177,-258 }, { 178,-258 }, { 179,-258 }, { 180,-258 }, { 181,-258 },
 { 182,-258 }, { 183,-258 }, { 184,-258 }, { 185,-258 }, { 186,-258 },
 { 187,-258 }, { 188,-258 }, { 189,-258 }, { 190,-258 }, { 191,-258 },

 { 192,-516 }, { 193,-516 }, { 194,-516 }, { 195,-516 }, { 196,-516 },
 { 197,-516 }, { 198,-516 }, { 199,-516 }, { 200,-516 }, { 201,-516 },
 { 202,-516 }, { 203,-516 }, { 204,-516 }, { 205,-516 }, { 206,-516 },
 { 207,-516 }, { 208,-516 }, { 209,-516 }, { 210,-516 }, { 211,-516 },
 { 212,-516 }, { 213,-516 }, { 214,-516 }, { 215,-516 }, { 216,-516 },
 { 217,-516 }, { 218,-516 }, { 219,-516 }, { 220,-516 }, { 221,-516 },
 { 222,-516 }, { 223,-516 }, { 224,-516 }, { 225,-516 }, { 226,-516 },
 { 227,-516 }, { 228,-516 }, { 229,-516 }, { 230,-516 }, { 231,-516 },
 { 232,-516 }, { 233,-516 }, { 234,-516 }, { 235,-516 }, { 236,-516 },
 { 237,-516 }, { 238,-516 }, { 239,-516 }, { 240,-516 }, { 241,-516 },

 { 242,-516 }, { 243,-516 }, { 244,-516 }, { 245,-516 }, { 246,-516 },
 { 247,-516 }, { 248,-516 }, { 249,-516 }, { 250,-516 }, { 251,-516 },
 { 252,-516 }, { 253,-516 }, { 254,-516 }, { 255,-516 }, { 256,-516 },
 {   0,   3 }, {   0,6146 }, {   1,-774 }, {   2,-774 }, {   3,-774 },
 {   4,-774 }, {   5,-774 }, {   6,-774 }, {   7,-774 }, {   8,-774 },
 {   9,-774 }, {  10,-774 }, {  11,-774 }, {  12,-774 }, {  13,-774 },
 {  14,-774 }, {  15,-774 }, {  16,-774 }, {  17,-774 }, {  18,-774 },
 {  19,-774 }, {  20,-774 }, {  21,-774 }, {  22,-774 }, {  23,-774 },
 {  24,-774 }, {  25,-774 }, {  26,-774 }, {  27,-774 }, {  28,-774 },
 {  29,-774 }, {  30,-774 }, {  31,-774 }, {  32,-774 }, {  33,-774 },

 {  34,-774 }, {  35,-774 }, {  36,-774 }, {  37,-774 }, {  38,-774 },
 {  39,-774 }, {  40,-774 }, {  41,-774 }, {   0,   0 }, {  43,-774 },
 {  44,-774 }, {  45,-774 }, {  46,-774 }, {  47,-774 }, {  48,-774 },
 {  49,-774 }, {  50,-774 }, {  51,-774 }, {  52,-774 }, {  53,-774 },
 {  54,-774 }, {  55,-774 }, {  56,-774 }, {  57,-774 }, {  58,-774 },
 {  59,-774 }, {  60,-774 }, {  61,-774 }, {  62,-774 }, {  63,-774 },
 {  64,-774 }, {  65,-774 }, {  66,-774 }, {  67,-774 }, {  68,-774 },
 {  69,-774 }, {  70,-774 }, {  71,-774 }, {  72,-774 }, {  73,-774 },
 {  74,-774 }, {  75,-774 }, {  76,-774 }, {  77,-774 }, {  78,-774 },
 {  79,-774 }, {  80,-774 }, {  81,-774 }, {  82,-774 }, {  83,-774 },

 {  84,-774 }, {  85,-774 }, {  86,-774 }, {  87,-774 }, {  88,-774 },
 {  89,-774 }, {  90,-774 }, {  91,-774 }, {  92,-774 }, {  93,-774 },
 {  94,-774 }, {  95,-774 }, {  96,-774 }, {  97,-774 }, {  98,-774 },
 {  99,-774 }, { 100,-774 }, { 101,-774 }, { 102,-774 }, { 103,-774 },
 { 104,-774 }, { 105,-774 }, { 106,-774 }, { 107,-774 }, { 108,-774 },
 { 109,-774 }, { 110,-774 }, { 111,-774 }, { 112,-774 }, { 113,-774 },
 { 114,-774 }, { 115,-774 }, { 116,-774 }, { 117,-774 }, { 118,-774 },
 { 119,-774 }, { 120,-774 }, { 121,-774 }, { 122,-774 }, { 123,-774 },
 { 124,-774 }, { 125,-774 }, { 126,-774 }, { 127,-774 }, { 128,3461 },
 { 129,3461 }, { 130,3461 }, { 131,3461 }, { 132,3461 }, { 133,3461 },

 { 134,3461 }, { 135,3461 }, { 136,3461 }, { 137,3461 }, { 138,3461 },
 { 139,3461 }, { 140,3461 }, { 141,3461 }, { 142,3461 }, { 143,3461 },
 { 144,3461 }, { 145,3461 }, { 146,3461 }, { 147,3461 }, { 148,3461 },
 { 149,3461 }, { 150,3461 }, { 151,3461 }, { 152,3461 }, { 153,3461 },
 { 154,3461 }, { 155,3461 }, { 156,3461 }, { 157,3461 }, { 158,3461 },
 { 159,3461 }, { 160,3461 }, { 161,3461 }, { 162,3461 }, { 163,3461 },
 { 164,3461 }, { 165,3461 }, { 166,3461 }, { 167,3461 }, { 168,3461 },
 { 169,3461 }, { 170,3461 }, { 171,3461 }, { 172,3461 }, { 173,3461 },
 { 174,3461 }, { 175,3461 }, { 176,3461 }, { 177,3461 }, { 178,3461 },
 { 179,3461 }, { 180,3461 }, { 181,3461 }, { 182,3461 }, { 183,3461 },

 { 184,3461 }, { 185,3461 }, { 186,3461 }, { 187,3461 }, { 188,3461 },
 { 189,3461 }, { 190,3461 }, { 191,3461 }, { 192,-774 }, { 193,-774 },
 { 194,-774 }, { 195,-774 }, { 196,-774 }, { 197,-774 }, { 198,-774 },
 { 199,-774 }, { 200,-774 }, { 201,-774 }, { 202,-774 }, { 203,-774 },
 { 204,-774 }, { 205,-774 }, { 206,-774 }, { 207,-774 }, { 208,-774 },
 { 209,-774 }, { 210,-774 }, { 211,-774 }, { 212,-774 }, { 213,-774 },
 { 214,-774 }, { 215,-774 }, { 216,-774 }, { 217,-774 }, { 218,-774 },
 { 219,-774 }, { 220,-774 }, { 221,-774 }, { 222,-774 }, { 223,-774 },
 { 224,-774 }, { 225,-774 }, { 226,-774 }, { 227,-774 }, { 228,-774 },
 { 229,-774 }, { 230,-774 }, { 231,-774 }, { 232,-774 }, { 233,-774 },

 { 234,-774 }, { 235,-774 }, { 236,-774 }, { 237,-774 }, { 238,-774 },
 { 239,-774 }, { 240,-774 }, { 241,-774 }, { 242,-774 }, { 243,-774 },
 { 244,-774 }, { 245,-774 }, { 246,-774 }, { 247,-774 }, { 248,-774 },
 { 249,-774 }, { 250,-774 }, { 251,-774 }, { 252,-774 }, { 253,-774 },
 { 254,-774 }, { 255,-774 }, { 256,-774 }, {   0,   0 }, {   0,5888 },
 {   1,   0 }, {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 },
 {   6,   0 }, {   7,   0 }, {   8,   0 }, {   9,   0 }, {  10,   0 },
 {  11,   0 }, {  12,   0 }, {  13,-6639 }, {  14,   0 }, {  15,   0 },
 {  16,   0 }, {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 },
 {  21,   0 }, {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 },

 {  26,   0 }, {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 },
 {  31,   0 }, {  32,   0 }, {  33,   0 }, {  34,   0 }, {  35,   0 },
 {  36,   0 }, {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 },
 {  41,   0 }, {  42,   0 }, {  43,   0 }, {  44,   0 }, {  45,   0 },
 {  46,   0 }, {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },
 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 },
 {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 },
 {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 },
 {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 },

 {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 },
 {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 },
 {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 },
 {  91,   0 }, {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 },
 {  96,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 },
 { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 },
 { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 },
 { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 },
 { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 },
 { 121,   0 }, { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 },

 { 126,   0 }, { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 },
 { 131,   0 }, { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 },
 { 136,   0 }, { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 },
 { 141,   0 }, { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 },
 { 146,   0 }, { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 },
 { 151,   0 }, { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 },
 { 156,   0 }, { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 },
 { 161,   0 }, { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 },
 { 166,   0 }, { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 },
 { 171,   0 }, { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 },

 { 176,   0 }, { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 },
 { 181,   0 }, { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 },
 { 186,   0 }, { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 },
 { 191,   0 }, { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 },
 { 196,   0 }, { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 },
 { 201,   0 }, { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 },
 { 206,   0 }, { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 },
 { 211,   0 }, { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 },
 { 216,   0 }, { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 },
 { 221,   0 }, { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 },

 { 226,   0 }, { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 },
 { 231,   0 }, { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 },
 { 236,   0 }, { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 },
 { 241,   0 }, { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 },
 { 246,   0 }, { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 },
 { 251,   0 }, { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 },
 { 256,   0 }, {   0,   8 }, {   0,5630 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  10,   0 }, {   0,   0 }, {   0,   0 },
 {  13,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,   0 },
 {  33,   0 }, {   0,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 },
 {  38,   0 }, {  39,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 },
 {  43,   0 }, {  44,   0 }, {  45,   0 }, {  46,   0 }, {  47,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },
 {  58,   0 }, {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 },
 {  63,   0 }, {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 },

 {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 },
 {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 },
 {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 },
 {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 },
 {  88,   0 }, {  89,   0 }, {  90,   0 }, {  91,   0 }, {   0,   0 },
 {  93,   0 }, {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 },
 {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 },
 { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 },
 { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 },
 { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 },

 { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 },
 { 123,   0 }, { 124,   0 }, { 125,   0 }, { 126,   0 }, {   0,   0 },
 { 128,   0 }, { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 },
 { 133,   0 }, { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 },
 { 138,   0 }, { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 },
 { 143,   0 }, { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 },
 { 148,   0 }, { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 },
 { 153,   0 }, { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 },
 { 158,   0 }, { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 },
 { 163,   0 }, { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 },

 { 168,   0 }, { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 },
 { 173,   0 }, { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 },
 { 178,   0 }, { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 },
 { 183,   0 }, { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 },
 { 188,   0 }, { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 },
 { 193,   0 }, { 194, 257 }, { 195, 257 }, { 196, 257 }, { 197, 257 },
 { 198, 257 }, { 199, 257 }, { 200, 257 }, { 201, 257 }, { 202, 257 },
 { 203, 257 }, { 204, 257 }, { 205, 257 }, { 206, 257 }, { 207, 257 },
 { 208, 257 }, { 209, 257 }, { 210, 257 }, { 211, 257 }, { 212, 257 },
 { 213, 257 }, { 214, 257 }, { 215, 257 }, { 216, 257 }, { 217, 257 },

 { 218, 257 }, { 219, 257 }, { 220, 257 }, { 221, 257 }, { 222, 257 },
 { 223, 257 }, { 224, 514 }, { 225, 514 }, { 226, 514 }, { 227, 514 },
 { 228, 514 }, { 229, 514 }, { 230, 514 }, { 231, 514 }, { 232, 514 },
 { 233, 514 }, { 234, 514 }, { 235, 514 }, { 236, 514 }, { 237, 514 },
 { 238, 514 }, { 239, 514 }, { 240, 771 }, { 241, 771 }, { 242, 771 },
 { 243, 771 }, { 244, 771 }, { 245,   0 }, { 246,   0 }, { 247,   0 },
 { 248,   0 }, { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 },
 { 253,   0 }, { 254,   0 }, { 255,   0 }, {   0,   8 }, {   0,5373 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,-257 },

 {   0,   0 }, {   0,   0 }, {  13,-257 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  32,-257 }, {  33,-257 }, {   0,   0 }, {  35,-257 },
 {  36,-257 }, {  37,-257 }, {  38,-257 }, {  39,-257 }, {  40,-257 },
 {  41,-257 }, {  42,-257 }, {  43,-257 }, {  44,-257 }, {  45,-257 },
 {  46,-257 }, {  47,-257 }, {  48,-257 }, {  49,-257 }, {  50,-257 },
 {  51,-257 }, {  52,-257 }, {  53,-257 }, {  54,-257 }, {  55,-257 },
 {  56,-257 }, {  57,-257 }, {  58,-257 }, {  59,-257 }, {  60,-257 },

 {  61,-257 }, {  62,-257 }, {  63,-257 }, {  64,-257 }, {  65,-257 },
 {  66,-257 }, {  67,-257 }, {  68,-257 }, {  69,-257 }, {  70,-257 },
 {  71,-257 }, {  72,-257 }, {  73,-257 }, {  74,-257 }, {  75,-257 },
 {  76,-257 }, {  77,-257 }, {  78,-257 }, {  79,-257 }, {  80,-257 },
 {  81,-257 }, {  82,-257 }, {  83,-257 }, {  84,-257 }, {  85,-257 },
 {  86,-257 }, {  87,-257 }, {  88,-257 }, {  89,-257 }, {  90,-257 },
 {  91,-257 }, {   0,   0 }, {  93,-257 }, {  94,-257 }, {  95,-257 },
 {  96,-257 }, {  97,-257 }, {  98,-257 }, {  99,-257 }, { 100,-257 },
 { 101,-257 }, { 102,-257 }, { 103,-257 }, { 104,-257 }, { 105,-257 },
 { 106,-257 }, { 107,-257 }, { 108,-257 }, { 109,-257 }, { 110,-257 },

 { 111,-257 }, { 112,-257 }, { 113,-257 }, { 114,-257 }, { 115,-257 },
 { 116,-257 }, { 117,-257 }, { 118,-257 }, { 119,-257 }, { 120,-257 },
 { 121,-257 }, { 122,-257 }, { 123,-257 }, { 124,-257 }, { 125,-257 },
 { 126,-257 }, {   0,   0 }, { 128, 853 }, { 129, 853 }, { 130, 853 },
 { 131, 853 }, { 132, 853 }, { 133, 853 }, { 134, 853 }, { 135, 853 },
 { 136, 853 }, { 137, 853 }, { 138, 853 }, { 139, 853 }, { 140, 853 },
 { 141, 853 }, { 142, 853 }, { 143, 853 }, { 144, 853 }, { 145, 853 },
 { 146, 853 }, { 147, 853 }, { 148, 853 }, { 149, 853 }, { 150, 853 },
 { 151, 853 }, { 152, 853 }, { 153, 853 }, { 154, 853 }, { 155, 853 },
 { 156, 853 }, { 157, 853 }, { 158, 853 }, { 159, 853 }, { 160, 853 },

 { 161, 853 }, { 162, 853 }, { 163, 853 }, { 164, 853 }, { 165, 853 },
 { 166, 853 }, { 167, 853 }, { 168, 853 }, { 169, 853 }, { 170, 853 },
 { 171, 853 }, { 172, 853 }, { 173, 853 }, { 174, 853 }, { 175, 853 },
 { 176, 853 }, { 177, 853 }, { 178, 853 }, { 179, 853 }, { 180, 853 },
 { 181, 853 }, { 182, 853 }, { 183, 853 }, { 184, 853 }, { 185, 853 },
 { 186, 853 }, { 187, 853 }, { 188, 853 }, { 189, 853 }, { 190, 853 },
 { 191, 853 }, { 192,-257 }, { 193,-257 }, { 194,   0 }, { 195,   0 },
 { 196,   0 }, { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 },
 { 201,   0 }, { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 },
 { 206,   0 }, { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 },

 { 211,   0 }, { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 },
 { 216,   0 }, { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 },
 { 221,   0 }, { 222,   0 }, { 223,   0 }, { 224, 257 }, { 225, 257 },
 { 226, 257 }, { 227, 257 }, { 228, 257 }, { 229, 257 }, { 230, 257 },
 { 231, 257 }, { 232, 257 }, { 233, 257 }, { 234, 257 }, { 235, 257 },
 { 236, 257 }, { 237, 257 }, { 238, 257 }, { 239, 257 }, { 240, 514 },
 { 241, 514 }, { 242, 514 }, { 243, 514 }, { 244, 514 }, { 245,-257 },
 { 246,-257 }, { 247,-257 }, { 248,-257 }, { 249,-257 }, { 250,-257 },
 { 251,-257 }, { 252,-257 }, { 253,-257 }, { 254,-257 }, { 255,-257 },
 {   0,   8 }, {   0,5116 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  10,-514 }, {   0,   0 }, {   0,   0 }, {  13,-514 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,-514 }, {  33,-514 },
 {   0,   0 }, {  35,-514 }, {  36,-514 }, {  37,-514 }, {  38,-514 },
 {  39,-514 }, {  40,-514 }, {  41,-514 }, {  42,-514 }, {  43,-514 },
 {  44,-514 }, {  45,-514 }, {  46,-514 }, {  47,-514 }, {  48,-514 },
 {  49,-514 }, {  50,-514 }, {  51,-514 }, {  52,-514 }, {  53,-514 },

 {  54,-514 }, {  55,-514 }, {  56,-514 }, {  57,-514 }, {  58,-514 },
 {  59,-514 }, {  60,-514 }, {  61,-514 }, {  62,-514 }, {  63,-514 },
 {  64,-514 }, {  65,-514 }, {  66,-514 }, {  67,-514 }, {  68,-514 },
 {  69,-514 }, {  70,-514 }, {  71,-514 }, {  72,-514 }, {  73,-514 },
 {  74,-514 }, {  75,-514 }, {  76,-514 }, {  77,-514 }, {  78,-514 },
 {  79,-514 }, {  80,-514 }, {  81,-514 }, {  82,-514 }, {  83,-514 },
 {  84,-514 }, {  85,-514 }, {  86,-514 }, {  87,-514 }, {  88,-514 },
 {  89,-514 }, {  90,-514 }, {  91,-514 }, {   0,   0 }, {  93,-514 },
 {  94,-514 }, {  95,-514 }, {  96,-514 }, {  97,-514 }, {  98,-514 },
 {  99,-514 }, { 100,-514 }, { 101,-514 }, { 102,-514 }, { 103,-514 },

 { 104,-514 }, { 105,-514 }, { 106,-514 }, { 107,-514 }, { 108,-514 },
 { 109,-514 }, { 110,-514 }, { 111,-514 }, { 112,-514 }, { 113,-514 },
 { 114,-514 }, { 115,-514 }, { 116,-514 }, { 117,-514 }, { 118,-514 },
 { 119,-514 }, { 120,-514 }, { 121,-514 }, { 122,-514 }, { 123,-514 },
 { 124,-514 }, { 125,-514 }, { 126,-514 }, {   0,   0 }, { 128, 853 },
 { 129, 853 }, { 130, 853 }, { 131, 853 }, { 132, 853 }, { 133, 853 },
 { 134, 853 }, { 135, 853 }, { 136, 853 }, { 137, 853 }, { 138, 853 },
 { 139, 853 }, { 140, 853 }, { 141, 853 }, { 142, 853 }, { 143, 853 },
 { 144, 853 }, { 145, 853 }, { 146, 853 }, { 147, 853 }, { 148, 853 },
 { 149, 853 }, { 150, 853 }, { 151, 853 }, { 152, 853 }, { 153, 853 },

 { 154, 853 }, { 155, 853 }, { 156, 853 }, { 157, 853 }, { 158, 853 },
 { 159, 853 }, { 160, 853 }, { 161, 853 }, { 162, 853 }, { 163, 853 },
 { 164, 853 }, { 165, 853 }, { 166, 853 }, { 167, 853 }, { 168, 853 },
 { 169, 853 }, { 170, 853 }, { 171, 853 }, { 172, 853 }, { 173, 853 },
 { 174, 853 }, { 175, 853 }, { 176, 853 }, { 177, 853 }, { 178, 853 },
 { 179, 853 }, { 180, 853 }, { 181, 853 }, { 182, 853 }, { 183, 853 },
 { 184, 853 }, { 185, 853 }, { 186, 853 }, { 187, 853 }, { 188, 853 },
 { 189, 853 }, { 190, 853 }, { 191, 853 }, { 192,-514 }, { 193,-514 },
 { 194,-257 }, { 195,-257 }, { 196,-257 }, { 197,-257 }, { 198,-257 },
 { 199,-257 }, { 200,-257 }, { 201,-257 }, { 202,-257 }, { 203,-257 },

 { 204,-257 }, { 205,-257 }, { 206,-257 }, { 207,-257 }, { 208,-257 },
 { 209,-257 }, { 210,-257 }, { 211,-257 }, { 212,-257 }, { 213,-257 },
 { 214,-257 }, { 215,-257 }, { 216,-257 }, { 217,-257 }, { 218,-257 },
 { 219,-257 }, { 220,-257 }, { 221,-257 }, { 222,-257 }, { 223,-257 },
 { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 }, { 228,   0 },
 { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 }, { 233,   0 },
 { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 }, { 238,   0 },
 { 239,   0 }, { 240, 257 }, { 241, 257 }, { 242, 257 }, { 243, 257 },
 { 244, 257 }, { 245,-514 }, { 246,-514 }, { 247,-514 }, { 248,-514 },
 { 249,-514 }, { 250,-514 }, { 251,-514 }, { 252,-514 }, { 253,-514 },

 { 254,-514 }, { 255,-514 }, {   0,   8 }, {   0,4859 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,-771 }, {   0,   0 },
 {   0,   0 }, {  13,-771 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  32,-771 }, {  33,-771 }, {   0,   0 }, {  35,-771 }, {  36,-771 },
 {  37,-771 }, {  38,-771 }, {  39,-771 }, {  40,-771 }, {  41,-771 },
 {  42,-771 }, {  43,-771 }, {  44,-771 }, {  45,-771 }, {  46,-771 },

 {  47,-771 }, {  48,-771 }, {  49,-771 }, {  50,-771 }, {  51,-771 },
 {  52,-771 }, {  53,-771 }, {  54,-771 }, {  55,-771 }, {  56,-771 },
 {  57,-771 }, {  58,-771 }, {  59,-771 }, {  60,-771 }, {  61,-771 },
 {  62,-771 }, {  63,-771 }, {  64,-771 }, {  65,-771 }, {  66,-771 },
 {  67,-771 }, {  68,-771 }, {  69,-771 }, {  70,-771 }, {  71,-771 },
 {  72,-771 }, {  73,-771 }, {  74,-771 }, {  75,-771 }, {  76,-771 },
 {  77,-771 }, {  78,-771 }, {  79,-771 }, {  80,-771 }, {  81,-771 },
 {  82,-771 }, {  83,-771 }, {  84,-771 }, {  85,-771 }, {  86,-771 },
 {  87,-771 }, {  88,-771 }, {  89,-771 }, {  90,-771 }, {  91,-771 },
 {   0,   0 }, {  93,-771 }, {  94,-771 }, {  95,-771 }, {  96,-771 },

 {  97,-771 }, {  98,-771 }, {  99,-771 }, { 100,-771 }, { 101,-771 },
 { 102,-771 }, { 103,-771 }, { 104,-771 }, { 105,-771 }, { 106,-771 },
 { 107,-771 }, { 108,-771 }, { 109,-771 }, { 110,-771 }, { 111,-771 },
 { 112,-771 }, { 113,-771 }, { 114,-771 }, { 115,-771 }, { 116,-771 },
 { 117,-771 }, { 118,-771 }, { 119,-771 }, { 120,-771 }, { 121,-771 },
 { 122,-771 }, { 123,-771 }, { 124,-771 }, { 125,-771 }, { 126,-771 },
 {   0,   0 }, { 128, 853 }, { 129, 853 }, { 130, 853 }, { 131, 853 },
 { 132, 853 }, { 133, 853 }, { 134, 853 }, { 135, 853 }, { 136, 853 },
 { 137, 853 }, { 138, 853 }, { 139, 853 }, { 140, 853 }, { 141, 853 },
 { 142, 853 }, { 143, 853 }, { 144, 853 }, { 145, 853 }, { 146, 853 },

 { 147, 853 }, { 148, 853 }, { 149, 853 }, { 150, 853 }, { 151, 853 },
 { 152, 853 }, { 153, 853 }, { 154, 853 }, { 155, 853 }, { 156, 853 },
 { 157, 853 }, { 158, 853 }, { 159, 853 }, { 160, 853 }, { 161, 853 },
 { 162, 853 }, { 163, 853 }, { 164, 853 }, { 165, 853 }, { 166, 853 },
 { 167, 853 }, { 168, 853 }, { 169, 853 }, { 170, 853 }, { 171, 853 },
 { 172, 853 }, { 173, 853 }, { 174, 853 }, { 175, 853 }, { 176, 853 },
 { 177, 853 }, { 178, 853 }, { 179, 853 }, { 180, 853 }, { 181, 853 },
 { 182, 853 }, { 183, 853 }, { 184, 853 }, { 185, 853 }, { 186, 853 },
 { 187, 853 }, { 188, 853 }, { 189, 853 }, { 190, 853 }, { 191, 853 },
 { 192,-771 }, { 193,-771 }, { 194,-514 }, { 195,-514 }, { 196,-514 },

 { 197,-514 }, { 198,-514 }, { 199,-514 }, { 200,-514 }, { 201,-514 },
 { 202,-514 }, { 203,-514 }, { 204,-514 }, { 205,-514 }, { 206,-514 },
 { 207,-514 }, { 208,-514 }, { 209,-514 }, { 210,-514 }, { 211,-514 },
 { 212,-514 }, { 213,-514 }, { 214,-514 }, { 215,-514 }, { 216,-514 },
 { 217,-514 }, { 218,-514 }, { 219,-514 }, { 220,-514 }, { 221,-514 },
 { 222,-514 }, { 223,-514 }, { 224,-257 }, { 225,-257 }, { 226,-257 },
 { 227,-257 }, { 228,-257 }, { 229,-257 }, { 230,-257 }, { 231,-257 },
 { 232,-257 }, { 233,-257 }, { 234,-257 }, { 235,-257 }, { 236,-257 },
 { 237,-257 }, { 238,-257 }, { 239,-257 }, { 240,   0 }, { 241,   0 },
 { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,-771 }, { 246,-771 },

 { 247,-771 }, { 248,-771 }, { 249,-771 }, { 250,-771 }, { 251,-771 },
 { 252,-771 }, { 253,-771 }, { 254,-771 }, { 255,-771 }, {   0,   9 },
 {   0,4602 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,4592 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,   0 }, {  49,   0 },
 {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 },
 {  55,   0 }, {  56,   0 }, {  57,   0 }, {  48,2165 }, {  49,2165 },
 {  50,2165 }, {  51,2165 }, {  52,2165 }, {  53,2165 }, {  54,2165 },
 {  55,2165 }, {  56,2165 }, {  57,2165 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,2165 }, {  66,2165 }, {  67,2165 }, {  68,2165 }, {  69,2165 },
 {  70,2165 }, {   0,   8 }, {   0,4520 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  10,-1110 }, {   0,   0 }, {   0,   0 },
 {  13,-1110 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  97,2165 }, {  98,2165 }, {  99,2165 },
 { 100,2165 }, { 101,2165 }, { 102,2165 }, {   0,   0 }, {  32,-1110 },
 {  33,-1110 }, {   0,   0 }, {  35,-1110 }, {  36,-1110 }, {  37,-1110 },
 {  38,-1110 }, {  39,-1110 }, {  40,-1110 }, {  41,-1110 }, {  42,-1110 },
 {  43,-1110 }, {  44,-1110 }, {  45,-1110 }, {  46,-1110 }, {  47,-1110 },
 {  48,-1110 }, {  49,-1110 }, {  50,-1110 }, {  51,-1110 }, {  52,-1110 },
 {  53,-1110 }, {  54,-1110 }, {  55,-1110 }, {  56,-1110 }, {  57,-1110 },

 {  58,-1110 }, {  59,-1110 }, {  60,-1110 }, {  61,-1110 }, {  62,-1110 },
 {  63,-1110 }, {  64,-1110 }, {  65,-1110 }, {  66,-1110 }, {  67,-1110 },
 {  68,-1110 }, {  69,-1110 }, {  70,-1110 }, {  71,-1110 }, {  72,-1110 },
 {  73,-1110 }, {  74,-1110 }, {  75,-1110 }, {  76,-1110 }, {  77,-1110 },
 {  78,-1110 }, {  79,-1110 }, {  80,-1110 }, {  81,-1110 }, {  82,-1110 },
 {  83,-1110 }, {  84,-1110 }, {  85,-1110 }, {  86,-1110 }, {  87,-1110 },
 {  88,-1110 }, {  89,-1110 }, {  90,-1110 }, {  91,-1110 }, {   0,   0 },
 {  93,-1110 }, {  94,-1110 }, {  95,-1110 }, {  96,-1110 }, {  97,-1110 },
 {  98,-1110 }, {  99,-1110 }, { 100,-1110 }, { 101,-1110 }, { 102,-1110 },
 { 103,-1110 }, { 104,-1110 }, { 105,-1110 }, { 106,-1110 }, { 107,-1110 },

 { 108,-1110 }, { 109,-1110 }, { 110,-1110 }, { 111,-1110 }, { 112,-1110 },
 { 113,-1110 }, { 114,-1110 }, { 115,-1110 }, { 116,-1110 }, { 117,-1110 },
 { 118,-1110 }, { 119,-1110 }, { 120,-1110 }, { 121,-1110 }, { 122,-1110 },
 { 123,-1110 }, { 124,-1110 }, { 125,-1110 }, { 126,-1110 }, {   0,   0 },
 { 128,-1110 }, { 129,-1110 }, { 130,-1110 }, { 131,-1110 }, { 132,-1110 },
 { 133,-1110 }, { 134,-1110 }, { 135,-1110 }, { 136,-1110 }, { 137,-1110 },
 { 138,-1110 }, { 139,-1110 }, { 140,-1110 }, { 141,-1110 }, { 142,-1110 },
 { 143,-1110 }, { 144,-1110 }, { 145,-1110 }, { 146,-1110 }, { 147,-1110 },
 { 148,-1110 }, { 149,-1110 }, { 150,-1110 }, { 151,-1110 }, { 152,-1110 },
 { 153,-1110 }, { 154,-1110 }, { 155,-1110 }, { 156,-1110 }, { 157,-1110 },

 { 158,-1110 }, { 159,-1110 }, { 160,-1110 }, { 161,-1110 }, { 162,-1110 },
 { 163,-1110 }, { 164,-1110 }, { 165,-1110 }, { 166,-1110 }, { 167,-1110 },
 { 168,-1110 }, { 169,-1110 }, { 170,-1110 }, { 171,-1110 }, { 172,-1110 },
 { 173,-1110 }, { 174,-1110 }, { 175,-1110 }, { 176,-1110 }, { 177,-1110 },
 { 178,-1110 }, { 179,-1110 }, { 180,-1110 }, { 181,-1110 }, { 182,-1110 },
 { 183,-1110 }, { 184,-1110 }, { 185,-1110 }, { 186,-1110 }, { 187,-1110 },
 { 188,-1110 }, { 189,-1110 }, { 190,-1110 }, { 191,-1110 }, { 192,-1110 },
 { 193,-1110 }, { 194,-853 }, { 195,-853 }, { 196,-853 }, { 197,-853 },
 { 198,-853 }, { 199,-853 }, { 200,-853 }, { 201,-853 }, { 202,-853 },
 { 203,-853 }, { 204,-853 }, { 205,-853 }, { 206,-853 }, { 207,-853 },

 { 208,-853 }, { 209,-853 }, { 210,-853 }, { 211,-853 }, { 212,-853 },
 { 213,-853 }, { 214,-853 }, { 215,-853 }, { 216,-853 }, { 217,-853 },
 { 218,-853 }, { 219,-853 }, { 220,-853 }, { 221,-853 }, { 222,-853 },
 { 223,-853 }, { 224,-596 }, { 225,-596 }, { 226,-596 }, { 227,-596 },
 { 228,-596 }, { 229,-596 }, { 230,-596 }, { 231,-596 }, { 232,-596 },
 { 233,-596 }, { 234,-596 }, { 235,-596 }, { 236,-596 }, { 237,-596 },
 { 238,-596 }, { 239,-596 }, { 240,-339 }, { 241,-339 }, { 242,-339 },
 { 243,-339 }, { 244,-339 }, { 245,-1110 }, { 246,-1110 }, { 247,-1110 },
 { 248,-1110 }, { 249,-1110 }, { 250,-1110 }, { 251,-1110 }, { 252,-1110 },
 { 253,-1110 }, { 254,-1110 }, { 255,-1110 }, {   0,   8 }, {   0,4263 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,-1367 },
 {   0,   0 }, {   0,   0 }, {  13,-1367 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  32,-1367 }, {  33,-1367 }, {   0,   0 }, {  35,-1367 },
 {  36,-1367 }, {  37,-1367 }, {  38,-1367 }, {  39,-1367 }, {  40,-1367 },
 {  41,-1367 }, {  42,-1367 }, {  43,-1367 }, {  44,-1367 }, {  45,-1367 },
 {  46,-1367 }, {  47,-1367 }, {  48,-1367 }, {  49,-1367 }, {  50,-1367 },

 {  51,-1367 }, {  52,-1367 }, {  53,-1367 }, {  54,-1367 }, {  55,-1367 },
 {  56,-1367 }, {  57,-1367 }, {  58,-1367 }, {  59,-1367 }, {  60,-1367 },
 {  61,-1367 }, {  62,-1367 }, {  63,-1367 }, {  64,-1367 }, {  65,-1367 },
 {  66,-1367 }, {  67,-1367 }, {  68,-1367 }, {  69,-1367 }, {  70,-1367 },
 {  71,-1367 }, {  72,-1367 }, {  73,-1367 }, {  74,-1367 }, {  75,-1367 },
 {  76,-1367 }, {  77,-1367 }, {  78,-1367 }, {  79,-1367 }, {  80,-1367 },
 {  81,-1367 }, {  82,-1367 }, {  83,-1367 }, {  84,-1367 }, {  85,-1367 },
 {  86,-1367 }, {  87,-1367 }, {  88,-1367 }, {  89,-1367 }, {  90,-1367 },
 {  91,-1367 }, {   0,   0 }, {  93,-1367 }, {  94,-1367 }, {  95,-1367 },
 {  96,-1367 }, {  97,-1367 }, {  98,-1367 }, {  99,-1367 }, { 100,-1367 },

 { 101,-1367 }, { 102,-1367 }, { 103,-1367 }, { 104,-1367 }, { 105,-1367 },
 { 106,-1367 }, { 107,-1367 }, { 108,-1367 }, { 109,-1367 }, { 110,-1367 },
 { 111,-1367 }, { 112,-1367 }, { 113,-1367 }, { 114,-1367 }, { 115,-1367 },
 { 116,-1367 }, { 117,-1367 }, { 118,-1367 }, { 119,-1367 }, { 120,-1367 },
 { 121,-1367 }, { 122,-1367 }, { 123,-1367 }, { 124,-1367 }, { 125,-1367 },
 { 126,-1367 }, {   0,   0 }, { 128,-257 }, { 129,-257 }, { 130,-257 },
 { 131,-257 }, { 132,-257 }, { 133,-257 }, { 134,-257 }, { 135,-257 },
 { 136,-257 }, { 137,-257 }, { 138,-257 }, { 139,-257 }, { 140,-257 },
 { 141,-257 }, { 142,-257 }, { 143,-257 }, { 144,-257 }, { 145,-257 },
 { 146,-257 }, { 147,-257 }, { 148,-257 }, { 149,-257 }, { 150,-257 },

 { 151,-257 }, { 152,-257 }, { 153,-257 }, { 154,-257 }, { 155,-257 },
 { 156,-257 }, { 157,-257 }, { 158,-257 }, { 159,-257 }, { 160,-257 },
 { 161,-257 }, { 162,-257 }, { 163,-257 }, { 164,-257 }, { 165,-257 },
 { 166,-257 }, { 167,-257 }, { 168,-257 }, { 169,-257 }, { 170,-257 },
 { 171,-257 }, { 172,-257 }, { 173,-257 }, { 174,-257 }, { 175,-257 },
 { 176,-257 }, { 177,-257 }, { 178,-257 }, { 179,-257 }, { 180,-257 },
 { 181,-257 }, { 182,-257 }, { 183,-257 }, { 184,-257 }, { 185,-257 },
 { 186,-257 }, { 187,-257 }, { 188,-257 }, { 189,-257 }, { 190,-257 },
 { 191,-257 }, { 192,-1367 }, { 193,-1367 }, { 194,-1110 }, { 195,-1110 },
 { 196,-1110 }, { 197,-1110 }, { 198,-1110 }, { 199,-1110 }, { 200,-1110 },

 { 201,-1110 }, { 202,-1110 }, { 203,-1110 }, { 204,-1110 }, { 205,-1110 },
 { 206,-1110 }, { 207,-1110 }, { 208,-1110 }, { 209,-1110 }, { 210,-1110 },
 { 211,-1110 }, { 212,-1110 }, { 213,-1110 }, { 214,-1110 }, { 215,-1110 },
 { 216,-1110 }, { 217,-1110 }, { 218,-1110 }, { 219,-1110 }, { 220,-1110 },
 { 221,-1110 }, { 222,-1110 }, { 223,-1110 }, { 224,-853 }, { 225,-853 },
 { 226,-853 }, { 227,-853 }, { 228,-853 }, { 229,-853 }, { 230,-853 },
 { 231,-853 }, { 232,-853 }, { 233,-853 }, { 234,-853 }, { 235,-853 },
 { 236,-853 }, { 237,-853 }, { 238,-853 }, { 239,-853 }, { 240,-596 },
 { 241,-596 }, { 242,-596 }, { 243,-596 }, { 244,-596 }, { 245,-1367 },
 { 246,-1367 }, { 247,-1367 }, { 248,-1367 }, { 249,-1367 }, { 250,-1367 },

 { 251,-1367 }, { 252,-1367 }, { 253,-1367 }, { 254,-1367 }, { 255,-1367 },
 {   0,   8 }, {   0,4006 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  10,-1624 }, {   0,   0 }, {   0,   0 }, {  13,-1624 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,-1624 }, {  33,-1624 },
 {   0,   0 }, {  35,-1624 }, {  36,-1624 }, {  37,-1624 }, {  38,-1624 },
 {  39,-1624 }, {  40,-1624 }, {  41,-1624 }, {  42,-1624 }, {  43,-1624 },

 {  44,-1624 }, {  45,-1624 }, {  46,-1624 }, {  47,-1624 }, {  48,-1624 },
 {  49,-1624 }, {  50,-1624 }, {  51,-1624 }, {  52,-1624 }, {  53,-1624 },
 {  54,-1624 }, {  55,-1624 }, {  56,-1624 }, {  57,-1624 }, {  58,-1624 },
 {  59,-1624 }, {  60,-1624 }, {  61,-1624 }, {  62,-1624 }, {  63,-1624 },
 {  64,-1624 }, {  65,-1624 }, {  66,-1624 }, {  67,-1624 }, {  68,-1624 },
 {  69,-1624 }, {  70,-1624 }, {  71,-1624 }, {  72,-1624 }, {  73,-1624 },
 {  74,-1624 }, {  75,-1624 }, {  76,-1624 }, {  77,-1624 }, {  78,-1624 },
 {  79,-1624 }, {  80,-1624 }, {  81,-1624 }, {  82,-1624 }, {  83,-1624 },
 {  84,-1624 }, {  85,-1624 }, {  86,-1624 }, {  87,-1624 }, {  88,-1624 },
 {  89,-1624 }, {  90,-1624 }, {  91,-1624 }, {   0,   0 }, {  93,-1624 },

 {  94,-1624 }, {  95,-1624 }, {  96,-1624 }, {  97,-1624 }, {  98,-1624 },
 {  99,-1624 }, { 100,-1624 }, { 101,-1624 }, { 102,-1624 }, { 103,-1624 },
 { 104,-1624 }, { 105,-1624 }, { 106,-1624 }, { 107,-1624 }, { 108,-1624 },
 { 109,-1624 }, { 110,-1624 }, { 111,-1624 }, { 112,-1624 }, { 113,-1624 },
 { 114,-1624 }, { 115,-1624 }, { 116,-1624 }, { 117,-1624 }, { 118,-1624 },
 { 119,-1624 }, { 120,-1624 }, { 121,-1624 }, { 122,-1624 }, { 123,-1624 },
 { 124,-1624 }, { 125,-1624 }, { 126,-1624 }, {   0,   0 }, { 128,1651 },
 { 129,1651 }, { 130,1651 }, { 131,1651 }, { 132,1651 }, { 133,1651 },
 { 134,1651 }, { 135,1651 }, { 136,1651 }, { 137,1651 }, { 138,1651 },
 { 139,1651 }, { 140,1651 }, { 141,1651 }, { 142,1651 }, { 143,1651 },

 { 144,1651 }, { 145,1651 }, { 146,1651 }, { 147,1651 }, { 148,1651 },
 { 149,1651 }, { 150,1651 }, { 151,1651 }, { 152,1651 }, { 153,1651 },
 { 154,1651 }, { 155,1651 }, { 156,1651 }, { 157,1651 }, { 158,1651 },
 { 159,1651 }, { 160,1651 }, { 161,1651 }, { 162,1651 }, { 163,1651 },
 { 164,1651 }, { 165,1651 }, { 166,1651 }, { 167,1651 }, { 168,1651 },
 { 169,1651 }, { 170,1651 }, { 171,1651 }, { 172,1651 }, { 173,1651 },
 { 174,1651 }, { 175,1651 }, { 176,1651 }, { 177,1651 }, { 178,1651 },
 { 179,1651 }, { 180,1651 }, { 181,1651 }, { 182,1651 }, { 183,1651 },
 { 184,1651 }, { 185,1651 }, { 186,1651 }, { 187,1651 }, { 188,1651 },
 { 189,1651 }, { 190,1651 }, { 191,1651 }, { 192,-1624 }, { 193,-1624 },

 { 194,-1367 }, { 195,-1367 }, { 196,-1367 }, { 197,-1367 }, { 198,-1367 },
 { 199,-1367 }, { 200,-1367 }, { 201,-1367 }, { 202,-1367 }, { 203,-1367 },
 { 204,-1367 }, { 205,-1367 }, { 206,-1367 }, { 207,-1367 }, { 208,-1367 },
 { 209,-1367 }, { 210,-1367 }, { 211,-1367 }, { 212,-1367 }, { 213,-1367 },
 { 214,-1367 }, { 215,-1367 }, { 216,-1367 }, { 217,-1367 }, { 218,-1367 },
 { 219,-1367 }, { 220,-1367 }, { 221,-1367 }, { 222,-1367 }, { 223,-1367 },
 { 224,-1110 }, { 225,-1110 }, { 226,-1110 }, { 227,-1110 }, { 228,-1110 },
 { 229,-1110 }, { 230,-1110 }, { 231,-1110 }, { 232,-1110 }, { 233,-1110 },
 { 234,-1110 }, { 235,-1110 }, { 236,-1110 }, { 237,-1110 }, { 238,-1110 },
 { 239,-1110 }, { 240,-853 }, { 241,-853 }, { 242,-853 }, { 243,-853 },

 { 244,-853 }, { 245,-1624 }, { 246,-1624 }, { 247,-1624 }, { 248,-1624 },
 { 249,-1624 }, { 250,-1624 }, { 251,-1624 }, { 252,-1624 }, { 253,-1624 },
 { 254,-1624 }, { 255,-1624 }, {   0,   0 }, {   0,3749 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,  42 }, {   0,3739 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,  40 }, {   0,3729 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,  10 }, {  49,  10 }, {  50,  10 }, {  51,  10 },
 {  52,  10 }, {  53,  10 }, {  54,  10 }, {  55,  10 }, {  56,  10 },
 {  57,  10 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },
 {  57,   0 }, {  48,-4511 }, {  49,-4511 }, {  50,-4511 }, {  51,-4511 },
 {  52,-4511 }, {  53,-4511 }, {  54,-4511 }, {  55,-4511 }, {  56,-4511 },
 {  57,-4511 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-4419 }, {  66,-4419 },

 {  67,-4419 }, {  68,-4419 }, {  69,-4419 }, {  70,-4419 }, {  71,-4419 },
 {  72,-4419 }, {  73,-4419 }, {  74,-4419 }, {  75,-4419 }, {  76,-4419 },
 {  77,-4419 }, {  78,-4419 }, {  79,-4419 }, {  80,-4419 }, {  81,-4419 },
 {  82,-4419 }, {  83,-4419 }, {  84,-4419 }, {  85,-4419 }, {  86,-4419 },
 {  87,-4419 }, {  88,-4419 }, {  89,-4419 }, {  90,-4419 }, {   0,  40 },
 {   0,3637 }, {   0,   0 }, {   0,   0 }, {  95,-4419 }, {   0,   0 },
 {  97,-4419 }, {  98,-4419 }, {  99,-4419 }, { 100,-4419 }, { 101,-4419 },
 { 102,-4419 }, { 103,-4419 }, { 104,-4419 }, { 105,-4419 }, { 106,-4419 },
 { 107,-4419 }, { 108,1631 }, { 109,-4419 }, { 110,-4419 }, { 111,-4419 },
 { 112,-4419 }, { 113,-4419 }, { 114,-4419 }, { 115,-4419 }, { 116,-4419 },

 { 117,-4419 }, { 118,-4419 }, { 119,-4419 }, { 120,-4419 }, { 121,-4419 },
 { 122,-4419 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-4603 }, {  49,-4603 },
 {  50,-4603 }, {  51,-4603 }, {  52,-4603 }, {  53,-4603 }, {  54,-4603 },
 {  55,-4603 }, {  56,-4603 }, {  57,-4603 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-4511 }, {  66,-4511 }, {  67,-4511 }, {  68,-4511 }, {  69,-4511 },
 {  70,-4511 }, {  71,-4511 }, {  72,-4511 }, {  73,-4511 }, {  74,-4511 },

 {  75,-4511 }, {  76,-4511 }, {  77,-4511 }, {  78,-4511 }, {  79,-4511 },
 {  80,-4511 }, {  81,-4511 }, {  82,-4511 }, {  83,-4511 }, {  84,-4511 },
 {  85,-4511 }, {  86,-4511 }, {  87,-4511 }, {  88,-4511 }, {  89,-4511 },
 {  90,-4511 }, {   0,  40 }, {   0,3545 }, {   0,   0 }, {   0,   0 },
 {  95,-4511 }, {   0,   0 }, {  97,-4511 }, {  98,-4511 }, {  99,-4511 },
 { 100,-4511 }, { 101,-4511 }, { 102,-4511 }, { 103,-4511 }, { 104,-4511 },
 { 105,1631 }, { 106,-4511 }, { 107,-4511 }, { 108,-4511 }, { 109,-4511 },
 { 110,-4511 }, { 111,-4511 }, { 112,-4511 }, { 113,-4511 }, { 114,-4511 },
 { 115,-4511 }, { 116,-4511 }, { 117,-4511 }, { 118,-4511 }, { 119,-4511 },
 { 120,-4511 }, { 121,-4511 }, { 122,-4511 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-4695 }, {  49,-4695 }, {  50,-4695 }, {  51,-4695 }, {  52,-4695 },
 {  53,-4695 }, {  54,-4695 }, {  55,-4695 }, {  56,-4695 }, {  57,-4695 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-4603 }, {  66,-4603 }, {  67,-4603 },
 {  68,-4603 }, {  69,-4603 }, {  70,-4603 }, {  71,-4603 }, {  72,-4603 },
 {  73,-4603 }, {  74,-4603 }, {  75,-4603 }, {  76,-4603 }, {  77,-4603 },
 {  78,-4603 }, {  79,-4603 }, {  80,-4603 }, {  81,-4603 }, {  82,-4603 },

 {  83,-4603 }, {  84,-4603 }, {  85,-4603 }, {  86,-4603 }, {  87,-4603 },
 {  88,-4603 }, {  89,-4603 }, {  90,-4603 }, {   0,  40 }, {   0,3453 },
 {   0,   0 }, {   0,   0 }, {  95,-4603 }, {   0,   0 }, {  97,-4603 },
 {  98,-4603 }, {  99,-4603 }, { 100,-4603 }, { 101,-4603 }, { 102,-4603 },
 { 103,-4603 }, { 104,-4603 }, { 105,-4603 }, { 106,-4603 }, { 107,-4603 },
 { 108,-4603 }, { 109,1631 }, { 110,-4603 }, { 111,-4603 }, { 112,-4603 },
 { 113,-4603 }, { 114,-4603 }, { 115,-4603 }, { 116,-4603 }, { 117,-4603 },
 { 118,-4603 }, { 119,-4603 }, { 120,-4603 }, { 121,-4603 }, { 122,-4603 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-4787 }, {  49,-4787 }, {  50,-4787 },
 {  51,-4787 }, {  52,-4787 }, {  53,-4787 }, {  54,-4787 }, {  55,-4787 },
 {  56,-4787 }, {  57,-4787 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-4695 },
 {  66,-4695 }, {  67,-4695 }, {  68,-4695 }, {  69,-4695 }, {  70,-4695 },
 {  71,-4695 }, {  72,-4695 }, {  73,-4695 }, {  74,-4695 }, {  75,-4695 },
 {  76,-4695 }, {  77,-4695 }, {  78,-4695 }, {  79,-4695 }, {  80,-4695 },
 {  81,-4695 }, {  82,-4695 }, {  83,-4695 }, {  84,-4695 }, {  85,-4695 },
 {  86,-4695 }, {  87,-4695 }, {  88,-4695 }, {  89,-4695 }, {  90,-4695 },

 {   0,  40 }, {   0,3361 }, {   0,   0 }, {   0,   0 }, {  95,-4695 },
 {   0,   0 }, {  97,-4695 }, {  98,-4695 }, {  99,-4695 }, { 100,-4695 },
 { 101,1631 }, { 102,-4695 }, { 103,-4695 }, { 104,-4695 }, { 105,-4695 },
 { 106,-4695 }, { 107,-4695 }, { 108,-4695 }, { 109,-4695 }, { 110,-4695 },
 { 111,-4695 }, { 112,-4695 }, { 113,-4695 }, { 114,-4695 }, { 115,-4695 },
 { 116,-4695 }, { 117,-4695 }, { 118,-4695 }, { 119,-4695 }, { 120,-4695 },
 { 121,-4695 }, { 122,-4695 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-4879 },

 {  49,-4879 }, {  50,-4879 }, {  51,-4879 }, {  52,-4879 }, {  53,-4879 },
 {  54,-4879 }, {  55,-4879 }, {  56,-4879 }, {  57,-4879 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-4787 }, {  66,-4787 }, {  67,-4787 }, {  68,-4787 },
 {  69,-4787 }, {  70,-4787 }, {  71,-4787 }, {  72,-4787 }, {  73,-4787 },
 {  74,-4787 }, {  75,-4787 }, {  76,-4787 }, {  77,-4787 }, {  78,-4787 },
 {  79,-4787 }, {  80,-4787 }, {  81,-4787 }, {  82,-4787 }, {  83,-4787 },
 {  84,-4787 }, {  85,-4787 }, {  86,-4787 }, {  87,-4787 }, {  88,-4787 },
 {  89,-4787 }, {  90,-4787 }, {   0,  21 }, {   0,3269 }, {   0,   0 },
 {   0,   0 }, {  95,-4787 }, {   0,   0 }, {  97,1631 }, {  98,-4787 },

 {  99,-4787 }, { 100,-4787 }, { 101,-4787 }, { 102,-4787 }, { 103,-4787 },
 { 104,-4787 }, { 105,-4787 }, { 106,-4787 }, { 107,-4787 }, { 108,-4787 },
 { 109,-4787 }, { 110,-4787 }, { 111,-4787 }, { 112,-4787 }, { 113,-4787 },
 { 114,-4787 }, { 115,-4787 }, { 116,-4787 }, { 117,-4787 }, { 118,-4787 },
 { 119,-4787 }, { 120,-4787 }, { 121,-4787 }, { 122,-4787 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-4971 }, {  49,-4971 }, {  50,-4971 }, {  51,-4971 },
 {  52,-4971 }, {  53,-4971 }, {  54,-4971 }, {  55,-4971 }, {  56,-4971 },

 {  57,-4971 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-4879 }, {  66,-4879 },
 {  67,-4879 }, {  68,-4879 }, {  69,-4879 }, {  70,-4879 }, {  71,-4879 },
 {  72,-4879 }, {  73,-4879 }, {  74,-4879 }, {  75,-4879 }, {  76,-4879 },
 {  77,-4879 }, {  78,-4879 }, {  79,-4879 }, {  80,-4879 }, {  81,-4879 },
 {  82,-4879 }, {  83,-4879 }, {  84,-4879 }, {  85,-4879 }, {  86,-4879 },
 {  87,-4879 }, {  88,-4879 }, {  89,-4879 }, {  90,-4879 }, {   0,  13 },
 {   0,3177 }, {   0,   0 }, {   0,   0 }, {  95,-4879 }, {   0,   0 },
 {  97,-4879 }, {  98,-4879 }, {  99,-4879 }, { 100,-4879 }, { 101,-4879 },
 { 102,-4879 }, { 103,-4879 }, { 104,-4879 }, { 105,-4879 }, { 106,-4879 },

 { 107,-4879 }, { 108,-4879 }, { 109,-4879 }, { 110,-4879 }, { 111,-4879 },
 { 112,-4879 }, { 113,-4879 }, { 114,-4879 }, { 115,-4879 }, { 116,-4879 },
 { 117,-4879 }, { 118,-4879 }, { 119,-4879 }, { 120,-4879 }, { 121,-4879 },
 { 122,-4879 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-5063 }, {  49,-5063 },
 {  50,-5063 }, {  51,-5063 }, {  52,-5063 }, {  53,-5063 }, {  54,-5063 },
 {  55,-5063 }, {  56,-5063 }, {  57,-5063 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {  65,-4971 }, {  66,-4971 }, {  67,-4971 }, {  68,-4971 }, {  69,-4971 },
 {  70,-4971 }, {  71,-4971 }, {  72,-4971 }, {  73,-4971 }, {  74,-4971 },
 {  75,-4971 }, {  76,-4971 }, {  77,-4971 }, {  78,-4971 }, {  79,-4971 },
 {  80,-4971 }, {  81,-4971 }, {  82,-4971 }, {  83,-4971 }, {  84,-4971 },
 {  85,-4971 }, {  86,-4971 }, {  87,-4971 }, {  88,-4971 }, {  89,-4971 },
 {  90,-4971 }, {   0,  40 }, {   0,3085 }, {   0,   0 }, {   0,   0 },
 {  95,-4971 }, {   0,   0 }, {  97,-4971 }, {  98,-4971 }, {  99,-4971 },
 { 100,-4971 }, { 101,-4971 }, { 102,-4971 }, { 103,-4971 }, { 104,-4971 },
 { 105,-4971 }, { 106,-4971 }, { 107,-4971 }, { 108,-4971 }, { 109,-4971 },
 { 110,-4971 }, { 111,-4971 }, { 112,-4971 }, { 113,-4971 }, { 114,-4971 },

 { 115,-4971 }, { 116,-4971 }, { 117,-4971 }, { 118,-4971 }, { 119,-4971 },
 { 120,-4971 }, { 121,-4971 }, { 122,-4971 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-5155 }, {  49,-5155 }, {  50,-5155 }, {  51,-5155 }, {  52,-5155 },
 {  53,-5155 }, {  54,-5155 }, {  55,-5155 }, {  56,-5155 }, {  57,-5155 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-5063 }, {  66,-5063 }, {  67,-5063 },
 {  68,-5063 }, {  69,-5063 }, {  70,-5063 }, {  71,-5063 }, {  72,-5063 },

 {  73,-5063 }, {  74,-5063 }, {  75,-5063 }, {  76,-5063 }, {  77,-5063 },
 {  78,-5063 }, {  79,-5063 }, {  80,-5063 }, {  81,-5063 }, {  82,-5063 },
 {  83,-5063 }, {  84,-5063 }, {  85,-5063 }, {  86,-5063 }, {  87,-5063 },
 {  88,-5063 }, {  89,-5063 }, {  90,-5063 }, {   0,  40 }, {   0,2993 },
 {   0,   0 }, {   0,   0 }, {  95,-5063 }, {   0,   0 }, {  97,-5063 },
 {  98,-5063 }, {  99,-5063 }, { 100,-5063 }, { 101,-5063 }, { 102,-5063 },
 { 103,-5063 }, { 104,-5063 }, { 105,-5063 }, { 106,-5063 }, { 107,-5063 },
 { 108,-5063 }, { 109,-5063 }, { 110,-5063 }, { 111,-5063 }, { 112,-5063 },
 { 113,-5063 }, { 114,-5063 }, { 115,-5063 }, { 116,-5063 }, { 117,1447 },
 { 118,-5063 }, { 119,-5063 }, { 120,-5063 }, { 121,-5063 }, { 122,-5063 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-5247 }, {  49,-5247 }, {  50,-5247 },
 {  51,-5247 }, {  52,-5247 }, {  53,-5247 }, {  54,-5247 }, {  55,-5247 },
 {  56,-5247 }, {  57,-5247 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-5155 },
 {  66,-5155 }, {  67,-5155 }, {  68,-5155 }, {  69,-5155 }, {  70,-5155 },
 {  71,-5155 }, {  72,-5155 }, {  73,-5155 }, {  74,-5155 }, {  75,-5155 },
 {  76,-5155 }, {  77,-5155 }, {  78,-5155 }, {  79,-5155 }, {  80,-5155 },

 {  81,-5155 }, {  82,-5155 }, {  83,-5155 }, {  84,-5155 }, {  85,-5155 },
 {  86,-5155 }, {  87,-5155 }, {  88,-5155 }, {  89,-5155 }, {  90,-5155 },
 {   0,  40 }, {   0,2901 }, {   0,   0 }, {   0,   0 }, {  95,-5155 },
 {   0,   0 }, {  97,-5155 }, {  98,-5155 }, {  99,-5155 }, { 100,-5155 },
 { 101,-5155 }, { 102,-5155 }, { 103,-5155 }, { 104,-5155 }, { 105,1447 },
 { 106,-5155 }, { 107,-5155 }, { 108,-5155 }, { 109,-5155 }, { 110,-5155 },
 { 111,-5155 }, { 112,-5155 }, { 113,-5155 }, { 114,-5155 }, { 115,-5155 },
 { 116,-5155 }, { 117,-5155 }, { 118,-5155 }, { 119,-5155 }, { 120,-5155 },
 { 121,-5155 }, { 122,-5155 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-5339 },
 {  49,-5339 }, {  50,-5339 }, {  51,-5339 }, {  52,-5339 }, {  53,-5339 },
 {  54,-5339 }, {  55,-5339 }, {  56,-5339 }, {  57,-5339 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-5247 }, {  66,-5247 }, {  67,-5247 }, {  68,-5247 },
 {  69,-5247 }, {  70,-5247 }, {  71,-5247 }, {  72,-5247 }, {  73,-5247 },
 {  74,-5247 }, {  75,-5247 }, {  76,-5247 }, {  77,-5247 }, {  78,-5247 },
 {  79,-5247 }, {  80,-5247 }, {  81,-5247 }, {  82,-5247 }, {  83,-5247 },
 {  84,-5247 }, {  85,-5247 }, {  86,-5247 }, {  87,-5247 }, {  88,-5247 },

 {  89,-5247 }, {  90,-5247 }, {   0,  14 }, {   0,2809 }, {   0,   0 },
 {   0,   0 }, {  95,-5247 }, {   0,   0 }, {  97,-5247 }, {  98,-5247 },
 {  99,-5247 }, { 100,-5247 }, { 101,1447 }, { 102,-5247 }, { 103,-5247 },
 { 104,-5247 }, { 105,-5247 }, { 106,-5247 }, { 107,-5247 }, { 108,-5247 },
 { 109,-5247 }, { 110,-5247 }, { 111,-5247 }, { 112,-5247 }, { 113,-5247 },
 { 114,-5247 }, { 115,-5247 }, { 116,-5247 }, { 117,-5247 }, { 118,-5247 },
 { 119,-5247 }, { 120,-5247 }, { 121,-5247 }, { 122,-5247 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  48,-5431 }, {  49,-5431 }, {  50,-5431 }, {  51,-5431 },
 {  52,-5431 }, {  53,-5431 }, {  54,-5431 }, {  55,-5431 }, {  56,-5431 },
 {  57,-5431 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-5339 }, {  66,-5339 },
 {  67,-5339 }, {  68,-5339 }, {  69,-5339 }, {  70,-5339 }, {  71,-5339 },
 {  72,-5339 }, {  73,-5339 }, {  74,-5339 }, {  75,-5339 }, {  76,-5339 },
 {  77,-5339 }, {  78,-5339 }, {  79,-5339 }, {  80,-5339 }, {  81,-5339 },
 {  82,-5339 }, {  83,-5339 }, {  84,-5339 }, {  85,-5339 }, {  86,-5339 },
 {  87,-5339 }, {  88,-5339 }, {  89,-5339 }, {  90,-5339 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,-5339 }, {   0,   0 },

 {  97,-5339 }, {  98,-5339 }, {  99,-5339 }, { 100,-5339 }, { 101,-5339 },
 { 102,-5339 }, { 103,-5339 }, { 104,-5339 }, { 105,-5339 }, { 106,-5339 },
 { 107,-5339 }, { 108,-5339 }, { 109,-5339 }, { 110,-5339 }, { 111,-5339 },
 { 112,-5339 }, { 113,-5339 }, { 114,-5339 }, { 115,-5339 }, { 116,-5339 },
 { 117,-5339 }, { 118,-5339 }, { 119,-5339 }, { 120,-5339 }, { 121,-5339 },
 { 122,-5339 }, {   0,   3 }, {   0,2685 }, {   1,-4235 }, {   2,-4235 },
 {   3,-4235 }, {   4,-4235 }, {   5,-4235 }, {   6,-4235 }, {   7,-4235 },
 {   8,-4235 }, {   9,-4235 }, {  10,-4235 }, {  11,-4235 }, {  12,-4235 },
 {  13,-4235 }, {  14,-4235 }, {  15,-4235 }, {  16,-4235 }, {  17,-4235 },
 {  18,-4235 }, {  19,-4235 }, {  20,-4235 }, {  21,-4235 }, {  22,-4235 },

 {  23,-4235 }, {  24,-4235 }, {  25,-4235 }, {  26,-4235 }, {  27,-4235 },
 {  28,-4235 }, {  29,-4235 }, {  30,-4235 }, {  31,-4235 }, {  32,-4235 },
 {  33,-4235 }, {  34,-4235 }, {  35,-4235 }, {  36,-4235 }, {  37,-4235 },
 {  38,-4235 }, {  39,-4235 }, {  40,-4235 }, {  41,-4235 }, {   0,   0 },
 {  43,-4235 }, {  44,-4235 }, {  45,-4235 }, {  46,-4235 }, {  47,-4235 },
 {  48,-4235 }, {  49,-4235 }, {  50,-4235 }, {  51,-4235 }, {  52,-4235 },
 {  53,-4235 }, {  54,-4235 }, {  55,-4235 }, {  56,-4235 }, {  57,-4235 },
 {  58,-4235 }, {  59,-4235 }, {  60,-4235 }, {  61,-4235 }, {  62,-4235 },
 {  63,-4235 }, {  64,-4235 }, {  65,-4235 }, {  66,-4235 }, {  67,-4235 },
 {  68,-4235 }, {  69,-4235 }, {  70,-4235 }, {  71,-4235 }, {  72,-4235 },

 {  73,-4235 }, {  74,-4235 }, {  75,-4235 }, {  76,-4235 }, {  77,-4235 },
 {  78,-4235 }, {  79,-4235 }, {  80,-4235 }, {  81,-4235 }, {  82,-4235 },
 {  83,-4235 }, {  84,-4235 }, {  85,-4235 }, {  86,-4235 }, {  87,-4235 },
 {  88,-4235 }, {  89,-4235 }, {  90,-4235 }, {  91,-4235 }, {  92,-4235 },
 {  93,-4235 }, {  94,-4235 }, {  95,-4235 }, {  96,-4235 }, {  97,-4235 },
 {  98,-4235 }, {  99,-4235 }, { 100,-4235 }, { 101,-4235 }, { 102,-4235 },
 { 103,-4235 }, { 104,-4235 }, { 105,-4235 }, { 106,-4235 }, { 107,-4235 },
 { 108,-4235 }, { 109,-4235 }, { 110,-4235 }, { 111,-4235 }, { 112,-4235 },
 { 113,-4235 }, { 114,-4235 }, { 115,-4235 }, { 116,-4235 }, { 117,-4235 },
 { 118,-4235 }, { 119,-4235 }, { 120,-4235 }, { 121,-4235 }, { 122,-4235 },

 { 123,-4235 }, { 124,-4235 }, { 125,-4235 }, { 126,-4235 }, { 127,-4235 },
 { 128,-3977 }, { 129,-3977 }, { 130,-3977 }, { 131,-3977 }, { 132,-3977 },
 { 133,-3977 }, { 134,-3977 }, { 135,-3977 }, { 136,-3977 }, { 137,-3977 },
 { 138,-3977 }, { 139,-3977 }, { 140,-3977 }, { 141,-3977 }, { 142,-3977 },
 { 143,-3977 }, { 144,-3977 }, { 145,-3977 }, { 146,-3977 }, { 147,-3977 },
 { 148,-3977 }, { 149,-3977 }, { 150,-3977 }, { 151,-3977 }, { 152,-3977 },
 { 153,-3977 }, { 154,-3977 }, { 155,-3977 }, { 156,-3977 }, { 157,-3977 },
 { 158,-3977 }, { 159,-3977 }, { 160,-3977 }, { 161,-3977 }, { 162,-3977 },
 { 163,-3977 }, { 164,-3977 }, { 165,-3977 }, { 166,-3977 }, { 167,-3977 },
 { 168,-3977 }, { 169,-3977 }, { 170,-3977 }, { 171,-3977 }, { 172,-3977 },

 { 173,-3977 }, { 174,-3977 }, { 175,-3977 }, { 176,-3977 }, { 177,-3977 },
 { 178,-3977 }, { 179,-3977 }, { 180,-3977 }, { 181,-3977 }, { 182,-3977 },
 { 183,-3977 }, { 184,-3977 }, { 185,-3977 }, { 186,-3977 }, { 187,-3977 },
 { 188,-3977 }, { 189,-3977 }, { 190,-3977 }, { 191,-3977 }, { 192,-4235 },
 { 193,-4235 }, { 194,-4235 }, { 195,-4235 }, { 196,-4235 }, { 197,-4235 },
 { 198,-4235 }, { 199,-4235 }, { 200,-4235 }, { 201,-4235 }, { 202,-4235 },
 { 203,-4235 }, { 204,-4235 }, { 205,-4235 }, { 206,-4235 }, { 207,-4235 },
 { 208,-4235 }, { 209,-4235 }, { 210,-4235 }, { 211,-4235 }, { 212,-4235 },
 { 213,-4235 }, { 214,-4235 }, { 215,-4235 }, { 216,-4235 }, { 217,-4235 },
 { 218,-4235 }, { 219,-4235 }, { 220,-4235 }, { 221,-4235 }, { 222,-4235 },

 { 223,-4235 }, { 224,-4235 }, { 225,-4235 }, { 226,-4235 }, { 227,-4235 },
 { 228,-4235 }, { 229,-4235 }, { 230,-4235 }, { 231,-4235 }, { 232,-4235 },
 { 233,-4235 }, { 234,-4235 }, { 235,-4235 }, { 236,-4235 }, { 237,-4235 },
 { 238,-4235 }, { 239,-4235 }, { 240,-4235 }, { 241,-4235 }, { 242,-4235 },
 { 243,-4235 }, { 244,-4235 }, { 245,-4235 }, { 246,-4235 }, { 247,-4235 },
 { 248,-4235 }, { 249,-4235 }, { 250,-4235 }, { 251,-4235 }, { 252,-4235 },
 { 253,-4235 }, { 254,-4235 }, { 255,-4235 }, { 256,-4235 }, {   0,  10 },
 {   0,2427 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,   0 }, {  49,   0 },
 {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 },
 {  55,   0 }, {  56,   0 }, {  57,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {  65,   0 }, {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 },
 {  70,   0 }, {   0,   8 }, {   0,2355 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  10,-3275 }, {   0,   0 }, {   0,   0 },
 {  13,-3275 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 },
 { 100,   0 }, { 101,   0 }, { 102,   0 }, {   0,   0 }, {  32,-3275 },
 {  33,-3275 }, {   0,   0 }, {  35,-3275 }, {  36,-3275 }, {  37,-3275 },
 {  38,-3275 }, {  39,-3275 }, {  40,-3275 }, {  41,-3275 }, {  42,-3275 },

 {  43,-3275 }, {  44,-3275 }, {  45,-3275 }, {  46,-3275 }, {  47,-3275 },
 {  48,-3275 }, {  49,-3275 }, {  50,-3275 }, {  51,-3275 }, {  52,-3275 },
 {  53,-3275 }, {  54,-3275 }, {  55,-3275 }, {  56,-3275 }, {  57,-3275 },
 {  58,-3275 }, {  59,-3275 }, {  60,-3275 }, {  61,-3275 }, {  62,-3275 },
 {  63,-3275 }, {  64,-3275 }, {  65,-3275 }, {  66,-3275 }, {  67,-3275 },
 {  68,-3275 }, {  69,-3275 }, {  70,-3275 }, {  71,-3275 }, {  72,-3275 },
 {  73,-3275 }, {  74,-3275 }, {  75,-3275 }, {  76,-3275 }, {  77,-3275 },
 {  78,-3275 }, {  79,-3275 }, {  80,-3275 }, {  81,-3275 }, {  82,-3275 },
 {  83,-3275 }, {  84,-3275 }, {  85,-3275 }, {  86,-3275 }, {  87,-3275 },
 {  88,-3275 }, {  89,-3275 }, {  90,-3275 }, {  91,-3275 }, {   0,   0 },

 {  93,-3275 }, {  94,-3275 }, {  95,-3275 }, {  96,-3275 }, {  97,-3275 },
 {  98,-3275 }, {  99,-3275 }, { 100,-3275 }, { 101,-3275 }, { 102,-3275 },
 { 103,-3275 }, { 104,-3275 }, { 105,-3275 }, { 106,-3275 }, { 107,-3275 },
 { 108,-3275 }, { 109,-3275 }, { 110,-3275 }, { 111,-3275 }, { 112,-3275 },
 { 113,-3275 }, { 114,-3275 }, { 115,-3275 }, { 116,-3275 }, { 117,-3275 },
 { 118,-3275 }, { 119,-3275 }, { 120,-3275 }, { 121,-3275 }, { 122,-3275 },
 { 123,-3275 }, { 124,-3275 }, { 125,-3275 }, { 126,-3275 }, {   0,   0 },
 { 128,-2165 }, { 129,-2165 }, { 130,-2165 }, { 131,-2165 }, { 132,-2165 },
 { 133,-2165 }, { 134,-2165 }, { 135,-2165 }, { 136,-2165 }, { 137,-2165 },
 { 138,-2165 }, { 139,-2165 }, { 140,-2165 }, { 141,-2165 }, { 142,-2165 },

 { 143,-2165 }, { 144,-2165 }, { 145,-2165 }, { 146,-2165 }, { 147,-2165 },
 { 148,-2165 }, { 149,-2165 }, { 150,-2165 }, { 151,-2165 }, { 152,-2165 },
 { 153,-2165 }, { 154,-2165 }, { 155,-2165 }, { 156,-2165 }, { 157,-2165 },
 { 158,-2165 }, { 159,-2165 }, { 160,-2165 }, { 161,-2165 }, { 162,-2165 },
 { 163,-2165 }, { 164,-2165 }, { 165,-2165 }, { 166,-2165 }, { 167,-2165 },
 { 168,-2165 }, { 169,-2165 }, { 170,-2165 }, { 171,-2165 }, { 172,-2165 },
 { 173,-2165 }, { 174,-2165 }, { 175,-2165 }, { 176,-2165 }, { 177,-2165 },
 { 178,-2165 }, { 179,-2165 }, { 180,-2165 }, { 181,-2165 }, { 182,-2165 },
 { 183,-2165 }, { 184,-2165 }, { 185,-2165 }, { 186,-2165 }, { 187,-2165 },
 { 188,-2165 }, { 189,-2165 }, { 190,-2165 }, { 191,-2165 }, { 192,-3275 },

 { 193,-3275 }, { 194,-3018 }, { 195,-3018 }, { 196,-3018 }, { 197,-3018 },
 { 198,-3018 }, { 199,-3018 }, { 200,-3018 }, { 201,-3018 }, { 202,-3018 },
 { 203,-3018 }, { 204,-3018 }, { 205,-3018 }, { 206,-3018 }, { 207,-3018 },
 { 208,-3018 }, { 209,-3018 }, { 210,-3018 }, { 211,-3018 }, { 212,-3018 },
 { 213,-3018 }, { 214,-3018 }, { 215,-3018 }, { 216,-3018 }, { 217,-3018 },
 { 218,-3018 }, { 219,-3018 }, { 220,-3018 }, { 221,-3018 }, { 222,-3018 },
 { 223,-3018 }, { 224,-2761 }, { 225,-2761 }, { 226,-2761 }, { 227,-2761 },
 { 228,-2761 }, { 229,-2761 }, { 230,-2761 }, { 231,-2761 }, { 232,-2761 },
 { 233,-2761 }, { 234,-2761 }, { 235,-2761 }, { 236,-2761 }, { 237,-2761 },
 { 238,-2761 }, { 239,-2761 }, { 240,-2504 }, { 241,-2504 }, { 242,-2504 },

 { 243,-2504 }, { 244,-2504 }, { 245,-3275 }, { 246,-3275 }, { 247,-3275 },
 { 248,-3275 }, { 249,-3275 }, { 250,-3275 }, { 251,-3275 }, { 252,-3275 },
 { 253,-3275 }, { 254,-3275 }, { 255,-3275 }, {   0,  20 }, {   0,2098 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-6142 }, {  49,-6142 }, {  50,-6142 },
 {  51,-6142 }, {  52,-6142 }, {  53,-6142 }, {  54,-6142 }, {  55,-6142 },
 {  56,-6142 }, {  57,-6142 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6050 },
 {  66,-6050 }, {  67,-6050 }, {  68,-6050 }, {  69,-6050 }, {  70,-6050 },
 {  71,-6050 }, {  72,-6050 }, {  73,-6050 }, {  74,-6050 }, {  75,-6050 },
 {  76,-6050 }, {  77,-6050 }, {  78,-6050 }, {  79,-6050 }, {  80,-6050 },
 {  81,-6050 }, {  82,-6050 }, {  83,-6050 }, {  84,-6050 }, {  85,-6050 },

 {  86,-6050 }, {  87,-6050 }, {  88,-6050 }, {  89,-6050 }, {  90,-6050 },
 {   0,  40 }, {   0,2006 }, {   0,   0 }, {   0,   0 }, {  95,-6050 },
 {   0,   0 }, {  97,-6050 }, {  98,-6050 }, {  99,-6050 }, { 100,-6050 },
 { 101,-6050 }, { 102,-6050 }, { 103,-6050 }, { 104,-6050 }, { 105,-6050 },
 { 106,-6050 }, { 107,-6050 }, { 108,-6050 }, { 109,-6050 }, { 110,-6050 },
 { 111,-6050 }, { 112,-6050 }, { 113,-6050 }, { 114,-6050 }, { 115,-6050 },
 { 116,-6050 }, { 117,-6050 }, { 118,-6050 }, { 119,-6050 }, { 120,-6050 },
 { 121,-6050 }, { 122,-6050 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6234 },
 {  49,-6234 }, {  50,-6234 }, {  51,-6234 }, {  52,-6234 }, {  53,-6234 },
 {  54,-6234 }, {  55,-6234 }, {  56,-6234 }, {  57,-6234 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-6142 }, {  66,-6142 }, {  67,-6142 }, {  68,-6142 },
 {  69,-6142 }, {  70,-6142 }, {  71,-6142 }, {  72,-6142 }, {  73,-6142 },
 {  74,-6142 }, {  75,-6142 }, {  76,-6142 }, {  77,-6142 }, {  78,-6142 },
 {  79,-6142 }, {  80,-6142 }, {  81,-6142 }, {  82,-6142 }, {  83,-6142 },
 {  84,-6142 }, {  85,-6142 }, {  86,-6142 }, {  87,-6142 }, {  88,-6142 },
 {  89,-6142 }, {  90,-6142 }, {   0,  15 }, {   0,1914 }, {   0,   0 },

 {   0,   0 }, {  95,-6142 }, {   0,   0 }, {  97,-6142 }, {  98,-6142 },
 {  99,-6142 }, { 100,-6142 }, { 101,-6142 }, { 102,-6142 }, { 103,-6142 },
 { 104,-6142 }, { 105,-6142 }, { 106,-6142 }, { 107,-6142 }, { 108,-6142 },
 { 109, 644 }, { 110,-6142 }, { 111,-6142 }, { 112,-6142 }, { 113,-6142 },
 { 114,-6142 }, { 115,-6142 }, { 116,-6142 }, { 117,-6142 }, { 118,-6142 },
 { 119,-6142 }, { 120,-6142 }, { 121,-6142 }, { 122,-6142 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-6326 }, {  49,-6326 }, {  50,-6326 }, {  51,-6326 },

 {  52,-6326 }, {  53,-6326 }, {  54,-6326 }, {  55,-6326 }, {  56,-6326 },
 {  57,-6326 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6234 }, {  66,-6234 },
 {  67,-6234 }, {  68,-6234 }, {  69,-6234 }, {  70,-6234 }, {  71,-6234 },
 {  72,-6234 }, {  73,-6234 }, {  74,-6234 }, {  75,-6234 }, {  76,-6234 },
 {  77,-6234 }, {  78,-6234 }, {  79,-6234 }, {  80,-6234 }, {  81,-6234 },
 {  82,-6234 }, {  83,-6234 }, {  84,-6234 }, {  85,-6234 }, {  86,-6234 },
 {  87,-6234 }, {  88,-6234 }, {  89,-6234 }, {  90,-6234 }, {   0,  40 },
 {   0,1822 }, {   0,   0 }, {   0,   0 }, {  95,-6234 }, {   0,   0 },
 {  97,-6234 }, {  98,-6234 }, {  99,-6234 }, { 100,-6234 }, { 101,-6234 },

 { 102,-6234 }, { 103,-6234 }, { 104,-6234 }, { 105,-6234 }, { 106,-6234 },
 { 107,-6234 }, { 108,-6234 }, { 109,-6234 }, { 110,-6234 }, { 111,-6234 },
 { 112,-6234 }, { 113,-6234 }, { 114,-6234 }, { 115,-6234 }, { 116,-6234 },
 { 117,-6234 }, { 118,-6234 }, { 119,-6234 }, { 120,-6234 }, { 121,-6234 },
 { 122,-6234 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6418 }, {  49,-6418 },
 {  50,-6418 }, {  51,-6418 }, {  52,-6418 }, {  53,-6418 }, {  54,-6418 },
 {  55,-6418 }, {  56,-6418 }, {  57,-6418 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-6326 }, {  66,-6326 }, {  67,-6326 }, {  68,-6326 }, {  69,-6326 },
 {  70,-6326 }, {  71,-6326 }, {  72,-6326 }, {  73,-6326 }, {  74,-6326 },
 {  75,-6326 }, {  76,-6326 }, {  77,-6326 }, {  78,-6326 }, {  79,-6326 },
 {  80,-6326 }, {  81,-6326 }, {  82,-6326 }, {  83,-6326 }, {  84,-6326 },
 {  85,-6326 }, {  86,-6326 }, {  87,-6326 }, {  88,-6326 }, {  89,-6326 },
 {  90,-6326 }, {   0,  40 }, {   0,1730 }, {   0,   0 }, {   0,   0 },
 {  95,-6326 }, {   0,   0 }, {  97,-6326 }, {  98,-6326 }, {  99,-6326 },
 { 100,-6326 }, { 101,-6326 }, { 102,-6326 }, { 103,-6326 }, { 104,-6326 },
 { 105,-6326 }, { 106,-6326 }, { 107,-6326 }, { 108,-6326 }, { 109,-6326 },

 { 110, 552 }, { 111,-6326 }, { 112,-6326 }, { 113,-6326 }, { 114, 644 },
 { 115,-6326 }, { 116,-6326 }, { 117,-6326 }, { 118,-6326 }, { 119,-6326 },
 { 120,-6326 }, { 121,-6326 }, { 122,-6326 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-6510 }, {  49,-6510 }, {  50,-6510 }, {  51,-6510 }, {  52,-6510 },
 {  53,-6510 }, {  54,-6510 }, {  55,-6510 }, {  56,-6510 }, {  57,-6510 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-6418 }, {  66,-6418 }, {  67,-6418 },

 {  68,-6418 }, {  69,-6418 }, {  70,-6418 }, {  71,-6418 }, {  72,-6418 },
 {  73,-6418 }, {  74,-6418 }, {  75,-6418 }, {  76,-6418 }, {  77,-6418 },
 {  78,-6418 }, {  79,-6418 }, {  80,-6418 }, {  81,-6418 }, {  82,-6418 },
 {  83,-6418 }, {  84,-6418 }, {  85,-6418 }, {  86,-6418 }, {  87,-6418 },
 {  88,-6418 }, {  89,-6418 }, {  90,-6418 }, {   0,  40 }, {   0,1638 },
 {   0,   0 }, {   0,   0 }, {  95,-6418 }, {   0,   0 }, {  97,-6418 },
 {  98,-6418 }, {  99,-6418 }, { 100,-6418 }, { 101,-6418 }, { 102,-6418 },
 { 103,-6418 }, { 104,-6418 }, { 105,-6418 }, { 106,-6418 }, { 107,-6418 },
 { 108,-6418 }, { 109,-6418 }, { 110,-6418 }, { 111,-6418 }, { 112,-6418 },
 { 113,-6418 }, { 114,-6418 }, { 115,-6418 }, { 116, 644 }, { 117,-6418 },

 { 118,-6418 }, { 119,-6418 }, { 120,-6418 }, { 121,-6418 }, { 122,-6418 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-6602 }, {  49,-6602 }, {  50,-6602 },
 {  51,-6602 }, {  52,-6602 }, {  53,-6602 }, {  54,-6602 }, {  55,-6602 },
 {  56,-6602 }, {  57,-6602 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6510 },
 {  66,-6510 }, {  67,-6510 }, {  68,-6510 }, {  69,-6510 }, {  70,-6510 },
 {  71,-6510 }, {  72,-6510 }, {  73,-6510 }, {  74,-6510 }, {  75,-6510 },

 {  76,-6510 }, {  77,-6510 }, {  78,-6510 }, {  79,-6510 }, {  80,-6510 },
 {  81,-6510 }, {  82,-6510 }, {  83,-6510 }, {  84,-6510 }, {  85,-6510 },
 {  86,-6510 }, {  87,-6510 }, {  88,-6510 }, {  89,-6510 }, {  90,-6510 },
 {   0,  40 }, {   0,1546 }, {   0,   0 }, {   0,   0 }, {  95,-6510 },
 {   0,   0 }, {  97,-6510 }, {  98,-6510 }, {  99,-6510 }, { 100,-6510 },
 { 101,-6510 }, { 102,-6510 }, { 103,-6510 }, { 104,-6510 }, { 105,-6510 },
 { 106,-6510 }, { 107,-6510 }, { 108,-6510 }, { 109,-6510 }, { 110,-6510 },
 { 111,-6510 }, { 112,-6510 }, { 113,-6510 }, { 114, 644 }, { 115,-6510 },
 { 116,-6510 }, { 117,-6510 }, { 118,-6510 }, { 119,-6510 }, { 120,-6510 },
 { 121,-6510 }, { 122,-6510 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6694 },
 {  49,-6694 }, {  50,-6694 }, {  51,-6694 }, {  52,-6694 }, {  53,-6694 },
 {  54,-6694 }, {  55,-6694 }, {  56,-6694 }, {  57,-6694 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-6602 }, {  66,-6602 }, {  67,-6602 }, {  68,-6602 },
 {  69,-6602 }, {  70,-6602 }, {  71,-6602 }, {  72,-6602 }, {  73,-6602 },
 {  74,-6602 }, {  75,-6602 }, {  76,-6602 }, {  77,-6602 }, {  78,-6602 },
 {  79,-6602 }, {  80,-6602 }, {  81,-6602 }, {  82,-6602 }, {  83,-6602 },

 {  84,-6602 }, {  85,-6602 }, {  86,-6602 }, {  87,-6602 }, {  88,-6602 },
 {  89,-6602 }, {  90,-6602 }, {   0,  16 }, {   0,1454 }, {   0,   0 },
 {   0,   0 }, {  95,-6602 }, {   0,   0 }, {  97,-6602 }, {  98,-6602 },
 {  99,-6602 }, { 100,-6602 }, { 101,-6602 }, { 102,-6602 }, { 103,-6602 },
 { 104,-6602 }, { 105,-6602 }, { 106,-6602 }, { 107,-6602 }, { 108,-6602 },
 { 109,-6602 }, { 110, 644 }, { 111,-6602 }, { 112,-6602 }, { 113,-6602 },
 { 114,-6602 }, { 115,-6602 }, { 116,-6602 }, { 117,-6602 }, { 118,-6602 },
 { 119,-6602 }, { 120,-6602 }, { 121,-6602 }, { 122,-6602 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-6786 }, {  49,-6786 }, {  50,-6786 }, {  51,-6786 },
 {  52,-6786 }, {  53,-6786 }, {  54,-6786 }, {  55,-6786 }, {  56,-6786 },
 {  57,-6786 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6694 }, {  66,-6694 },
 {  67,-6694 }, {  68,-6694 }, {  69,-6694 }, {  70,-6694 }, {  71,-6694 },
 {  72,-6694 }, {  73,-6694 }, {  74,-6694 }, {  75,-6694 }, {  76,-6694 },
 {  77,-6694 }, {  78,-6694 }, {  79,-6694 }, {  80,-6694 }, {  81,-6694 },
 {  82,-6694 }, {  83,-6694 }, {  84,-6694 }, {  85,-6694 }, {  86,-6694 },
 {  87,-6694 }, {  88,-6694 }, {  89,-6694 }, {  90,-6694 }, {   0,  40 },

 {   0,1362 }, {   0,   0 }, {   0,   0 }, {  95,-6694 }, {   0,   0 },
 {  97,-6694 }, {  98,-6694 }, {  99,-6694 }, { 100,-6694 }, { 101,-6694 },
 { 102,-6694 }, { 103,-6694 }, { 104,-6694 }, { 105,-6694 }, { 106,-6694 },
 { 107,-6694 }, { 108,-6694 }, { 109,-6694 }, { 110,-6694 }, { 111,-6694 },
 { 112,-6694 }, { 113,-6694 }, { 114,-6694 }, { 115,-6694 }, { 116,-6694 },
 { 117,-6694 }, { 118,-6694 }, { 119,-6694 }, { 120,-6694 }, { 121,-6694 },
 { 122,-6694 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6878 }, {  49,-6878 },

 {  50,-6878 }, {  51,-6878 }, {  52,-6878 }, {  53,-6878 }, {  54,-6878 },
 {  55,-6878 }, {  56,-6878 }, {  57,-6878 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-6786 }, {  66,-6786 }, {  67,-6786 }, {  68,-6786 }, {  69,-6786 },
 {  70,-6786 }, {  71,-6786 }, {  72,-6786 }, {  73,-6786 }, {  74,-6786 },
 {  75,-6786 }, {  76,-6786 }, {  77,-6786 }, {  78,-6786 }, {  79,-6786 },
 {  80,-6786 }, {  81,-6786 }, {  82,-6786 }, {  83,-6786 }, {  84,-6786 },
 {  85,-6786 }, {  86,-6786 }, {  87,-6786 }, {  88,-6786 }, {  89,-6786 },
 {  90,-6786 }, {   0,  40 }, {   0,1270 }, {   0,   0 }, {   0,   0 },
 {  95,-6786 }, {   0,   0 }, {  97, 552 }, {  98,-6786 }, {  99,-6786 },

 { 100,-6786 }, { 101,-6786 }, { 102,-6786 }, { 103,-6786 }, { 104,-6786 },
 { 105,-6786 }, { 106,-6786 }, { 107,-6786 }, { 108,-6786 }, { 109,-6786 },
 { 110,-6786 }, { 111,-6786 }, { 112,-6786 }, { 113,-6786 }, { 114,-6786 },
 { 115,-6786 }, { 116,-6786 }, { 117,-6786 }, { 118,-6786 }, { 119,-6786 },
 { 120,-6786 }, { 121,-6786 }, { 122,-6786 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-6970 }, {  49,-6970 }, {  50,-6970 }, {  51,-6970 }, {  52,-6970 },
 {  53,-6970 }, {  54,-6970 }, {  55,-6970 }, {  56,-6970 }, {  57,-6970 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-6878 }, {  66,-6878 }, {  67,-6878 },
 {  68,-6878 }, {  69,-6878 }, {  70,-6878 }, {  71,-6878 }, {  72,-6878 },
 {  73,-6878 }, {  74,-6878 }, {  75,-6878 }, {  76,-6878 }, {  77,-6878 },
 {  78,-6878 }, {  79,-6878 }, {  80,-6878 }, {  81,-6878 }, {  82,-6878 },
 {  83,-6878 }, {  84,-6878 }, {  85,-6878 }, {  86,-6878 }, {  87,-6878 },
 {  88,-6878 }, {  89,-6878 }, {  90,-6878 }, {   0,  40 }, {   0,1178 },
 {   0,   0 }, {   0,   0 }, {  95,-6878 }, {   0,   0 }, {  97,-6878 },
 {  98,-6878 }, {  99,-6878 }, { 100, 552 }, { 101,-6878 }, { 102,-6878 },
 { 103,-6878 }, { 104,-6878 }, { 105,-6878 }, { 106,-6878 }, { 107,-6878 },

 { 108,-6878 }, { 109,-6878 }, { 110,-6878 }, { 111,-6878 }, { 112,-6878 },
 { 113,-6878 }, { 114,-6878 }, { 115,-6878 }, { 116,-6878 }, { 117,-6878 },
 { 118,-6878 }, { 119,-6878 }, { 120,-6878 }, { 121,-6878 }, { 122,-6878 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-7062 }, {  49,-7062 }, {  50,-7062 },
 {  51,-7062 }, {  52,-7062 }, {  53,-7062 }, {  54,-7062 }, {  55,-7062 },
 {  56,-7062 }, {  57,-7062 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6970 },

 {  66,-6970 }, {  67,-6970 }, {  68,-6970 }, {  69,-6970 }, {  70,-6970 },
 {  71,-6970 }, {  72,-6970 }, {  73,-6970 }, {  74,-6970 }, {  75,-6970 },
 {  76,-6970 }, {  77,-6970 }, {  78,-6970 }, {  79,-6970 }, {  80,-6970 },
 {  81,-6970 }, {  82,-6970 }, {  83,-6970 }, {  84,-6970 }, {  85,-6970 },
 {  86,-6970 }, {  87,-6970 }, {  88,-6970 }, {  89,-6970 }, {  90,-6970 },
 {   0,  22 }, {   0,1086 }, {   0,   0 }, {   0,   0 }, {  95,-6970 },
 {   0,   0 }, {  97,-6970 }, {  98,-6970 }, {  99,-6970 }, { 100,-6970 },
 { 101,-6970 }, { 102,-6970 }, { 103,-6970 }, { 104,-6970 }, { 105,-6970 },
 { 106,-6970 }, { 107,-6970 }, { 108,-6970 }, { 109,-6970 }, { 110, 552 },
 { 111,-6970 }, { 112,-6970 }, { 113,-6970 }, { 114,-6970 }, { 115,-6970 },

 { 116,-6970 }, { 117,-6970 }, { 118,-6970 }, { 119,-6970 }, { 120,-6970 },
 { 121,-6970 }, { 122,-6970 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-7154 },
 {  49,-7154 }, {  50,-7154 }, {  51,-7154 }, {  52,-7154 }, {  53,-7154 },
 {  54,-7154 }, {  55,-7154 }, {  56,-7154 }, {  57,-7154 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-7062 }, {  66,-7062 }, {  67,-7062 }, {  68,-7062 },
 {  69,-7062 }, {  70,-7062 }, {  71,-7062 }, {  72,-7062 }, {  73,-7062 },

 {  74,-7062 }, {  75,-7062 }, {  76,-7062 }, {  77,-7062 }, {  78,-7062 },
 {  79,-7062 }, {  80,-7062 }, {  81,-7062 }, {  82,-7062 }, {  83,-7062 },
 {  84,-7062 }, {  85,-7062 }, {  86,-7062 }, {  87,-7062 }, {  88,-7062 },
 {  89,-7062 }, {  90,-7062 }, {   0,  40 }, {   0, 994 }, {   0,   0 },
 {   0,   0 }, {  95,-7062 }, {   0,   0 }, {  97,-7062 }, {  98,-7062 },
 {  99,-7062 }, { 100,-7062 }, { 101,-7062 }, { 102,-7062 }, { 103,-7062 },
 { 104,-7062 }, { 105,-7062 }, { 106,-7062 }, { 107,-7062 }, { 108,-7062 },
 { 109,-7062 }, { 110,-7062 }, { 111,-7062 }, { 112,-7062 }, { 113,-7062 },
 { 114,-7062 }, { 115,-7062 }, { 116,-7062 }, { 117,-7062 }, { 118,-7062 },
 { 119,-7062 }, { 120,-7062 }, { 121,-7062 }, { 122,-7062 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-7246 }, {  49,-7246 }, {  50,-7246 }, {  51,-7246 },
 {  52,-7246 }, {  53,-7246 }, {  54,-7246 }, {  55,-7246 }, {  56,-7246 },
 {  57,-7246 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-7154 }, {  66,-7154 },
 {  67,-7154 }, {  68,-7154 }, {  69,-7154 }, {  70,-7154 }, {  71,-7154 },
 {  72,-7154 }, {  73,-7154 }, {  74,-7154 }, {  75,-7154 }, {  76,-7154 },
 {  77,-7154 }, {  78,-7154 }, {  79,-7154 }, {  80,-7154 }, {  81,-7154 },

 {  82,-7154 }, {  83,-7154 }, {  84,-7154 }, {  85,-7154 }, {  86,-7154 },
 {  87,-7154 }, {  88,-7154 }, {  89,-7154 }, {  90,-7154 }, {   0,  40 },
 {   0, 902 }, {   0,   0 }, {   0,   0 }, {  95,-7154 }, {   0,   0 },
 {  97,-7154 }, {  98,-7154 }, {  99,-7154 }, { 100,-7154 }, { 101,-7154 },
 { 102,-7154 }, { 103,-7154 }, { 104,-7154 }, { 105,-7154 }, { 106,-7154 },
 { 107,-7154 }, { 108,-7154 }, { 109,-7154 }, { 110, 460 }, { 111,-7154 },
 { 112,-7154 }, { 113,-7154 }, { 114,-7154 }, { 115,-7154 }, { 116,-7154 },
 { 117,-7154 }, { 118,-7154 }, { 119,-7154 }, { 120,-7154 }, { 121,-7154 },
 { 122,-7154 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-7338 }, {  49,-7338 },
 {  50,-7338 }, {  51,-7338 }, {  52,-7338 }, {  53,-7338 }, {  54,-7338 },
 {  55,-7338 }, {  56,-7338 }, {  57,-7338 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-7246 }, {  66,-7246 }, {  67,-7246 }, {  68,-7246 }, {  69,-7246 },
 {  70,-7246 }, {  71,-7246 }, {  72,-7246 }, {  73,-7246 }, {  74,-7246 },
 {  75,-7246 }, {  76,-7246 }, {  77,-7246 }, {  78,-7246 }, {  79,-7246 },
 {  80,-7246 }, {  81,-7246 }, {  82,-7246 }, {  83,-7246 }, {  84,-7246 },
 {  85,-7246 }, {  86,-7246 }, {  87,-7246 }, {  88,-7246 }, {  89,-7246 },

 {  90,-7246 }, {   0,  40 }, {   0, 810 }, {   0,   0 }, {   0,   0 },
 {  95,-7246 }, {   0,   0 }, {  97,-7246 }, {  98,-7246 }, {  99,-7246 },
 { 100,-7246 }, { 101,-7246 }, { 102,-7246 }, { 103, 460 }, { 104,-7246 },
 { 105,-7246 }, { 106,-7246 }, { 107,-7246 }, { 108,-7246 }, { 109,-7246 },
 { 110,-7246 }, { 111,-7246 }, { 112,-7246 }, { 113,-7246 }, { 114,-7246 },
 { 115,-7246 }, { 116,-7246 }, { 117,-7246 }, { 118,-7246 }, { 119,-7246 },
 { 120,-7246 }, { 121,-7246 }, { 122,-7246 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {  48,-7430 }, {  49,-7430 }, {  50,-7430 }, {  51,-7430 }, {  52,-7430 },
 {  53,-7430 }, {  54,-7430 }, {  55,-7430 }, {  56,-7430 }, {  57,-7430 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-7338 }, {  66,-7338 }, {  67,-7338 },
 {  68,-7338 }, {  69,-7338 }, {  70,-7338 }, {  71,-7338 }, {  72,-7338 },
 {  73,-7338 }, {  74,-7338 }, {  75,-7338 }, {  76,-7338 }, {  77,-7338 },
 {  78,-7338 }, {  79,-7338 }, {  80,-7338 }, {  81,-7338 }, {  82,-7338 },
 {  83,-7338 }, {  84,-7338 }, {  85,-7338 }, {  86,-7338 }, {  87,-7338 },
 {  88,-7338 }, {  89,-7338 }, {  90,-7338 }, {   0,  40 }, {   0, 718 },
 {   0,   0 }, {   0,   0 }, {  95,-7338 }, {   0,   0 }, {  97,-7338 },

 {  98,-7338 }, {  99,-7338 }, { 100,-7338 }, { 101,-7338 }, { 102,-7338 },
 { 103,-7338 }, { 104,-7338 }, { 105,-7338 }, { 106,-7338 }, { 107,-7338 },
 { 108, 460 }, { 109,-7338 }, { 110,-7338 }, { 111,-7338 }, { 112,-7338 },
 { 113,-7338 }, { 114,-7338 }, { 115,-7338 }, { 116,-7338 }, { 117,-7338 },
 { 118,-7338 }, { 119,-7338 }, { 120,-7338 }, { 121,-7338 }, { 122,-7338 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-7522 }, {  49,-7522 }, {  50,-7522 },
 {  51,-7522 }, {  52,-7522 }, {  53,-7522 }, {  54,-7522 }, {  55,-7522 },

 {  56,-7522 }, {  57,-7522 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-7430 },
 {  66,-7430 }, {  67,-7430 }, {  68,-7430 }, {  69,-7430 }, {  70,-7430 },
 {  71,-7430 }, {  72,-7430 }, {  73,-7430 }, {  74,-7430 }, {  75,-7430 },
 {  76,-7430 }, {  77,-7430 }, {  78,-7430 }, {  79,-7430 }, {  80,-7430 },
 {  81,-7430 }, {  82,-7430 }, {  83,-7430 }, {  84,-7430 }, {  85,-7430 },
 {  86,-7430 }, {  87,-7430 }, {  88,-7430 }, {  89,-7430 }, {  90,-7430 },
 {   0,  18 }, {   0, 626 }, {   0,   0 }, {   0,   0 }, {  95,-7430 },
 {   0,   0 }, {  97,-7430 }, {  98,-7430 }, {  99,-7430 }, { 100,-7430 },
 { 101,-7430 }, { 102,-7430 }, { 103,-7430 }, { 104,-7430 }, { 105,-7430 },

 { 106,-7430 }, { 107,-7430 }, { 108,-7430 }, { 109,-7430 }, { 110,-7430 },
 { 111,-7430 }, { 112,-7430 }, { 113,-7430 }, { 114,-7430 }, { 115, 460 },
 { 116,-7430 }, { 117,-7430 }, { 118,-7430 }, { 119,-7430 }, { 120,-7430 },
 { 121,-7430 }, { 122,-7430 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-7614 },
 {  49,-7614 }, {  50,-7614 }, {  51,-7614 }, {  52,-7614 }, {  53,-7614 },
 {  54,-7614 }, {  55,-7614 }, {  56,-7614 }, {  57,-7614 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  65,-7522 }, {  66,-7522 }, {  67,-7522 }, {  68,-7522 },
 {  69,-7522 }, {  70,-7522 }, {  71,-7522 }, {  72,-7522 }, {  73,-7522 },
 {  74,-7522 }, {  75,-7522 }, {  76,-7522 }, {  77,-7522 }, {  78,-7522 },
 {  79,-7522 }, {  80,-7522 }, {  81,-7522 }, {  82,-7522 }, {  83,-7522 },
 {  84,-7522 }, {  85,-7522 }, {  86,-7522 }, {  87,-7522 }, {  88,-7522 },
 {  89,-7522 }, {  90,-7522 }, {   0,  19 }, {   0, 534 }, {   0,   0 },
 {   0,   0 }, {  95,-7522 }, {   0,   0 }, {  97,-7522 }, {  98,-7522 },
 {  99,-7522 }, { 100,-7522 }, { 101,-7522 }, { 102,-7522 }, { 103,-7522 },
 { 104,-7522 }, { 105,-7522 }, { 106,-7522 }, { 107,-7522 }, { 108,-7522 },
 { 109,-7522 }, { 110,-7522 }, { 111,-7522 }, { 112,-7522 }, { 113,-7522 },

 { 114,-7522 }, { 115,-7522 }, { 116,-7522 }, { 117,-7522 }, { 118,-7522 },
 { 119,-7522 }, { 120,-7522 }, { 121,-7522 }, { 122,-7522 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-7706 }, {  49,-7706 }, {  50,-7706 }, {  51,-7706 },
 {  52,-7706 }, {  53,-7706 }, {  54,-7706 }, {  55,-7706 }, {  56,-7706 },
 {  57,-7706 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-7614 }, {  66,-7614 },
 {  67,-7614 }, {  68,-7614 }, {  69,-7614 }, {  70,-7614 }, {  71,-7614 },

 {  72,-7614 }, {  73,-7614 }, {  74,-7614 }, {  75,-7614 }, {  76,-7614 },
 {  77,-7614 }, {  78,-7614 }, {  79,-7614 }, {  80,-7614 }, {  81,-7614 },
 {  82,-7614 }, {  83,-7614 }, {  84,-7614 }, {  85,-7614 }, {  86,-7614 },
 {  87,-7614 }, {  88,-7614 }, {  89,-7614 }, {  90,-7614 }, {   0,  23 },
 {   0, 442 }, {   0,   0 }, {   0,   0 }, {  95,-7614 }, {   0,   0 },
 {  97,-7614 }, {  98,-7614 }, {  99,-7614 }, { 100,-7614 }, { 101,-7614 },
 { 102,-7614 }, { 103,-7614 }, { 104,-7614 }, { 105,-7614 }, { 106,-7614 },
 { 107,-7614 }, { 108,-7614 }, { 109,-7614 }, { 110,-7614 }, { 111,-7614 },
 { 112,-7614 }, { 113,-7614 }, { 114,-7614 }, { 115,-7614 }, { 116,-7614 },
 { 117,-7614 }, { 118,-7614 }, { 119,-7614 }, { 120,-7614 }, { 121,-7614 },

 { 122,-7614 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-7798 }, {  49,-7798 },
 {  50,-7798 }, {  51,-7798 }, {  52,-7798 }, {  53,-7798 }, {  54,-7798 },
 {  55,-7798 }, {  56,-7798 }, {  57,-7798 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-7706 }, {  66,-7706 }, {  67,-7706 }, {  68,-7706 }, {  69,-7706 },
 {  70,-7706 }, {  71,-7706 }, {  72,-7706 }, {  73,-7706 }, {  74,-7706 },
 {  75,-7706 }, {  76,-7706 }, {  77,-7706 }, {  78,-7706 }, {  79,-7706 },

 {  80,-7706 }, {  81,-7706 }, {  82,-7706 }, {  83,-7706 }, {  84,-7706 },
 {  85,-7706 }, {  86,-7706 }, {  87,-7706 }, {  88,-7706 }, {  89,-7706 },
 {  90,-7706 }, {   0,  24 }, {   0, 350 }, {   0,   0 }, {   0,   0 },
 {  95,-7706 }, {   0,   0 }, {  97,-7706 }, {  98,-7706 }, {  99,-7706 },
 { 100,-7706 }, { 101,-7706 }, { 102,-7706 }, { 103,-7706 }, { 104,-7706 },
 { 105,-7706 }, { 106,-7706 }, { 107,-7706 }, { 108,-7706 }, { 109,-7706 },
 { 110,-7706 }, { 111,-7706 }, { 112,-7706 }, { 113,-7706 }, { 114,-7706 },
 { 115,-7706 }, { 116,-7706 }, { 117,-7706 }, { 118,-7706 }, { 119,-7706 },
 { 120,-7706 }, { 121,-7706 }, { 122,-7706 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-7890 }, {  49,-7890 }, {  50,-7890 }, {  51,-7890 }, {  52,-7890 },
 {  53,-7890 }, {  54,-7890 }, {  55,-7890 }, {  56,-7890 }, {  57,-7890 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-7798 }, {  66,-7798 }, {  67,-7798 },
 {  68,-7798 }, {  69,-7798 }, {  70,-7798 }, {  71,-7798 }, {  72,-7798 },
 {  73,-7798 }, {  74,-7798 }, {  75,-7798 }, {  76,-7798 }, {  77,-7798 },
 {  78,-7798 }, {  79,-7798 }, {  80,-7798 }, {  81,-7798 }, {  82,-7798 },
 {  83,-7798 }, {  84,-7798 }, {  85,-7798 }, {  86,-7798 }, {  87,-7798 },

 {  88,-7798 }, {  89,-7798 }, {  90,-7798 }, {   0,  17 }, {   0, 258 },
 {   0,   0 }, {   0,   0 }, {  95,-7798 }, {   0,   0 }, {  97,-7798 },
 {  98,-7798 }, {  99,-7798 }, { 100,-7798 }, { 101,-7798 }, { 102,-7798 },
 { 103,-7798 }, { 104,-7798 }, { 105,-7798 }, { 106,-7798 }, { 107,-7798 },
 { 108,-7798 }, { 109,-7798 }, { 110,-7798 }, { 111,-7798 }, { 112,-7798 },
 { 113,-7798 }, { 114,-7798 }, { 115,-7798 }, { 116,-7798 }, { 117,-7798 },
 { 118,-7798 }, { 119,-7798 }, { 120,-7798 }, { 121,-7798 }, { 122,-7798 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  48,-7982 }, {  49,-7982 }, {  50,-7982 },
 {  51,-7982 }, {  52,-7982 }, {  53,-7982 }, {  54,-7982 }, {  55,-7982 },
 {  56,-7982 }, {  57,-7982 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-7890 },
 {  66,-7890 }, {  67,-7890 }, {  68,-7890 }, {  69,-7890 }, {  70,-7890 },
 {  71,-7890 }, {  72,-7890 }, {  73,-7890 }, {  74,-7890 }, {  75,-7890 },
 {  76,-7890 }, {  77,-7890 }, {  78,-7890 }, {  79,-7890 }, {  80,-7890 },
 {  81,-7890 }, {  82,-7890 }, {  83,-7890 }, {  84,-7890 }, {  85,-7890 },
 {  86,-7890 }, {  87,-7890 }, {  88,-7890 }, {  89,-7890 }, {  90,-7890 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,-7890 },

 {   0,   0 }, {  97,-7890 }, {  98,-7890 }, {  99,-7890 }, { 100,-7890 },
 { 101,-7890 }, { 102,-7890 }, { 103,-7890 }, { 104,-7890 }, { 105,-7890 },
 { 106,-7890 }, { 107,-7890 }, { 108,-7890 }, { 109,-7890 }, { 110,-7890 },
 { 111,-7890 }, { 112,-7890 }, { 113,-7890 }, { 114,-7890 }, { 115,-7890 },
 { 116,-7890 }, { 117,-7890 }, { 118,-7890 }, { 119,-7890 }, { 120,-7890 },
 { 121,-7890 }, { 122,-7890 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, { 257,  44 }, {   1,   0 },    };

static const struct yy_trans_info *yy_start_state_list[11] =
    {
    &yy_transition[1],
    &yy_transition[3],
    &yy_transition[261],
    &yy_transition[519],
    &yy_transition[777],
    &yy_transition[1035],
    &yy_transition[1293],
    &yy_transition[1551],
    &yy_transition[1809],
    &yy_transition[2067],
    &yy_transition[2325],

    } ;

/* Table of booleans, true if rule could match eol. */
static const flex_int32_t yy_rule_can_match_eol[44] =
    {   0,
1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0,     };

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "beng.l"
/*=============================================================================
    Beng(c) by Alexander A Pototskiy
==============================================================================*/
/* suppresses inclusion of the non-ANSI header file unistd.h */
#define YY_NO_UNISTD_H 1
/* %option debug */
/* fast scanner table representation */
/* multithreaded, appends the scanner param to yy functions */
/* input not interactive */
/* use flex built-in support for line numbers */
/* adds an argument yylval to yylex() */
/* adds an argument yylloc to yylex() */
/* do not use yywrap() */
/* adds prefix to scanner functions */
/* to avoid C4005 warning */

#line 50 "beng.l"

#include "parser.hpp"

using namespace sonia;
using namespace sonia::lang;
using namespace sonia::lang::beng;

#include "beng.tab.hpp"
#define YY_DECL int beng_langlex(YYSTYPE * yylval_param, YYLTYPE * yylloc_param, parser_context & ctx, void* yyscanner)
using YYSTYPE = beng_lang::parser::semantic_type;
using YYLTYPE = beng_lang::parser::location_type;

#define ECHO do { \
	ctx.append_error(("%1%:%2%.%3%-%4%.%5%: error: %6%"_fmt \
		% ctx.get_resource() \
		% yylloc->begin.line % yylloc->begin.column % yylloc->end.line % yylloc->end.column % string_view{ yytext, (size_t) yyleng }).str()); } while (0)


// beng_lang::parser::error(*yylloc, string_view{ yytext, (size_t) yyleng });  while (0)

//sonia::lang::lex::undefined_lexem(yytext, (size_t) yyleng ); } while (0)

#define YY_USER_ACTION update_location(*yylloc, yytext);

#ifdef BOOST_WINDOWS
#	include <io.h>	// read();
#	define read _read
#	define fileno _fileno
#endif

#define text_view string_view{yytext, (size_t)yyleng}
#define location lex::resource_location{yylloc->begin.line, yylloc->begin.column, ctx.get_resource()}
#define variant_emplace(...) \
	try { \
		auto value = (__VA_ARGS__); \
		yylval->template emplace<decltype(value)>(std::move(value)); \
	} catch (std::exception const& ex) { \
		ctx.append_error(("%1%(%2%,%3%-%4%,%5%): error: %6%"_fmt \
			% ctx.get_resource() \
			% yylloc->begin.line % yylloc->begin.column % yylloc->end.line % yylloc->end.column % ex.what()).str()); \
	}

#line 4066 "beng.yy.cpp"
/*
NEW						"new"
FOR						"for"
VOID					"void"
AUTO                    "auto"
CONST_                  "const"
USING                   "using"
THROW                   "throw"
DELETE_                 "delete"
SIZEOF                  "sizeof"

PRIVATE                 "private"
TEMPLATE                "template"
NAMESPACE               "namespace"
*/
/* exclude '->', '=', '<', '//', '/*'  */
/*

ARROWAST                "->*"
LSHIFTSSIGN             "<<="
RSHIFTSSIGN             ">>="

FARROW					"~>"
PTAST                   ".*"

DBLPLUS                 "++"
DBLMINUS                "--"
LEFTSHIFT               "<<"
RIGHTSHIFT              ">>"
LE                      "<="
GE                      ">="
EQ                      "=="
NE                      "!="

AND                     "&&"
ADDASSIGN               "+="
SUBASSIGN               "-="
MULASSIGN               "*="
DIVASSIGN               "/="
MODASSIGN               "%="
BITANDASSIGN            "&="
BITORASSIGN             "|="
BITXORASSIGN            "^="

PLUS                    "+"
MINUS                   "-"
ASTERISK                "*"
SLASH                   "/"
PERCENT                 "%"
AMPERSAND               "&"
BITOR                   "|"
EXCLPT                  "!"
TILDA                   "~"
EXCL                    "^"
OPEN_BROKET             "<"
CLOSE_BROKET            ">"

DOLLAR                  "$"
QMARK                   "?"
HASHTAG					"#"
*/

#line 4129 "beng.yy.cpp"

#define INITIAL 0
#define COMMENT 1
#define LINE_COMMENT 2
#define STR 3
#define USER_LITERAL 4

#define YY_EXTRA_TYPE sonia::lang::lex::scanner_data*

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    YYSTYPE * yylval_r;

    YYLTYPE * yylloc_r;

    }; /* end struct yyguts_t */

static int yy_init_globals ( yyscan_t yyscanner );

    /* This must go here because YYSTYPE and YYLTYPE are included
     * from bison output in section 1.*/
    #    define yylval yyg->yylval_r
    
    #    define yylloc yyg->yylloc_r
    
int yylex_init (yyscan_t* scanner);

int yylex_init_extra ( YY_EXTRA_TYPE user_defined, yyscan_t* scanner);

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( yyscan_t yyscanner );

int yyget_debug ( yyscan_t yyscanner );

void yyset_debug ( int debug_flag , yyscan_t yyscanner );

YY_EXTRA_TYPE yyget_extra ( yyscan_t yyscanner );

void yyset_extra ( YY_EXTRA_TYPE user_defined , yyscan_t yyscanner );

FILE *yyget_in ( yyscan_t yyscanner );

void yyset_in  ( FILE * _in_str , yyscan_t yyscanner );

FILE *yyget_out ( yyscan_t yyscanner );

void yyset_out  ( FILE * _out_str , yyscan_t yyscanner );

			int yyget_leng ( yyscan_t yyscanner );

char *yyget_text ( yyscan_t yyscanner );

int yyget_lineno ( yyscan_t yyscanner );

void yyset_lineno ( int _line_number , yyscan_t yyscanner );

int yyget_column  ( yyscan_t yyscanner );

void yyset_column ( int _column_no , yyscan_t yyscanner );

YYSTYPE * yyget_lval ( yyscan_t yyscanner );

void yyset_lval ( YYSTYPE * yylval_param , yyscan_t yyscanner );

       YYLTYPE *yyget_lloc ( yyscan_t yyscanner );
    
        void yyset_lloc ( YYLTYPE * yylloc_param , yyscan_t yyscanner );
    
/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( yyscan_t yyscanner );
#else
extern int yywrap ( yyscan_t yyscanner );
#endif
#endif

#ifndef YY_NO_UNPUT
    
    static void yyunput ( int c, char *buf_ptr  , yyscan_t yyscanner);
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int , yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * , yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput ( yyscan_t yyscanner );
#else
static int input ( yyscan_t yyscanner );
#endif

#endif

    static void yy_push_state ( int _new_state , yyscan_t yyscanner);
    
    static void yy_pop_state ( yyscan_t yyscanner );
    
    static int yy_top_state ( yyscan_t yyscanner );
    
/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	errno=0; \
	while ( (result = (int) read( fileno(yyin), buf, (yy_size_t) max_size )) < 0 ) \
	{ \
		if( errno != EINTR) \
		{ \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
			break; \
		} \
		errno=0; \
		clearerr(yyin); \
	}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex \
               (YYSTYPE * yylval_param, YYLTYPE * yylloc_param , yyscan_t yyscanner);

#define YY_DECL int yylex \
               (YYSTYPE * yylval_param, YYLTYPE * yylloc_param , yyscan_t yyscanner)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yylval = yylval_param;

    yylloc = yylloc_param;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner);
		}

		yy_load_buffer_state( yyscanner );
		}

	{
#line 220 "beng.l"


#line 4400 "beng.yy.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start_state_list[yyg->yy_start];
yy_match:
		{
		const struct yy_trans_info *yy_trans_info;

		YY_CHAR yy_c;

		for ( yy_c = YY_SC_TO_UI(*yy_cp);
		      (yy_trans_info = &yy_current_state[yy_c])->
		yy_verify == yy_c;
		      yy_c = YY_SC_TO_UI(*++yy_cp) )
			{
			yy_current_state += yy_trans_info->yy_nxt;

			if ( yy_current_state[-1].yy_nxt )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			}
		}

yy_find_action:
		yy_act = yy_current_state[-1].yy_nxt;

		YY_DO_BEFORE_ACTION;

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = 0; yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					
    do{ yylineno++;
        yycolumn=0;
    }while(0)
;
			}

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yyg->yy_hold_char;
			yy_cp = yyg->yy_last_accepting_cpos + 1;
			yy_current_state = yyg->yy_last_accepting_state;
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 222 "beng.l"
/* ignore whitespaces */
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 224 "beng.l"
{
	yy_push_state(COMMENT, yyscanner);
	yyextra->loc_stack.emplace_back(yylloc->begin.line, yylloc->begin.column);
}
	YY_BREAK

case 3:
/* rule 3 can match eol */
YY_RULE_SETUP
#line 229 "beng.l"

	YY_BREAK
case 4:
YY_RULE_SETUP
#line 230 "beng.l"
{
		yy_pop_state(yyscanner);
		yyextra->loc_stack.pop_back();
	}
	YY_BREAK

case 5:
YY_RULE_SETUP
#line 236 "beng.l"
{ yy_push_state(LINE_COMMENT, yyscanner); }
	YY_BREAK
case 6:
/* rule 6 can match eol */
YY_RULE_SETUP
#line 237 "beng.l"
{ yy_pop_state(yyscanner); }
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 239 "beng.l"
{ yyextra->str_buff_begin = yytext + 1; yy_push_state(STR, yyscanner); }
	YY_BREAK

case 8:
/* rule 8 can match eol */
YY_RULE_SETUP
#line 241 "beng.l"

	YY_BREAK
case 9:
YY_RULE_SETUP
#line 242 "beng.l"

	YY_BREAK
case 10:
YY_RULE_SETUP
#line 243 "beng.l"

	YY_BREAK
case 11:
YY_RULE_SETUP
#line 244 "beng.l"
{
		variant_emplace(string_view{yyextra->str_buff_begin, yytext});
		yy_pop_state(yyscanner);
		return (beng_lang::parser::token::STRING);
	}
	YY_BREAK


case 12:
YY_RULE_SETUP
#line 252 "beng.l"
{ return (beng_lang::parser::token::FN); }
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 253 "beng.l"
{ return (beng_lang::parser::token::LET); }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 254 "beng.l"
{ return (beng_lang::parser::token::VAR); }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 255 "beng.l"
{ return (beng_lang::parser::token::ENUM); }
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 256 "beng.l"
{ return (beng_lang::parser::token::TYPE); }
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 257 "beng.l"
{ return (beng_lang::parser::token::EXTENDS); }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 258 "beng.l"
{ return (beng_lang::parser::token::EXTERN); }
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 259 "beng.l"
{ return (beng_lang::parser::token::RETURN); }
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 261 "beng.l"
{ return (beng_lang::parser::token::BOOL); }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 262 "beng.l"
{ return (beng_lang::parser::token::INT); }
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 263 "beng.l"
{ return (beng_lang::parser::token::FLOAT); }
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 264 "beng.l"
{ return (beng_lang::parser::token::STRING_WORD); }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 265 "beng.l"
{ return (beng_lang::parser::token::DECIMAL_WORD); }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 267 "beng.l"
{ return (beng_lang::parser::token::OPEN_BRACE); }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 268 "beng.l"
{ return (beng_lang::parser::token::CLOSE_BRACE); }
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 269 "beng.l"
{ return (beng_lang::parser::token::OPEN_PARENTHESIS); }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 270 "beng.l"
{ return (beng_lang::parser::token::CLOSE_PARENTHESIS);	}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 271 "beng.l"
{ return (beng_lang::parser::token::END_STATEMENT); }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 272 "beng.l"
{ return (beng_lang::parser::token::COMMA);	}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 273 "beng.l"
{ return (beng_lang::parser::token::COLON); }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 274 "beng.l"
{ return (beng_lang::parser::token::OPEN_SQUARE_BRACKET); }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 275 "beng.l"
{ return (beng_lang::parser::token::CLOSE_SQUARE_BRACKET); }
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 276 "beng.l"
{ return (beng_lang::parser::token::ASSIGN); }
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 277 "beng.l"
{ return (beng_lang::parser::token::POINT);	}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 278 "beng.l"
{ return (beng_lang::parser::token::UNDERSCORE); }
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 279 "beng.l"
{ return (beng_lang::parser::token::DBLCOLON); }
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 280 "beng.l"
{ return (beng_lang::parser::token::LOGIC_OR); }
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 281 "beng.l"
{ return (beng_lang::parser::token::ARROW); }
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 283 "beng.l"
{
		variant_emplace(annotated_string_view{text_view, location});
		return (beng_lang::parser::token::IDENTIFIER);
	}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 287 "beng.l"
{
		variant_emplace(ctx.make_int(text_view));
		return (beng_lang::parser::token::INTEGER);
	}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 291 "beng.l"
{
		variant_emplace(ctx.make_numeric(text_view));
		return (beng_lang::parser::token::DECIMAL);
	}
	YY_BREAK
/*
	{FOR} { return (beng_lang::parser::token::FOR); }
	{VOID} { return (beng_lang::parser::token::VOID_); }
	{AUTO} { return (beng_lang::parser::token::AUTO); }
	{CONST_} { return (beng_lang::parser::token::CONST_); }
	{DELETE_} { return (beng_lang::parser::token::DELETE_); }
	{USING} { return (beng_lang::parser::token::USING); }
	{SIZEOF} { return (beng_lang::parser::token::SIZEOF); }
    
	
	{PRIVATE} { return (beng_lang::parser::token::PRIVATE); }
	{TEMPLATE} { return (beng_lang::parser::token::TEMPLATE); }
	{NAMESPACE} { return (beng_lang::parser::token::NAMESPACE); }


	
	{OPERATOR_TERM0}|{OPERATOR_TERM1}|{OPERATOR_TERM2}|{OPERATOR_TERM3} {
		variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
		return (beng_lang::parser::token::OPERATOR_TERM);
	}

	
	
    
	
    
	



	{OPEN_BROKET}			{ return (beng_lang::parser::token::OPEN_BROKET); }
	{CLOSE_BROKET}			{ return (beng_lang::parser::token::CLOSE_BROKET); }
	
	
	
	{QMARK}                 { return (beng_lang::parser::token::QMARK); }
	{HASHTAG}               { return (beng_lang::parser::token::HASHTAG); }
	*/

case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(COMMENT):
case YY_STATE_EOF(LINE_COMMENT):
case YY_STATE_EOF(STR):
case YY_STATE_EOF(USER_LITERAL):
#line 335 "beng.l"
return (beng_lang::parser::token::END);
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 337 "beng.l"
ECHO;
	YY_BREAK
#line 4754 "beng.yy.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yyg->yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( yywrap( yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = yyg->yytext_ptr;
	int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2) , yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  , yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_current_state = yy_start_state_list[yyg->yy_start];

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
		yy_current_state += yy_current_state[(*yy_cp ? YY_SC_TO_UI(*yy_cp) : 256)].yy_nxt;
		if ( yy_current_state[-1].yy_nxt )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
{
	int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
	char *yy_cp = yyg->yy_c_buf_p;

	int yy_c = 256;
	const struct yy_trans_info *yy_trans_info;

	yy_trans_info = &yy_current_state[(unsigned int) yy_c];
	yy_current_state += yy_trans_info->yy_nxt;
	yy_is_jam = (yy_trans_info->yy_verify != yy_c);

	if ( ! yy_is_jam )
		{
		if ( yy_current_state[-1].yy_nxt )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		}

	(void)yyg;
	return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

    static void yyunput (int c, char * yy_bp , yyscan_t yyscanner)
{
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yy_cp = yyg->yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yyg->yy_hold_char;

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = yyg->yy_n_chars + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			yyg->yy_n_chars = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

    if ( c == '\n' ){
        --yylineno;
    }

	yyg->yytext_ptr = yy_bp;
	yyg->yy_hold_char = *yy_cp;
	yyg->yy_c_buf_p = yy_cp;
}

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr);
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin , yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap( yyscanner ) )
						return 0;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

	if ( c == '\n' )
		
    do{ yylineno++;
        yycolumn=0;
    }while(0)
;

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyrestart  (FILE * input_file , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner);
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file , yyscanner);
	yy_load_buffer_state( yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state( yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

static void yy_load_buffer_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state ) , yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2) , yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file , yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * @param yyscanner The scanner object.
 */
    void yy_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf , yyscanner );

	yyfree( (void *) b , yyscanner );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_flush_buffer( b , yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
    void yy_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state( yyscanner );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack(yyscanner);

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state( yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
void yypop_buffer_state (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER , yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state( yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void yyensure_buffer_stack (yyscan_t yyscanner)
{
	yy_size_t num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyrealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state ) , yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b , yyscanner );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (const char * yystr , yyscan_t yyscanner)
{
    
	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);
}

/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) yyalloc( n , yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n , yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

    static void yy_push_state (int  _new_state , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( yyg->yy_start_stack_ptr >= yyg->yy_start_stack_depth )
		{
		yy_size_t new_size;

		yyg->yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = (yy_size_t) yyg->yy_start_stack_depth * sizeof( int );

		if ( ! yyg->yy_start_stack )
			yyg->yy_start_stack = (int *) yyalloc( new_size , yyscanner );

		else
			yyg->yy_start_stack = (int *) yyrealloc(
					(void *) yyg->yy_start_stack, new_size , yyscanner );

		if ( ! yyg->yy_start_stack )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	yyg->yy_start_stack[yyg->yy_start_stack_ptr++] = YY_START;

	BEGIN(_new_state);
}

    static void yy_pop_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( --yyg->yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yyg->yy_start_stack[yyg->yy_start_stack_ptr]);
}

    static int yy_top_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	return yyg->yy_start_stack[yyg->yy_start_stack_ptr - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (const char* msg , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE yyget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int yyget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int yyget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int yyget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *yyget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void yyset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/** Set the current line number.
 * @param _line_number line number
 * @param yyscanner The scanner object.
 */
void yyset_lineno (int  _line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "yyset_lineno called with no buffer" );
    
    yylineno = _line_number;
}

/** Set the current column.
 * @param _column_no column number
 * @param yyscanner The scanner object.
 */
void yyset_column (int  _column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "yyset_column called with no buffer" );
    
    yycolumn = _column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  _in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = _in_str ;
}

void yyset_out (FILE *  _out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = _out_str ;
}

int yyget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void yyset_debug (int  _bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = _bdebug ;
}

/* Accessor methods for yylval and yylloc */

YYSTYPE * yyget_lval  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylval;
}

void yyset_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylval = yylval_param;
}

YYLTYPE *yyget_lloc  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylloc;
}
    
void yyset_lloc (YYLTYPE *  yylloc_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylloc = yylloc_param;
}
    
/* User-visible API */

/* yylex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */
int yylex_init(yyscan_t* ptr_yy_globals)
{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* yylex_init_extra has the same functionality as yylex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to yyalloc in
 * the yyextra field.
 */
int yylex_init_extra( YY_EXTRA_TYPE yy_user_defined, yyscan_t* ptr_yy_globals )
{
    struct yyguts_t dummy_yyguts;

    yyset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    yyset_extra (yy_user_defined, *ptr_yy_globals);

    return yy_init_globals ( *ptr_yy_globals );
}

static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = NULL;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = NULL;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = NULL;
    yyout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}

/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer( YY_CURRENT_BUFFER , yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	yyfree(yyg->yy_buffer_stack , yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        yyfree( yyg->yy_start_stack , yyscanner );
        yyg->yy_start_stack = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

    /* Destroy the main struct (reentrant only). */
    yyfree ( yyscanner , yyscanner );
    yyscanner = NULL;
    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s , yyscan_t yyscanner)
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 337 "beng.l"


/*
	<USER_LITERAL>{
	{UNDERSCORE} { yy_pop_state(yyscanner); return (beng_lang::parser::token::UNDERSCORE); }
	{DBLCOLON} { yy_pop_state(yyscanner); return (beng_lang::parser::token::DBLCOLON); }
	.|[\xd\xa] { yy_pop_state(yyscanner); yyless(0); }
}

DECIMAL_LITERAL			{DECIMAL}"_"



<INITIAL>{DECIMAL} {
	variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
	yy_push_state(NUMERIC, yyscanner);
	return (beng_lang::parser::token::DECIMAL);
}

{DECIMAL} {
    variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
	return (beng_lang::parser::token::DECIMAL);
}

{DECIMAL_LITERAL} {
	variant_emplace(yylval, string_view{yytext, (size_t) yyleng - 1});
	return (beng_lang::parser::token::DECIMAL_LITERAL);
}

<NUMERIC>{
	{UNDERSCORE} { return (beng_lang::parser::token::UNDERSCORE); }
	{DBLCOLON} { return (beng_lang::parser::token::DBLCOLON); }
	{IDENTIFIER} {
		variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
		return (beng_lang::parser::token::IDENTIFIER);
	}

	.|[\xd\xa] { yy_pop_state(yyscanner); --yytext; }
}
------------------------
	//->*
	{ARROWAST}              { return (beng_lang::parser::token::ARROWAST); }

	// ~>
	{FARROW}                { return (beng_lang::parser::token::FARROW); }

	// .*
	{PTAST}                 { return (beng_lang::parser::token::PTAST); }

	// ++
	{DBLPLUS}               { return (beng_lang::parser::token::DBLPLUS); }

	// --
	{DBLMINUS}              { return (beng_lang::parser::token::DBLMINUS); }

	// <<
	{LEFTSHIFT}             { return (beng_lang::parser::token::LEFTSHIFT); }

	// >>
    {RIGHTSHIFT}            { return (beng_lang::parser::token::RIGHTSHIFT); }

	// <=
	{LE}                    { return (beng_lang::parser::token::LE); }

	// >=
	{GE}                    { return (beng_lang::parser::token::GE); }

	// ==
	{EQ}                    { return (beng_lang::parser::token::EQ); }

	// !=
    {NE}                    { return (beng_lang::parser::token::NE); }

	

	// &&
    {AND}                   { return (beng_lang::parser::token::AND); }

	// +=
	{ADDASSIGN}             { return (beng_lang::parser::token::ADDASSIGN); }

	// -=
    {SUBASSIGN}             { return (beng_lang::parser::token::SUBASSIGN); }

	// *=
    {MULASSIGN}             { return (beng_lang::parser::token::MULASSIGN); }

	// /=
    {DIVASSIGN}             { return (beng_lang::parser::token::DIVASSIGN); }

	// %=
    {MODASSIGN}             { return (beng_lang::parser::token::MODASSIGN); }

	// <<=
	{LSHIFTSSIGN}           { return (beng_lang::parser::token::LSHIFTSSIGN); }

	// >>=
    {RSHIFTSSIGN}           { return (beng_lang::parser::token::RSHIFTSSIGN); }

	// &=
	{BITANDASSIGN}          { return (beng_lang::parser::token::BITANDASSIGN); }

	// |=
    {BITORASSIGN}           { return (beng_lang::parser::token::BITORASSIGN); }

	// ^=
    {BITXORASSIGN}          { return (beng_lang::parser::token::BITXORASSIGN); }

	// +
	{PLUS}					{ return (beng_lang::parser::token::PLUS); }

	// -
	{MINUS}					{ return (beng_lang::parser::token::MINUS);	}

	// *
	{ASTERISK}				{ return (beng_lang::parser::token::ASTERISK);	}

	// /
	{SLASH}				    { return (beng_lang::parser::token::SLASH);	}

	// %
    {PERCENT}               { return (beng_lang::parser::token::PERCENT);	}

	// &
	{AMPERSAND}				{ return (beng_lang::parser::token::AMPERSAND);	}

	// |
    {BITOR}				    { return (beng_lang::parser::token::BITOR);	}

	// ^
	{EXCL}					{ return (beng_lang::parser::token::EXCL);	}

	// !
	{EXCLPT}                { return (beng_lang::parser::token::EXCLPT); }
	
	// ~
	{TILDA}					{ return (beng_lang::parser::token::TILDA);	}

	// .
	

	// $
	{DOLLAR}                { return (beng_lang::parser::token::DOLLAR); }

	// >
	{CLOSE_BROKET}			{ return (beng_lang::parser::token::CLOSE_BROKET); }
*/
