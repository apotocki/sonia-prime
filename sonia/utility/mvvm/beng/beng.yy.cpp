#line 1 "beng.yy.cpp"
#include "sonia/config.hpp"
#include <stdint.h>

#line 5 "beng.yy.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

#ifdef yy_create_buffer
#define beng_lang_create_buffer_ALREADY_DEFINED
#else
#define yy_create_buffer beng_lang_create_buffer
#endif

#ifdef yy_delete_buffer
#define beng_lang_delete_buffer_ALREADY_DEFINED
#else
#define yy_delete_buffer beng_lang_delete_buffer
#endif

#ifdef yy_scan_buffer
#define beng_lang_scan_buffer_ALREADY_DEFINED
#else
#define yy_scan_buffer beng_lang_scan_buffer
#endif

#ifdef yy_scan_string
#define beng_lang_scan_string_ALREADY_DEFINED
#else
#define yy_scan_string beng_lang_scan_string
#endif

#ifdef yy_scan_bytes
#define beng_lang_scan_bytes_ALREADY_DEFINED
#else
#define yy_scan_bytes beng_lang_scan_bytes
#endif

#ifdef yy_init_buffer
#define beng_lang_init_buffer_ALREADY_DEFINED
#else
#define yy_init_buffer beng_lang_init_buffer
#endif

#ifdef yy_flush_buffer
#define beng_lang_flush_buffer_ALREADY_DEFINED
#else
#define yy_flush_buffer beng_lang_flush_buffer
#endif

#ifdef yy_load_buffer_state
#define beng_lang_load_buffer_state_ALREADY_DEFINED
#else
#define yy_load_buffer_state beng_lang_load_buffer_state
#endif

#ifdef yy_switch_to_buffer
#define beng_lang_switch_to_buffer_ALREADY_DEFINED
#else
#define yy_switch_to_buffer beng_lang_switch_to_buffer
#endif

#ifdef yypush_buffer_state
#define beng_langpush_buffer_state_ALREADY_DEFINED
#else
#define yypush_buffer_state beng_langpush_buffer_state
#endif

#ifdef yypop_buffer_state
#define beng_langpop_buffer_state_ALREADY_DEFINED
#else
#define yypop_buffer_state beng_langpop_buffer_state
#endif

#ifdef yyensure_buffer_stack
#define beng_langensure_buffer_stack_ALREADY_DEFINED
#else
#define yyensure_buffer_stack beng_langensure_buffer_stack
#endif

#ifdef yylex
#define beng_langlex_ALREADY_DEFINED
#else
#define yylex beng_langlex
#endif

#ifdef yyrestart
#define beng_langrestart_ALREADY_DEFINED
#else
#define yyrestart beng_langrestart
#endif

#ifdef yylex_init
#define beng_langlex_init_ALREADY_DEFINED
#else
#define yylex_init beng_langlex_init
#endif

#ifdef yylex_init_extra
#define beng_langlex_init_extra_ALREADY_DEFINED
#else
#define yylex_init_extra beng_langlex_init_extra
#endif

#ifdef yylex_destroy
#define beng_langlex_destroy_ALREADY_DEFINED
#else
#define yylex_destroy beng_langlex_destroy
#endif

#ifdef yyget_debug
#define beng_langget_debug_ALREADY_DEFINED
#else
#define yyget_debug beng_langget_debug
#endif

#ifdef yyset_debug
#define beng_langset_debug_ALREADY_DEFINED
#else
#define yyset_debug beng_langset_debug
#endif

#ifdef yyget_extra
#define beng_langget_extra_ALREADY_DEFINED
#else
#define yyget_extra beng_langget_extra
#endif

#ifdef yyset_extra
#define beng_langset_extra_ALREADY_DEFINED
#else
#define yyset_extra beng_langset_extra
#endif

#ifdef yyget_in
#define beng_langget_in_ALREADY_DEFINED
#else
#define yyget_in beng_langget_in
#endif

#ifdef yyset_in
#define beng_langset_in_ALREADY_DEFINED
#else
#define yyset_in beng_langset_in
#endif

#ifdef yyget_out
#define beng_langget_out_ALREADY_DEFINED
#else
#define yyget_out beng_langget_out
#endif

#ifdef yyset_out
#define beng_langset_out_ALREADY_DEFINED
#else
#define yyset_out beng_langset_out
#endif

#ifdef yyget_leng
#define beng_langget_leng_ALREADY_DEFINED
#else
#define yyget_leng beng_langget_leng
#endif

#ifdef yyget_text
#define beng_langget_text_ALREADY_DEFINED
#else
#define yyget_text beng_langget_text
#endif

#ifdef yyget_lineno
#define beng_langget_lineno_ALREADY_DEFINED
#else
#define yyget_lineno beng_langget_lineno
#endif

#ifdef yyset_lineno
#define beng_langset_lineno_ALREADY_DEFINED
#else
#define yyset_lineno beng_langset_lineno
#endif

#ifdef yyget_column
#define beng_langget_column_ALREADY_DEFINED
#else
#define yyget_column beng_langget_column
#endif

#ifdef yyset_column
#define beng_langset_column_ALREADY_DEFINED
#else
#define yyset_column beng_langset_column
#endif

#ifdef yywrap
#define beng_langwrap_ALREADY_DEFINED
#else
#define yywrap beng_langwrap
#endif

#ifdef yyget_lval
#define beng_langget_lval_ALREADY_DEFINED
#else
#define yyget_lval beng_langget_lval
#endif

#ifdef yyset_lval
#define beng_langset_lval_ALREADY_DEFINED
#else
#define yyset_lval beng_langset_lval
#endif

#ifdef yyget_lloc
#define beng_langget_lloc_ALREADY_DEFINED
#else
#define yyget_lloc beng_langget_lloc
#endif

#ifdef yyset_lloc
#define beng_langset_lloc_ALREADY_DEFINED
#else
#define yyset_lloc beng_langset_lloc
#endif

#ifdef yyalloc
#define beng_langalloc_ALREADY_DEFINED
#else
#define yyalloc beng_langalloc
#endif

#ifdef yyrealloc
#define beng_langrealloc_ALREADY_DEFINED
#else
#define yyrealloc beng_langrealloc
#endif

#ifdef yyfree
#define beng_langfree_ALREADY_DEFINED
#else
#define yyfree beng_langfree
#endif

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>

/* end standard C headers. */

/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* begin standard C++ headers. */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))

/* An opaque pointer. */
#ifndef YY_TYPEDEF_YY_SCANNER_T
#define YY_TYPEDEF_YY_SCANNER_T
typedef void* yyscan_t;
#endif

/* For convenience, these vars (plus the bison vars far below)
   are macros in the reentrant scanner. */
#define yyin yyg->yyin_r
#define yyout yyg->yyout_r
#define yyextra yyg->yyextra_r
#define yyleng yyg->yyleng_r
#define yytext yyg->yytext_r
#define yylineno (YY_CURRENT_BUFFER_LVALUE->yy_bs_lineno)
#define yycolumn (YY_CURRENT_BUFFER_LVALUE->yy_bs_column)
#define yy_flex_debug yyg->yy_flex_debug_r

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yyg->yy_start = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yyg->yy_start - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin , yyscanner )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex.
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    #define YY_LINENO_REWIND_TO(dst) \
            do {\
                const char *p;\
                for ( p = yy_cp-1; p >= (dst); --p)\
                    if ( *p == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = yyg->yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yyg->yy_c_buf_p = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, yyg->yytext_ptr , yyscanner )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( yyg->yy_buffer_stack \
                          ? yyg->yy_buffer_stack[yyg->yy_buffer_stack_top] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE yyg->yy_buffer_stack[yyg->yy_buffer_stack_top]

void yyrestart ( FILE *input_file , yyscan_t yyscanner );
void yy_switch_to_buffer ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
YY_BUFFER_STATE yy_create_buffer ( FILE *file, int size , yyscan_t yyscanner );
void yy_delete_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void yy_flush_buffer ( YY_BUFFER_STATE b , yyscan_t yyscanner );
void yypush_buffer_state ( YY_BUFFER_STATE new_buffer , yyscan_t yyscanner );
void yypop_buffer_state ( yyscan_t yyscanner );

static void yyensure_buffer_stack ( yyscan_t yyscanner );
static void yy_load_buffer_state ( yyscan_t yyscanner );
static void yy_init_buffer ( YY_BUFFER_STATE b, FILE *file , yyscan_t yyscanner );
#define YY_FLUSH_BUFFER yy_flush_buffer( YY_CURRENT_BUFFER , yyscanner)

YY_BUFFER_STATE yy_scan_buffer ( char *base, yy_size_t size , yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_string ( const char *yy_str , yyscan_t yyscanner );
YY_BUFFER_STATE yy_scan_bytes ( const char *bytes, int len , yyscan_t yyscanner );

void *yyalloc ( yy_size_t , yyscan_t yyscanner );
void *yyrealloc ( void *, yy_size_t , yyscan_t yyscanner );
void yyfree ( void * , yyscan_t yyscanner );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (yyscanner); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* Begin user sect3 */

#define beng_langwrap(yyscanner) (/*CONSTCOND*/1)
#define YY_SKIP_YYWRAP
typedef flex_uint8_t YY_CHAR;

typedef const struct yy_trans_info *yy_state_type;

#define yytext_ptr yytext_r

static yy_state_type yy_get_previous_state ( yyscan_t yyscanner );
static yy_state_type yy_try_NUL_trans ( yy_state_type current_state  , yyscan_t yyscanner);
static int yy_get_next_buffer ( yyscan_t yyscanner );
static void yynoreturn yy_fatal_error ( const char* msg , yyscan_t yyscanner );

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yyg->yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yyg->yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yyg->yy_c_buf_p = yy_cp;
#define YY_NUM_RULES 41
#define YY_END_OF_BUFFER 42
struct yy_trans_info
	{
	flex_int16_t yy_verify;
	flex_int16_t yy_nxt;
	};
static const struct yy_trans_info yy_transition[14371] =
    {
 {   0,   0 }, {   0,14115 }, {   0,   0 }, {   0,14113 }, {   1,2580 },
 {   2,2580 }, {   3,2580 }, {   4,2580 }, {   5,2580 }, {   6,2580 },
 {   7,2580 }, {   8,2580 }, {   9,2582 }, {  10,2582 }, {  11,2580 },
 {  12,2580 }, {  13,2582 }, {  14,2580 }, {  15,2580 }, {  16,2580 },
 {  17,2580 }, {  18,2580 }, {  19,2580 }, {  20,2580 }, {  21,2580 },
 {  22,2580 }, {  23,2580 }, {  24,2580 }, {  25,2580 }, {  26,2580 },
 {  27,2580 }, {  28,2580 }, {  29,2580 }, {  30,2580 }, {  31,2580 },
 {  32,2582 }, {  33,2580 }, {  34,2584 }, {  35,2580 }, {  36,2580 },
 {  37,2580 }, {  38,2580 }, {  39,2580 }, {  40,2586 }, {  41,2588 },
 {  42,2580 }, {  43,2580 }, {  44,2590 }, {  45,2594 }, {  46,2597 },

 {  47,2613 }, {  48,2616 }, {  49,2616 }, {  50,2616 }, {  51,2616 },
 {  52,2616 }, {  53,2616 }, {  54,2616 }, {  55,2616 }, {  56,2616 },
 {  57,2616 }, {  58,2618 }, {  59,2620 }, {  60,2580 }, {  61,2622 },
 {  62,2580 }, {  63,2580 }, {  64,2580 }, {  65,2658 }, {  66,2658 },
 {  67,2658 }, {  68,2658 }, {  69,2658 }, {  70,2658 }, {  71,2658 },
 {  72,2658 }, {  73,2658 }, {  74,2658 }, {  75,2658 }, {  76,2658 },
 {  77,2658 }, {  78,2658 }, {  79,2658 }, {  80,2658 }, {  81,2658 },
 {  82,2658 }, {  83,2658 }, {  84,2658 }, {  85,2658 }, {  86,2658 },
 {  87,2658 }, {  88,2658 }, {  89,2658 }, {  90,2658 }, {  91,2624 },
 {  92,2580 }, {  93,2626 }, {  94,2580 }, {  95,2750 }, {  96,2580 },

 {  97,2658 }, {  98,2842 }, {  99,2658 }, { 100,2658 }, { 101,2934 },
 { 102,3026 }, { 103,2658 }, { 104,2658 }, { 105,3118 }, { 106,2658 },
 { 107,2658 }, { 108,3210 }, { 109,2658 }, { 110,2658 }, { 111,2658 },
 { 112,2658 }, { 113,2658 }, { 114,2658 }, { 115,3302 }, { 116,3394 },
 { 117,2658 }, { 118,3486 }, { 119,2658 }, { 120,2658 }, { 121,2658 },
 { 122,2658 }, { 123,2628 }, { 124,2630 }, { 125,2632 }, { 126,2580 },
 { 127,2580 }, { 128,2580 }, { 129,2580 }, { 130,2580 }, { 131,2580 },
 { 132,2580 }, { 133,2580 }, { 134,2580 }, { 135,2580 }, { 136,2580 },
 { 137,2580 }, { 138,2580 }, { 139,2580 }, { 140,2580 }, { 141,2580 },
 { 142,2580 }, { 143,2580 }, { 144,2580 }, { 145,2580 }, { 146,2580 },

 { 147,2580 }, { 148,2580 }, { 149,2580 }, { 150,2580 }, { 151,2580 },
 { 152,2580 }, { 153,2580 }, { 154,2580 }, { 155,2580 }, { 156,2580 },
 { 157,2580 }, { 158,2580 }, { 159,2580 }, { 160,2580 }, { 161,2580 },
 { 162,2580 }, { 163,2580 }, { 164,2580 }, { 165,2580 }, { 166,2580 },
 { 167,2580 }, { 168,2580 }, { 169,2580 }, { 170,2580 }, { 171,2580 },
 { 172,2580 }, { 173,2580 }, { 174,2580 }, { 175,2580 }, { 176,2580 },
 { 177,2580 }, { 178,2580 }, { 179,2580 }, { 180,2580 }, { 181,2580 },
 { 182,2580 }, { 183,2580 }, { 184,2580 }, { 185,2580 }, { 186,2580 },
 { 187,2580 }, { 188,2580 }, { 189,2580 }, { 190,2580 }, { 191,2580 },
 { 192,2580 }, { 193,2580 }, { 194,2580 }, { 195,2580 }, { 196,2580 },

 { 197,2580 }, { 198,2580 }, { 199,2580 }, { 200,2580 }, { 201,2580 },
 { 202,2580 }, { 203,2580 }, { 204,2580 }, { 205,2580 }, { 206,2580 },
 { 207,2580 }, { 208,2580 }, { 209,2580 }, { 210,2580 }, { 211,2580 },
 { 212,2580 }, { 213,2580 }, { 214,2580 }, { 215,2580 }, { 216,2580 },
 { 217,2580 }, { 218,2580 }, { 219,2580 }, { 220,2580 }, { 221,2580 },
 { 222,2580 }, { 223,2580 }, { 224,2580 }, { 225,2580 }, { 226,2580 },
 { 227,2580 }, { 228,2580 }, { 229,2580 }, { 230,2580 }, { 231,2580 },
 { 232,2580 }, { 233,2580 }, { 234,2580 }, { 235,2580 }, { 236,2580 },
 { 237,2580 }, { 238,2580 }, { 239,2580 }, { 240,2580 }, { 241,2580 },
 { 242,2580 }, { 243,2580 }, { 244,2580 }, { 245,2580 }, { 246,2580 },

 { 247,2580 }, { 248,2580 }, { 249,2580 }, { 250,2580 }, { 251,2580 },
 { 252,2580 }, { 253,2580 }, { 254,2580 }, { 255,2580 }, { 256,2580 },
 {   0,   0 }, {   0,13855 }, {   1,2322 }, {   2,2322 }, {   3,2322 },
 {   4,2322 }, {   5,2322 }, {   6,2322 }, {   7,2322 }, {   8,2322 },
 {   9,2324 }, {  10,2324 }, {  11,2322 }, {  12,2322 }, {  13,2324 },
 {  14,2322 }, {  15,2322 }, {  16,2322 }, {  17,2322 }, {  18,2322 },
 {  19,2322 }, {  20,2322 }, {  21,2322 }, {  22,2322 }, {  23,2322 },
 {  24,2322 }, {  25,2322 }, {  26,2322 }, {  27,2322 }, {  28,2322 },
 {  29,2322 }, {  30,2322 }, {  31,2322 }, {  32,2324 }, {  33,2322 },
 {  34,2326 }, {  35,2322 }, {  36,2322 }, {  37,2322 }, {  38,2322 },

 {  39,2322 }, {  40,2328 }, {  41,2330 }, {  42,2322 }, {  43,2322 },
 {  44,2332 }, {  45,2336 }, {  46,2339 }, {  47,2355 }, {  48,2358 },
 {  49,2358 }, {  50,2358 }, {  51,2358 }, {  52,2358 }, {  53,2358 },
 {  54,2358 }, {  55,2358 }, {  56,2358 }, {  57,2358 }, {  58,2360 },
 {  59,2362 }, {  60,2322 }, {  61,2364 }, {  62,2322 }, {  63,2322 },
 {  64,2322 }, {  65,2400 }, {  66,2400 }, {  67,2400 }, {  68,2400 },
 {  69,2400 }, {  70,2400 }, {  71,2400 }, {  72,2400 }, {  73,2400 },
 {  74,2400 }, {  75,2400 }, {  76,2400 }, {  77,2400 }, {  78,2400 },
 {  79,2400 }, {  80,2400 }, {  81,2400 }, {  82,2400 }, {  83,2400 },
 {  84,2400 }, {  85,2400 }, {  86,2400 }, {  87,2400 }, {  88,2400 },

 {  89,2400 }, {  90,2400 }, {  91,2366 }, {  92,2322 }, {  93,2368 },
 {  94,2322 }, {  95,2492 }, {  96,2322 }, {  97,2400 }, {  98,2584 },
 {  99,2400 }, { 100,2400 }, { 101,2676 }, { 102,2768 }, { 103,2400 },
 { 104,2400 }, { 105,2860 }, { 106,2400 }, { 107,2400 }, { 108,2952 },
 { 109,2400 }, { 110,2400 }, { 111,2400 }, { 112,2400 }, { 113,2400 },
 { 114,2400 }, { 115,3044 }, { 116,3136 }, { 117,2400 }, { 118,3228 },
 { 119,2400 }, { 120,2400 }, { 121,2400 }, { 122,2400 }, { 123,2370 },
 { 124,2372 }, { 125,2374 }, { 126,2322 }, { 127,2322 }, { 128,2322 },
 { 129,2322 }, { 130,2322 }, { 131,2322 }, { 132,2322 }, { 133,2322 },
 { 134,2322 }, { 135,2322 }, { 136,2322 }, { 137,2322 }, { 138,2322 },

 { 139,2322 }, { 140,2322 }, { 141,2322 }, { 142,2322 }, { 143,2322 },
 { 144,2322 }, { 145,2322 }, { 146,2322 }, { 147,2322 }, { 148,2322 },
 { 149,2322 }, { 150,2322 }, { 151,2322 }, { 152,2322 }, { 153,2322 },
 { 154,2322 }, { 155,2322 }, { 156,2322 }, { 157,2322 }, { 158,2322 },
 { 159,2322 }, { 160,2322 }, { 161,2322 }, { 162,2322 }, { 163,2322 },
 { 164,2322 }, { 165,2322 }, { 166,2322 }, { 167,2322 }, { 168,2322 },
 { 169,2322 }, { 170,2322 }, { 171,2322 }, { 172,2322 }, { 173,2322 },
 { 174,2322 }, { 175,2322 }, { 176,2322 }, { 177,2322 }, { 178,2322 },
 { 179,2322 }, { 180,2322 }, { 181,2322 }, { 182,2322 }, { 183,2322 },
 { 184,2322 }, { 185,2322 }, { 186,2322 }, { 187,2322 }, { 188,2322 },

 { 189,2322 }, { 190,2322 }, { 191,2322 }, { 192,2322 }, { 193,2322 },
 { 194,2322 }, { 195,2322 }, { 196,2322 }, { 197,2322 }, { 198,2322 },
 { 199,2322 }, { 200,2322 }, { 201,2322 }, { 202,2322 }, { 203,2322 },
 { 204,2322 }, { 205,2322 }, { 206,2322 }, { 207,2322 }, { 208,2322 },
 { 209,2322 }, { 210,2322 }, { 211,2322 }, { 212,2322 }, { 213,2322 },
 { 214,2322 }, { 215,2322 }, { 216,2322 }, { 217,2322 }, { 218,2322 },
 { 219,2322 }, { 220,2322 }, { 221,2322 }, { 222,2322 }, { 223,2322 },
 { 224,2322 }, { 225,2322 }, { 226,2322 }, { 227,2322 }, { 228,2322 },
 { 229,2322 }, { 230,2322 }, { 231,2322 }, { 232,2322 }, { 233,2322 },
 { 234,2322 }, { 235,2322 }, { 236,2322 }, { 237,2322 }, { 238,2322 },

 { 239,2322 }, { 240,2322 }, { 241,2322 }, { 242,2322 }, { 243,2322 },
 { 244,2322 }, { 245,2322 }, { 246,2322 }, { 247,2322 }, { 248,2322 },
 { 249,2322 }, { 250,2322 }, { 251,2322 }, { 252,2322 }, { 253,2322 },
 { 254,2322 }, { 255,2322 }, { 256,2322 }, {   0,   0 }, {   0,13597 },
 {   1,3094 }, {   2,3094 }, {   3,3094 }, {   4,3094 }, {   5,3094 },
 {   6,3094 }, {   7,3094 }, {   8,3094 }, {   9,3094 }, {  10,3094 },
 {  11,3094 }, {  12,3094 }, {  13,3094 }, {  14,3094 }, {  15,3094 },
 {  16,3094 }, {  17,3094 }, {  18,3094 }, {  19,3094 }, {  20,3094 },
 {  21,3094 }, {  22,3094 }, {  23,3094 }, {  24,3094 }, {  25,3094 },
 {  26,3094 }, {  27,3094 }, {  28,3094 }, {  29,3094 }, {  30,3094 },

 {  31,3094 }, {  32,3094 }, {  33,3094 }, {  34,3094 }, {  35,3094 },
 {  36,3094 }, {  37,3094 }, {  38,3094 }, {  39,3094 }, {  40,3094 },
 {  41,3094 }, {  42,3352 }, {  43,3094 }, {  44,3094 }, {  45,3094 },
 {  46,3094 }, {  47,3610 }, {  48,3094 }, {  49,3094 }, {  50,3094 },
 {  51,3094 }, {  52,3094 }, {  53,3094 }, {  54,3094 }, {  55,3094 },
 {  56,3094 }, {  57,3094 }, {  58,3094 }, {  59,3094 }, {  60,3094 },
 {  61,3094 }, {  62,3094 }, {  63,3094 }, {  64,3094 }, {  65,3094 },
 {  66,3094 }, {  67,3094 }, {  68,3094 }, {  69,3094 }, {  70,3094 },
 {  71,3094 }, {  72,3094 }, {  73,3094 }, {  74,3094 }, {  75,3094 },
 {  76,3094 }, {  77,3094 }, {  78,3094 }, {  79,3094 }, {  80,3094 },

 {  81,3094 }, {  82,3094 }, {  83,3094 }, {  84,3094 }, {  85,3094 },
 {  86,3094 }, {  87,3094 }, {  88,3094 }, {  89,3094 }, {  90,3094 },
 {  91,3094 }, {  92,3094 }, {  93,3094 }, {  94,3094 }, {  95,3094 },
 {  96,3094 }, {  97,3094 }, {  98,3094 }, {  99,3094 }, { 100,3094 },
 { 101,3094 }, { 102,3094 }, { 103,3094 }, { 104,3094 }, { 105,3094 },
 { 106,3094 }, { 107,3094 }, { 108,3094 }, { 109,3094 }, { 110,3094 },
 { 111,3094 }, { 112,3094 }, { 113,3094 }, { 114,3094 }, { 115,3094 },
 { 116,3094 }, { 117,3094 }, { 118,3094 }, { 119,3094 }, { 120,3094 },
 { 121,3094 }, { 122,3094 }, { 123,3094 }, { 124,3094 }, { 125,3094 },
 { 126,3094 }, { 127,3094 }, { 128,3868 }, { 129,3868 }, { 130,3868 },

 { 131,3868 }, { 132,3868 }, { 133,3868 }, { 134,3868 }, { 135,3868 },
 { 136,3868 }, { 137,3868 }, { 138,3868 }, { 139,3868 }, { 140,3868 },
 { 141,3868 }, { 142,3868 }, { 143,3868 }, { 144,3868 }, { 145,3868 },
 { 146,3868 }, { 147,3868 }, { 148,3868 }, { 149,3868 }, { 150,3868 },
 { 151,3868 }, { 152,3868 }, { 153,3868 }, { 154,3868 }, { 155,3868 },
 { 156,3868 }, { 157,3868 }, { 158,3868 }, { 159,3868 }, { 160,3868 },
 { 161,3868 }, { 162,3868 }, { 163,3868 }, { 164,3868 }, { 165,3868 },
 { 166,3868 }, { 167,3868 }, { 168,3868 }, { 169,3868 }, { 170,3868 },
 { 171,3868 }, { 172,3868 }, { 173,3868 }, { 174,3868 }, { 175,3868 },
 { 176,3868 }, { 177,3868 }, { 178,3868 }, { 179,3868 }, { 180,3868 },

 { 181,3868 }, { 182,3868 }, { 183,3868 }, { 184,3868 }, { 185,3868 },
 { 186,3868 }, { 187,3868 }, { 188,3868 }, { 189,3868 }, { 190,3868 },
 { 191,3868 }, { 192,3868 }, { 193,3868 }, { 194,4126 }, { 195,4126 },
 { 196,4126 }, { 197,4126 }, { 198,4126 }, { 199,4126 }, { 200,4126 },
 { 201,4126 }, { 202,4126 }, { 203,4126 }, { 204,4126 }, { 205,4126 },
 { 206,4126 }, { 207,4126 }, { 208,4126 }, { 209,4126 }, { 210,4126 },
 { 211,4126 }, { 212,4126 }, { 213,4126 }, { 214,4126 }, { 215,4126 },
 { 216,4126 }, { 217,4126 }, { 218,4126 }, { 219,4126 }, { 220,4126 },
 { 221,4126 }, { 222,4126 }, { 223,4126 }, { 224,4384 }, { 225,4384 },
 { 226,4384 }, { 227,4384 }, { 228,4384 }, { 229,4384 }, { 230,4384 },

 { 231,4384 }, { 232,4384 }, { 233,4384 }, { 234,4384 }, { 235,4384 },
 { 236,4384 }, { 237,4384 }, { 238,4384 }, { 239,4384 }, { 240,4642 },
 { 241,4642 }, { 242,4642 }, { 243,4642 }, { 244,4642 }, { 245,3868 },
 { 246,3868 }, { 247,3868 }, { 248,3868 }, { 249,3868 }, { 250,3868 },
 { 251,3868 }, { 252,3868 }, { 253,3868 }, { 254,3868 }, { 255,3868 },
 { 256,3094 }, {   0,   0 }, {   0,13339 }, {   1,2836 }, {   2,2836 },
 {   3,2836 }, {   4,2836 }, {   5,2836 }, {   6,2836 }, {   7,2836 },
 {   8,2836 }, {   9,2836 }, {  10,2836 }, {  11,2836 }, {  12,2836 },
 {  13,2836 }, {  14,2836 }, {  15,2836 }, {  16,2836 }, {  17,2836 },
 {  18,2836 }, {  19,2836 }, {  20,2836 }, {  21,2836 }, {  22,2836 },

 {  23,2836 }, {  24,2836 }, {  25,2836 }, {  26,2836 }, {  27,2836 },
 {  28,2836 }, {  29,2836 }, {  30,2836 }, {  31,2836 }, {  32,2836 },
 {  33,2836 }, {  34,2836 }, {  35,2836 }, {  36,2836 }, {  37,2836 },
 {  38,2836 }, {  39,2836 }, {  40,2836 }, {  41,2836 }, {  42,3094 },
 {  43,2836 }, {  44,2836 }, {  45,2836 }, {  46,2836 }, {  47,3352 },
 {  48,2836 }, {  49,2836 }, {  50,2836 }, {  51,2836 }, {  52,2836 },
 {  53,2836 }, {  54,2836 }, {  55,2836 }, {  56,2836 }, {  57,2836 },
 {  58,2836 }, {  59,2836 }, {  60,2836 }, {  61,2836 }, {  62,2836 },
 {  63,2836 }, {  64,2836 }, {  65,2836 }, {  66,2836 }, {  67,2836 },
 {  68,2836 }, {  69,2836 }, {  70,2836 }, {  71,2836 }, {  72,2836 },

 {  73,2836 }, {  74,2836 }, {  75,2836 }, {  76,2836 }, {  77,2836 },
 {  78,2836 }, {  79,2836 }, {  80,2836 }, {  81,2836 }, {  82,2836 },
 {  83,2836 }, {  84,2836 }, {  85,2836 }, {  86,2836 }, {  87,2836 },
 {  88,2836 }, {  89,2836 }, {  90,2836 }, {  91,2836 }, {  92,2836 },
 {  93,2836 }, {  94,2836 }, {  95,2836 }, {  96,2836 }, {  97,2836 },
 {  98,2836 }, {  99,2836 }, { 100,2836 }, { 101,2836 }, { 102,2836 },
 { 103,2836 }, { 104,2836 }, { 105,2836 }, { 106,2836 }, { 107,2836 },
 { 108,2836 }, { 109,2836 }, { 110,2836 }, { 111,2836 }, { 112,2836 },
 { 113,2836 }, { 114,2836 }, { 115,2836 }, { 116,2836 }, { 117,2836 },
 { 118,2836 }, { 119,2836 }, { 120,2836 }, { 121,2836 }, { 122,2836 },

 { 123,2836 }, { 124,2836 }, { 125,2836 }, { 126,2836 }, { 127,2836 },
 { 128,3610 }, { 129,3610 }, { 130,3610 }, { 131,3610 }, { 132,3610 },
 { 133,3610 }, { 134,3610 }, { 135,3610 }, { 136,3610 }, { 137,3610 },
 { 138,3610 }, { 139,3610 }, { 140,3610 }, { 141,3610 }, { 142,3610 },
 { 143,3610 }, { 144,3610 }, { 145,3610 }, { 146,3610 }, { 147,3610 },
 { 148,3610 }, { 149,3610 }, { 150,3610 }, { 151,3610 }, { 152,3610 },
 { 153,3610 }, { 154,3610 }, { 155,3610 }, { 156,3610 }, { 157,3610 },
 { 158,3610 }, { 159,3610 }, { 160,3610 }, { 161,3610 }, { 162,3610 },
 { 163,3610 }, { 164,3610 }, { 165,3610 }, { 166,3610 }, { 167,3610 },
 { 168,3610 }, { 169,3610 }, { 170,3610 }, { 171,3610 }, { 172,3610 },

 { 173,3610 }, { 174,3610 }, { 175,3610 }, { 176,3610 }, { 177,3610 },
 { 178,3610 }, { 179,3610 }, { 180,3610 }, { 181,3610 }, { 182,3610 },
 { 183,3610 }, { 184,3610 }, { 185,3610 }, { 186,3610 }, { 187,3610 },
 { 188,3610 }, { 189,3610 }, { 190,3610 }, { 191,3610 }, { 192,3610 },
 { 193,3610 }, { 194,3868 }, { 195,3868 }, { 196,3868 }, { 197,3868 },
 { 198,3868 }, { 199,3868 }, { 200,3868 }, { 201,3868 }, { 202,3868 },
 { 203,3868 }, { 204,3868 }, { 205,3868 }, { 206,3868 }, { 207,3868 },
 { 208,3868 }, { 209,3868 }, { 210,3868 }, { 211,3868 }, { 212,3868 },
 { 213,3868 }, { 214,3868 }, { 215,3868 }, { 216,3868 }, { 217,3868 },
 { 218,3868 }, { 219,3868 }, { 220,3868 }, { 221,3868 }, { 222,3868 },

 { 223,3868 }, { 224,4126 }, { 225,4126 }, { 226,4126 }, { 227,4126 },
 { 228,4126 }, { 229,4126 }, { 230,4126 }, { 231,4126 }, { 232,4126 },
 { 233,4126 }, { 234,4126 }, { 235,4126 }, { 236,4126 }, { 237,4126 },
 { 238,4126 }, { 239,4126 }, { 240,4384 }, { 241,4384 }, { 242,4384 },
 { 243,4384 }, { 244,4384 }, { 245,3610 }, { 246,3610 }, { 247,3610 },
 { 248,3610 }, { 249,3610 }, { 250,3610 }, { 251,3610 }, { 252,3610 },
 { 253,3610 }, { 254,3610 }, { 255,3610 }, { 256,2836 }, {   0,   0 },
 {   0,13081 }, {   1,4384 }, {   2,4384 }, {   3,4384 }, {   4,4384 },
 {   5,4384 }, {   6,4384 }, {   7,4384 }, {   8,4384 }, {   9,4384 },
 {  10,4384 }, {  11,4384 }, {  12,4384 }, {  13,1602 }, {  14,4384 },

 {  15,4384 }, {  16,4384 }, {  17,4384 }, {  18,4384 }, {  19,4384 },
 {  20,4384 }, {  21,4384 }, {  22,4384 }, {  23,4384 }, {  24,4384 },
 {  25,4384 }, {  26,4384 }, {  27,4384 }, {  28,4384 }, {  29,4384 },
 {  30,4384 }, {  31,4384 }, {  32,4384 }, {  33,4384 }, {  34,4384 },
 {  35,4384 }, {  36,4384 }, {  37,4384 }, {  38,4384 }, {  39,4384 },
 {  40,4384 }, {  41,4384 }, {  42,4384 }, {  43,4384 }, {  44,4384 },
 {  45,4384 }, {  46,4384 }, {  47,4384 }, {  48,4384 }, {  49,4384 },
 {  50,4384 }, {  51,4384 }, {  52,4384 }, {  53,4384 }, {  54,4384 },
 {  55,4384 }, {  56,4384 }, {  57,4384 }, {  58,4384 }, {  59,4384 },
 {  60,4384 }, {  61,4384 }, {  62,4384 }, {  63,4384 }, {  64,4384 },

 {  65,4384 }, {  66,4384 }, {  67,4384 }, {  68,4384 }, {  69,4384 },
 {  70,4384 }, {  71,4384 }, {  72,4384 }, {  73,4384 }, {  74,4384 },
 {  75,4384 }, {  76,4384 }, {  77,4384 }, {  78,4384 }, {  79,4384 },
 {  80,4384 }, {  81,4384 }, {  82,4384 }, {  83,4384 }, {  84,4384 },
 {  85,4384 }, {  86,4384 }, {  87,4384 }, {  88,4384 }, {  89,4384 },
 {  90,4384 }, {  91,4384 }, {  92,4384 }, {  93,4384 }, {  94,4384 },
 {  95,4384 }, {  96,4384 }, {  97,4384 }, {  98,4384 }, {  99,4384 },
 { 100,4384 }, { 101,4384 }, { 102,4384 }, { 103,4384 }, { 104,4384 },
 { 105,4384 }, { 106,4384 }, { 107,4384 }, { 108,4384 }, { 109,4384 },
 { 110,4384 }, { 111,4384 }, { 112,4384 }, { 113,4384 }, { 114,4384 },

 { 115,4384 }, { 116,4384 }, { 117,4384 }, { 118,4384 }, { 119,4384 },
 { 120,4384 }, { 121,4384 }, { 122,4384 }, { 123,4384 }, { 124,4384 },
 { 125,4384 }, { 126,4384 }, { 127,4384 }, { 128,4384 }, { 129,4384 },
 { 130,4384 }, { 131,4384 }, { 132,4384 }, { 133,4384 }, { 134,4384 },
 { 135,4384 }, { 136,4384 }, { 137,4384 }, { 138,4384 }, { 139,4384 },
 { 140,4384 }, { 141,4384 }, { 142,4384 }, { 143,4384 }, { 144,4384 },
 { 145,4384 }, { 146,4384 }, { 147,4384 }, { 148,4384 }, { 149,4384 },
 { 150,4384 }, { 151,4384 }, { 152,4384 }, { 153,4384 }, { 154,4384 },
 { 155,4384 }, { 156,4384 }, { 157,4384 }, { 158,4384 }, { 159,4384 },
 { 160,4384 }, { 161,4384 }, { 162,4384 }, { 163,4384 }, { 164,4384 },

 { 165,4384 }, { 166,4384 }, { 167,4384 }, { 168,4384 }, { 169,4384 },
 { 170,4384 }, { 171,4384 }, { 172,4384 }, { 173,4384 }, { 174,4384 },
 { 175,4384 }, { 176,4384 }, { 177,4384 }, { 178,4384 }, { 179,4384 },
 { 180,4384 }, { 181,4384 }, { 182,4384 }, { 183,4384 }, { 184,4384 },
 { 185,4384 }, { 186,4384 }, { 187,4384 }, { 188,4384 }, { 189,4384 },
 { 190,4384 }, { 191,4384 }, { 192,4384 }, { 193,4384 }, { 194,4384 },
 { 195,4384 }, { 196,4384 }, { 197,4384 }, { 198,4384 }, { 199,4384 },
 { 200,4384 }, { 201,4384 }, { 202,4384 }, { 203,4384 }, { 204,4384 },
 { 205,4384 }, { 206,4384 }, { 207,4384 }, { 208,4384 }, { 209,4384 },
 { 210,4384 }, { 211,4384 }, { 212,4384 }, { 213,4384 }, { 214,4384 },

 { 215,4384 }, { 216,4384 }, { 217,4384 }, { 218,4384 }, { 219,4384 },
 { 220,4384 }, { 221,4384 }, { 222,4384 }, { 223,4384 }, { 224,4384 },
 { 225,4384 }, { 226,4384 }, { 227,4384 }, { 228,4384 }, { 229,4384 },
 { 230,4384 }, { 231,4384 }, { 232,4384 }, { 233,4384 }, { 234,4384 },
 { 235,4384 }, { 236,4384 }, { 237,4384 }, { 238,4384 }, { 239,4384 },
 { 240,4384 }, { 241,4384 }, { 242,4384 }, { 243,4384 }, { 244,4384 },
 { 245,4384 }, { 246,4384 }, { 247,4384 }, { 248,4384 }, { 249,4384 },
 { 250,4384 }, { 251,4384 }, { 252,4384 }, { 253,4384 }, { 254,4384 },
 { 255,4384 }, { 256,4384 }, {   0,   0 }, {   0,12823 }, {   1,4126 },
 {   2,4126 }, {   3,4126 }, {   4,4126 }, {   5,4126 }, {   6,4126 },

 {   7,4126 }, {   8,4126 }, {   9,4126 }, {  10,4126 }, {  11,4126 },
 {  12,4126 }, {  13,1344 }, {  14,4126 }, {  15,4126 }, {  16,4126 },
 {  17,4126 }, {  18,4126 }, {  19,4126 }, {  20,4126 }, {  21,4126 },
 {  22,4126 }, {  23,4126 }, {  24,4126 }, {  25,4126 }, {  26,4126 },
 {  27,4126 }, {  28,4126 }, {  29,4126 }, {  30,4126 }, {  31,4126 },
 {  32,4126 }, {  33,4126 }, {  34,4126 }, {  35,4126 }, {  36,4126 },
 {  37,4126 }, {  38,4126 }, {  39,4126 }, {  40,4126 }, {  41,4126 },
 {  42,4126 }, {  43,4126 }, {  44,4126 }, {  45,4126 }, {  46,4126 },
 {  47,4126 }, {  48,4126 }, {  49,4126 }, {  50,4126 }, {  51,4126 },
 {  52,4126 }, {  53,4126 }, {  54,4126 }, {  55,4126 }, {  56,4126 },

 {  57,4126 }, {  58,4126 }, {  59,4126 }, {  60,4126 }, {  61,4126 },
 {  62,4126 }, {  63,4126 }, {  64,4126 }, {  65,4126 }, {  66,4126 },
 {  67,4126 }, {  68,4126 }, {  69,4126 }, {  70,4126 }, {  71,4126 },
 {  72,4126 }, {  73,4126 }, {  74,4126 }, {  75,4126 }, {  76,4126 },
 {  77,4126 }, {  78,4126 }, {  79,4126 }, {  80,4126 }, {  81,4126 },
 {  82,4126 }, {  83,4126 }, {  84,4126 }, {  85,4126 }, {  86,4126 },
 {  87,4126 }, {  88,4126 }, {  89,4126 }, {  90,4126 }, {  91,4126 },
 {  92,4126 }, {  93,4126 }, {  94,4126 }, {  95,4126 }, {  96,4126 },
 {  97,4126 }, {  98,4126 }, {  99,4126 }, { 100,4126 }, { 101,4126 },
 { 102,4126 }, { 103,4126 }, { 104,4126 }, { 105,4126 }, { 106,4126 },

 { 107,4126 }, { 108,4126 }, { 109,4126 }, { 110,4126 }, { 111,4126 },
 { 112,4126 }, { 113,4126 }, { 114,4126 }, { 115,4126 }, { 116,4126 },
 { 117,4126 }, { 118,4126 }, { 119,4126 }, { 120,4126 }, { 121,4126 },
 { 122,4126 }, { 123,4126 }, { 124,4126 }, { 125,4126 }, { 126,4126 },
 { 127,4126 }, { 128,4126 }, { 129,4126 }, { 130,4126 }, { 131,4126 },
 { 132,4126 }, { 133,4126 }, { 134,4126 }, { 135,4126 }, { 136,4126 },
 { 137,4126 }, { 138,4126 }, { 139,4126 }, { 140,4126 }, { 141,4126 },
 { 142,4126 }, { 143,4126 }, { 144,4126 }, { 145,4126 }, { 146,4126 },
 { 147,4126 }, { 148,4126 }, { 149,4126 }, { 150,4126 }, { 151,4126 },
 { 152,4126 }, { 153,4126 }, { 154,4126 }, { 155,4126 }, { 156,4126 },

 { 157,4126 }, { 158,4126 }, { 159,4126 }, { 160,4126 }, { 161,4126 },
 { 162,4126 }, { 163,4126 }, { 164,4126 }, { 165,4126 }, { 166,4126 },
 { 167,4126 }, { 168,4126 }, { 169,4126 }, { 170,4126 }, { 171,4126 },
 { 172,4126 }, { 173,4126 }, { 174,4126 }, { 175,4126 }, { 176,4126 },
 { 177,4126 }, { 178,4126 }, { 179,4126 }, { 180,4126 }, { 181,4126 },
 { 182,4126 }, { 183,4126 }, { 184,4126 }, { 185,4126 }, { 186,4126 },
 { 187,4126 }, { 188,4126 }, { 189,4126 }, { 190,4126 }, { 191,4126 },
 { 192,4126 }, { 193,4126 }, { 194,4126 }, { 195,4126 }, { 196,4126 },
 { 197,4126 }, { 198,4126 }, { 199,4126 }, { 200,4126 }, { 201,4126 },
 { 202,4126 }, { 203,4126 }, { 204,4126 }, { 205,4126 }, { 206,4126 },

 { 207,4126 }, { 208,4126 }, { 209,4126 }, { 210,4126 }, { 211,4126 },
 { 212,4126 }, { 213,4126 }, { 214,4126 }, { 215,4126 }, { 216,4126 },
 { 217,4126 }, { 218,4126 }, { 219,4126 }, { 220,4126 }, { 221,4126 },
 { 222,4126 }, { 223,4126 }, { 224,4126 }, { 225,4126 }, { 226,4126 },
 { 227,4126 }, { 228,4126 }, { 229,4126 }, { 230,4126 }, { 231,4126 },
 { 232,4126 }, { 233,4126 }, { 234,4126 }, { 235,4126 }, { 236,4126 },
 { 237,4126 }, { 238,4126 }, { 239,4126 }, { 240,4126 }, { 241,4126 },
 { 242,4126 }, { 243,4126 }, { 244,4126 }, { 245,4126 }, { 246,4126 },
 { 247,4126 }, { 248,4126 }, { 249,4126 }, { 250,4126 }, { 251,4126 },
 { 252,4126 }, { 253,4126 }, { 254,4126 }, { 255,4126 }, { 256,4126 },

 {   0,   0 }, {   0,12565 }, {   1,1032 }, {   2,1032 }, {   3,1032 },
 {   4,1032 }, {   5,1032 }, {   6,1032 }, {   7,1032 }, {   8,1032 },
 {   9,1032 }, {  10,4126 }, {  11,1032 }, {  12,1032 }, {  13,4126 },
 {  14,1032 }, {  15,1032 }, {  16,1032 }, {  17,1032 }, {  18,1032 },
 {  19,1032 }, {  20,1032 }, {  21,1032 }, {  22,1032 }, {  23,1032 },
 {  24,1032 }, {  25,1032 }, {  26,1032 }, {  27,1032 }, {  28,1032 },
 {  29,1032 }, {  30,1032 }, {  31,1032 }, {  32,4126 }, {  33,4126 },
 {  34,1088 }, {  35,4126 }, {  36,4126 }, {  37,4126 }, {  38,4126 },
 {  39,4126 }, {  40,4126 }, {  41,4126 }, {  42,4126 }, {  43,4126 },
 {  44,4126 }, {  45,4126 }, {  46,4126 }, {  47,4126 }, {  48,4126 },

 {  49,4126 }, {  50,4126 }, {  51,4126 }, {  52,4126 }, {  53,4126 },
 {  54,4126 }, {  55,4126 }, {  56,4126 }, {  57,4126 }, {  58,4126 },
 {  59,4126 }, {  60,4126 }, {  61,4126 }, {  62,4126 }, {  63,4126 },
 {  64,4126 }, {  65,4126 }, {  66,4126 }, {  67,4126 }, {  68,4126 },
 {  69,4126 }, {  70,4126 }, {  71,4126 }, {  72,4126 }, {  73,4126 },
 {  74,4126 }, {  75,4126 }, {  76,4126 }, {  77,4126 }, {  78,4126 },
 {  79,4126 }, {  80,4126 }, {  81,4126 }, {  82,4126 }, {  83,4126 },
 {  84,4126 }, {  85,4126 }, {  86,4126 }, {  87,4126 }, {  88,4126 },
 {  89,4126 }, {  90,4126 }, {  91,4126 }, {  92,4383 }, {  93,4126 },
 {  94,4126 }, {  95,4126 }, {  96,4126 }, {  97,4126 }, {  98,4126 },

 {  99,4126 }, { 100,4126 }, { 101,4126 }, { 102,4126 }, { 103,4126 },
 { 104,4126 }, { 105,4126 }, { 106,4126 }, { 107,4126 }, { 108,4126 },
 { 109,4126 }, { 110,4126 }, { 111,4126 }, { 112,4126 }, { 113,4126 },
 { 114,4126 }, { 115,4126 }, { 116,4126 }, { 117,4126 }, { 118,4126 },
 { 119,4126 }, { 120,4126 }, { 121,4126 }, { 122,4126 }, { 123,4126 },
 { 124,4126 }, { 125,4126 }, { 126,4126 }, { 127,1032 }, { 128,4126 },
 { 129,4126 }, { 130,4126 }, { 131,4126 }, { 132,4126 }, { 133,4126 },
 { 134,4126 }, { 135,4126 }, { 136,4126 }, { 137,4126 }, { 138,4126 },
 { 139,4126 }, { 140,4126 }, { 141,4126 }, { 142,4126 }, { 143,4126 },
 { 144,4126 }, { 145,4126 }, { 146,4126 }, { 147,4126 }, { 148,4126 },

 { 149,4126 }, { 150,4126 }, { 151,4126 }, { 152,4126 }, { 153,4126 },
 { 154,4126 }, { 155,4126 }, { 156,4126 }, { 157,4126 }, { 158,4126 },
 { 159,4126 }, { 160,4126 }, { 161,4126 }, { 162,4126 }, { 163,4126 },
 { 164,4126 }, { 165,4126 }, { 166,4126 }, { 167,4126 }, { 168,4126 },
 { 169,4126 }, { 170,4126 }, { 171,4126 }, { 172,4126 }, { 173,4126 },
 { 174,4126 }, { 175,4126 }, { 176,4126 }, { 177,4126 }, { 178,4126 },
 { 179,4126 }, { 180,4126 }, { 181,4126 }, { 182,4126 }, { 183,4126 },
 { 184,4126 }, { 185,4126 }, { 186,4126 }, { 187,4126 }, { 188,4126 },
 { 189,4126 }, { 190,4126 }, { 191,4126 }, { 192,4126 }, { 193,4126 },
 { 194,4473 }, { 195,4473 }, { 196,4473 }, { 197,4473 }, { 198,4473 },

 { 199,4473 }, { 200,4473 }, { 201,4473 }, { 202,4473 }, { 203,4473 },
 { 204,4473 }, { 205,4473 }, { 206,4473 }, { 207,4473 }, { 208,4473 },
 { 209,4473 }, { 210,4473 }, { 211,4473 }, { 212,4473 }, { 213,4473 },
 { 214,4473 }, { 215,4473 }, { 216,4473 }, { 217,4473 }, { 218,4473 },
 { 219,4473 }, { 220,4473 }, { 221,4473 }, { 222,4473 }, { 223,4473 },
 { 224,4730 }, { 225,4730 }, { 226,4730 }, { 227,4730 }, { 228,4730 },
 { 229,4730 }, { 230,4730 }, { 231,4730 }, { 232,4730 }, { 233,4730 },
 { 234,4730 }, { 235,4730 }, { 236,4730 }, { 237,4730 }, { 238,4730 },
 { 239,4730 }, { 240,4987 }, { 241,4987 }, { 242,4987 }, { 243,4987 },
 { 244,4987 }, { 245,4126 }, { 246,4126 }, { 247,4126 }, { 248,4126 },

 { 249,4126 }, { 250,4126 }, { 251,4126 }, { 252,4126 }, { 253,4126 },
 { 254,4126 }, { 255,4126 }, { 256,1032 }, {   0,   0 }, {   0,12307 },
 {   1, 774 }, {   2, 774 }, {   3, 774 }, {   4, 774 }, {   5, 774 },
 {   6, 774 }, {   7, 774 }, {   8, 774 }, {   9, 774 }, {  10,3868 },
 {  11, 774 }, {  12, 774 }, {  13,3868 }, {  14, 774 }, {  15, 774 },
 {  16, 774 }, {  17, 774 }, {  18, 774 }, {  19, 774 }, {  20, 774 },
 {  21, 774 }, {  22, 774 }, {  23, 774 }, {  24, 774 }, {  25, 774 },
 {  26, 774 }, {  27, 774 }, {  28, 774 }, {  29, 774 }, {  30, 774 },
 {  31, 774 }, {  32,3868 }, {  33,3868 }, {  34, 830 }, {  35,3868 },
 {  36,3868 }, {  37,3868 }, {  38,3868 }, {  39,3868 }, {  40,3868 },

 {  41,3868 }, {  42,3868 }, {  43,3868 }, {  44,3868 }, {  45,3868 },
 {  46,3868 }, {  47,3868 }, {  48,3868 }, {  49,3868 }, {  50,3868 },
 {  51,3868 }, {  52,3868 }, {  53,3868 }, {  54,3868 }, {  55,3868 },
 {  56,3868 }, {  57,3868 }, {  58,3868 }, {  59,3868 }, {  60,3868 },
 {  61,3868 }, {  62,3868 }, {  63,3868 }, {  64,3868 }, {  65,3868 },
 {  66,3868 }, {  67,3868 }, {  68,3868 }, {  69,3868 }, {  70,3868 },
 {  71,3868 }, {  72,3868 }, {  73,3868 }, {  74,3868 }, {  75,3868 },
 {  76,3868 }, {  77,3868 }, {  78,3868 }, {  79,3868 }, {  80,3868 },
 {  81,3868 }, {  82,3868 }, {  83,3868 }, {  84,3868 }, {  85,3868 },
 {  86,3868 }, {  87,3868 }, {  88,3868 }, {  89,3868 }, {  90,3868 },

 {  91,3868 }, {  92,4125 }, {  93,3868 }, {  94,3868 }, {  95,3868 },
 {  96,3868 }, {  97,3868 }, {  98,3868 }, {  99,3868 }, { 100,3868 },
 { 101,3868 }, { 102,3868 }, { 103,3868 }, { 104,3868 }, { 105,3868 },
 { 106,3868 }, { 107,3868 }, { 108,3868 }, { 109,3868 }, { 110,3868 },
 { 111,3868 }, { 112,3868 }, { 113,3868 }, { 114,3868 }, { 115,3868 },
 { 116,3868 }, { 117,3868 }, { 118,3868 }, { 119,3868 }, { 120,3868 },
 { 121,3868 }, { 122,3868 }, { 123,3868 }, { 124,3868 }, { 125,3868 },
 { 126,3868 }, { 127, 774 }, { 128,3868 }, { 129,3868 }, { 130,3868 },
 { 131,3868 }, { 132,3868 }, { 133,3868 }, { 134,3868 }, { 135,3868 },
 { 136,3868 }, { 137,3868 }, { 138,3868 }, { 139,3868 }, { 140,3868 },

 { 141,3868 }, { 142,3868 }, { 143,3868 }, { 144,3868 }, { 145,3868 },
 { 146,3868 }, { 147,3868 }, { 148,3868 }, { 149,3868 }, { 150,3868 },
 { 151,3868 }, { 152,3868 }, { 153,3868 }, { 154,3868 }, { 155,3868 },
 { 156,3868 }, { 157,3868 }, { 158,3868 }, { 159,3868 }, { 160,3868 },
 { 161,3868 }, { 162,3868 }, { 163,3868 }, { 164,3868 }, { 165,3868 },
 { 166,3868 }, { 167,3868 }, { 168,3868 }, { 169,3868 }, { 170,3868 },
 { 171,3868 }, { 172,3868 }, { 173,3868 }, { 174,3868 }, { 175,3868 },
 { 176,3868 }, { 177,3868 }, { 178,3868 }, { 179,3868 }, { 180,3868 },
 { 181,3868 }, { 182,3868 }, { 183,3868 }, { 184,3868 }, { 185,3868 },
 { 186,3868 }, { 187,3868 }, { 188,3868 }, { 189,3868 }, { 190,3868 },

 { 191,3868 }, { 192,3868 }, { 193,3868 }, { 194,4215 }, { 195,4215 },
 { 196,4215 }, { 197,4215 }, { 198,4215 }, { 199,4215 }, { 200,4215 },
 { 201,4215 }, { 202,4215 }, { 203,4215 }, { 204,4215 }, { 205,4215 },
 { 206,4215 }, { 207,4215 }, { 208,4215 }, { 209,4215 }, { 210,4215 },
 { 211,4215 }, { 212,4215 }, { 213,4215 }, { 214,4215 }, { 215,4215 },
 { 216,4215 }, { 217,4215 }, { 218,4215 }, { 219,4215 }, { 220,4215 },
 { 221,4215 }, { 222,4215 }, { 223,4215 }, { 224,4472 }, { 225,4472 },
 { 226,4472 }, { 227,4472 }, { 228,4472 }, { 229,4472 }, { 230,4472 },
 { 231,4472 }, { 232,4472 }, { 233,4472 }, { 234,4472 }, { 235,4472 },
 { 236,4472 }, { 237,4472 }, { 238,4472 }, { 239,4472 }, { 240,4729 },

 { 241,4729 }, { 242,4729 }, { 243,4729 }, { 244,4729 }, { 245,3868 },
 { 246,3868 }, { 247,3868 }, { 248,3868 }, { 249,3868 }, { 250,3868 },
 { 251,3868 }, { 252,3868 }, { 253,3868 }, { 254,3868 }, { 255,3868 },
 { 256, 774 }, {   0,   0 }, {   0,12049 }, {   1, 516 }, {   2, 516 },
 {   3, 516 }, {   4, 516 }, {   5, 516 }, {   6, 516 }, {   7, 516 },
 {   8, 516 }, {   9, 516 }, {  10, 516 }, {  11, 516 }, {  12, 516 },
 {  13, 516 }, {  14, 516 }, {  15, 516 }, {  16, 516 }, {  17, 516 },
 {  18, 516 }, {  19, 516 }, {  20, 516 }, {  21, 516 }, {  22, 516 },
 {  23, 516 }, {  24, 516 }, {  25, 516 }, {  26, 516 }, {  27, 516 },
 {  28, 516 }, {  29, 516 }, {  30, 516 }, {  31, 516 }, {  32, 516 },

 {  33, 516 }, {  34, 516 }, {  35, 516 }, {  36, 516 }, {  37, 516 },
 {  38, 516 }, {  39, 516 }, {  40, 516 }, {  41, 516 }, {  42, 516 },
 {  43, 516 }, {  44, 516 }, {  45, 516 }, {  46, 516 }, {  47, 516 },
 {  48, 516 }, {  49, 516 }, {  50, 516 }, {  51, 516 }, {  52, 516 },
 {  53, 516 }, {  54, 516 }, {  55, 516 }, {  56, 516 }, {  57, 516 },
 {  58, 516 }, {  59, 516 }, {  60, 516 }, {  61, 516 }, {  62, 516 },
 {  63, 516 }, {  64, 516 }, {  65, 516 }, {  66, 516 }, {  67, 516 },
 {  68, 516 }, {  69, 516 }, {  70, 516 }, {  71, 516 }, {  72, 516 },
 {  73, 516 }, {  74, 516 }, {  75, 516 }, {  76, 516 }, {  77, 516 },
 {  78, 516 }, {  79, 516 }, {  80, 516 }, {  81, 516 }, {  82, 516 },

 {  83, 516 }, {  84, 516 }, {  85, 516 }, {  86, 516 }, {  87, 516 },
 {  88, 516 }, {  89, 516 }, {  90, 516 }, {  91, 516 }, {  92, 516 },
 {  93, 516 }, {  94, 516 }, {  95, 516 }, {  96, 516 }, {  97, 516 },
 {  98, 516 }, {  99, 516 }, { 100, 516 }, { 101, 516 }, { 102, 516 },
 { 103, 516 }, { 104, 516 }, { 105, 516 }, { 106, 516 }, { 107, 516 },
 { 108, 516 }, { 109, 516 }, { 110, 516 }, { 111, 516 }, { 112, 516 },
 { 113, 516 }, { 114, 516 }, { 115, 516 }, { 116, 516 }, { 117, 516 },
 { 118, 516 }, { 119, 516 }, { 120, 516 }, { 121, 516 }, { 122, 516 },
 { 123, 516 }, { 124, 516 }, { 125, 516 }, { 126, 516 }, { 127, 516 },
 { 128, 516 }, { 129, 516 }, { 130, 516 }, { 131, 516 }, { 132, 516 },

 { 133, 516 }, { 134, 516 }, { 135, 516 }, { 136, 516 }, { 137, 516 },
 { 138, 516 }, { 139, 516 }, { 140, 516 }, { 141, 516 }, { 142, 516 },
 { 143, 516 }, { 144, 516 }, { 145, 516 }, { 146, 516 }, { 147, 516 },
 { 148, 516 }, { 149, 516 }, { 150, 516 }, { 151, 516 }, { 152, 516 },
 { 153, 516 }, { 154, 516 }, { 155, 516 }, { 156, 516 }, { 157, 516 },
 { 158, 516 }, { 159, 516 }, { 160, 516 }, { 161, 516 }, { 162, 516 },
 { 163, 516 }, { 164, 516 }, { 165, 516 }, { 166, 516 }, { 167, 516 },
 { 168, 516 }, { 169, 516 }, { 170, 516 }, { 171, 516 }, { 172, 516 },
 { 173, 516 }, { 174, 516 }, { 175, 516 }, { 176, 516 }, { 177, 516 },
 { 178, 516 }, { 179, 516 }, { 180, 516 }, { 181, 516 }, { 182, 516 },

 { 183, 516 }, { 184, 516 }, { 185, 516 }, { 186, 516 }, { 187, 516 },
 { 188, 516 }, { 189, 516 }, { 190, 516 }, { 191, 516 }, { 192, 516 },
 { 193, 516 }, { 194, 516 }, { 195, 516 }, { 196, 516 }, { 197, 516 },
 { 198, 516 }, { 199, 516 }, { 200, 516 }, { 201, 516 }, { 202, 516 },
 { 203, 516 }, { 204, 516 }, { 205, 516 }, { 206, 516 }, { 207, 516 },
 { 208, 516 }, { 209, 516 }, { 210, 516 }, { 211, 516 }, { 212, 516 },
 { 213, 516 }, { 214, 516 }, { 215, 516 }, { 216, 516 }, { 217, 516 },
 { 218, 516 }, { 219, 516 }, { 220, 516 }, { 221, 516 }, { 222, 516 },
 { 223, 516 }, { 224, 516 }, { 225, 516 }, { 226, 516 }, { 227, 516 },
 { 228, 516 }, { 229, 516 }, { 230, 516 }, { 231, 516 }, { 232, 516 },

 { 233, 516 }, { 234, 516 }, { 235, 516 }, { 236, 516 }, { 237, 516 },
 { 238, 516 }, { 239, 516 }, { 240, 516 }, { 241, 516 }, { 242, 516 },
 { 243, 516 }, { 244, 516 }, { 245, 516 }, { 246, 516 }, { 247, 516 },
 { 248, 516 }, { 249, 516 }, { 250, 516 }, { 251, 516 }, { 252, 516 },
 { 253, 516 }, { 254, 516 }, { 255, 516 }, { 256, 516 }, {   0,   0 },
 {   0,11791 }, {   1, 258 }, {   2, 258 }, {   3, 258 }, {   4, 258 },
 {   5, 258 }, {   6, 258 }, {   7, 258 }, {   8, 258 }, {   9, 258 },
 {  10, 258 }, {  11, 258 }, {  12, 258 }, {  13, 258 }, {  14, 258 },
 {  15, 258 }, {  16, 258 }, {  17, 258 }, {  18, 258 }, {  19, 258 },
 {  20, 258 }, {  21, 258 }, {  22, 258 }, {  23, 258 }, {  24, 258 },

 {  25, 258 }, {  26, 258 }, {  27, 258 }, {  28, 258 }, {  29, 258 },
 {  30, 258 }, {  31, 258 }, {  32, 258 }, {  33, 258 }, {  34, 258 },
 {  35, 258 }, {  36, 258 }, {  37, 258 }, {  38, 258 }, {  39, 258 },
 {  40, 258 }, {  41, 258 }, {  42, 258 }, {  43, 258 }, {  44, 258 },
 {  45, 258 }, {  46, 258 }, {  47, 258 }, {  48, 258 }, {  49, 258 },
 {  50, 258 }, {  51, 258 }, {  52, 258 }, {  53, 258 }, {  54, 258 },
 {  55, 258 }, {  56, 258 }, {  57, 258 }, {  58, 258 }, {  59, 258 },
 {  60, 258 }, {  61, 258 }, {  62, 258 }, {  63, 258 }, {  64, 258 },
 {  65, 258 }, {  66, 258 }, {  67, 258 }, {  68, 258 }, {  69, 258 },
 {  70, 258 }, {  71, 258 }, {  72, 258 }, {  73, 258 }, {  74, 258 },

 {  75, 258 }, {  76, 258 }, {  77, 258 }, {  78, 258 }, {  79, 258 },
 {  80, 258 }, {  81, 258 }, {  82, 258 }, {  83, 258 }, {  84, 258 },
 {  85, 258 }, {  86, 258 }, {  87, 258 }, {  88, 258 }, {  89, 258 },
 {  90, 258 }, {  91, 258 }, {  92, 258 }, {  93, 258 }, {  94, 258 },
 {  95, 258 }, {  96, 258 }, {  97, 258 }, {  98, 258 }, {  99, 258 },
 { 100, 258 }, { 101, 258 }, { 102, 258 }, { 103, 258 }, { 104, 258 },
 { 105, 258 }, { 106, 258 }, { 107, 258 }, { 108, 258 }, { 109, 258 },
 { 110, 258 }, { 111, 258 }, { 112, 258 }, { 113, 258 }, { 114, 258 },
 { 115, 258 }, { 116, 258 }, { 117, 258 }, { 118, 258 }, { 119, 258 },
 { 120, 258 }, { 121, 258 }, { 122, 258 }, { 123, 258 }, { 124, 258 },

 { 125, 258 }, { 126, 258 }, { 127, 258 }, { 128, 258 }, { 129, 258 },
 { 130, 258 }, { 131, 258 }, { 132, 258 }, { 133, 258 }, { 134, 258 },
 { 135, 258 }, { 136, 258 }, { 137, 258 }, { 138, 258 }, { 139, 258 },
 { 140, 258 }, { 141, 258 }, { 142, 258 }, { 143, 258 }, { 144, 258 },
 { 145, 258 }, { 146, 258 }, { 147, 258 }, { 148, 258 }, { 149, 258 },
 { 150, 258 }, { 151, 258 }, { 152, 258 }, { 153, 258 }, { 154, 258 },
 { 155, 258 }, { 156, 258 }, { 157, 258 }, { 158, 258 }, { 159, 258 },
 { 160, 258 }, { 161, 258 }, { 162, 258 }, { 163, 258 }, { 164, 258 },
 { 165, 258 }, { 166, 258 }, { 167, 258 }, { 168, 258 }, { 169, 258 },
 { 170, 258 }, { 171, 258 }, { 172, 258 }, { 173, 258 }, { 174, 258 },

 { 175, 258 }, { 176, 258 }, { 177, 258 }, { 178, 258 }, { 179, 258 },
 { 180, 258 }, { 181, 258 }, { 182, 258 }, { 183, 258 }, { 184, 258 },
 { 185, 258 }, { 186, 258 }, { 187, 258 }, { 188, 258 }, { 189, 258 },
 { 190, 258 }, { 191, 258 }, { 192, 258 }, { 193, 258 }, { 194, 258 },
 { 195, 258 }, { 196, 258 }, { 197, 258 }, { 198, 258 }, { 199, 258 },
 { 200, 258 }, { 201, 258 }, { 202, 258 }, { 203, 258 }, { 204, 258 },
 { 205, 258 }, { 206, 258 }, { 207, 258 }, { 208, 258 }, { 209, 258 },
 { 210, 258 }, { 211, 258 }, { 212, 258 }, { 213, 258 }, { 214, 258 },
 { 215, 258 }, { 216, 258 }, { 217, 258 }, { 218, 258 }, { 219, 258 },
 { 220, 258 }, { 221, 258 }, { 222, 258 }, { 223, 258 }, { 224, 258 },

 { 225, 258 }, { 226, 258 }, { 227, 258 }, { 228, 258 }, { 229, 258 },
 { 230, 258 }, { 231, 258 }, { 232, 258 }, { 233, 258 }, { 234, 258 },
 { 235, 258 }, { 236, 258 }, { 237, 258 }, { 238, 258 }, { 239, 258 },
 { 240, 258 }, { 241, 258 }, { 242, 258 }, { 243, 258 }, { 244, 258 },
 { 245, 258 }, { 246, 258 }, { 247, 258 }, { 248, 258 }, { 249, 258 },
 { 250, 258 }, { 251, 258 }, { 252, 258 }, { 253, 258 }, { 254, 258 },
 { 255, 258 }, { 256, 258 }, {   0,  41 }, {   0,11533 }, {   0,   1 },
 {   0,11531 }, {   0,   7 }, {   0,11529 }, {   0,  25 }, {   0,11527 },
 {   0,  26 }, {   0,11525 }, {   0,  28 }, {   0,11523 }, {   9, 102 },
 {  10, 102 }, {   0,  41 }, {   0,11519 }, {  13, 102 }, {   0,  33 },

 {   0,11516 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,  41 }, {   0,11500 }, {  32, 102 }, {   0,  39 }, {   0,11497 },
 {   0,  29 }, {   0,11495 }, {   0,  27 }, {   0,11493 }, {   0,  32 },
 {   0,11491 }, {   0,  30 }, {   0,11489 }, {   0,  31 }, {   0,11487 },
 {   0,  23 }, {   0,11485 }, {   0,  41 }, {   0,11483 }, {   0,  24 },
 {   0,11481 }, {   0,   6 }, {   0,11479 }, {   0,  11 }, {   0,11477 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  10, 150 }, {  48,4195 }, {  49,4195 },

 {  50,4195 }, {  51,4195 }, {  52,4195 }, {  53,4195 }, {  54,4195 },
 {  55,4195 }, {  56,4195 }, {  57,4195 }, {  42,  76 }, {  62,  93 },
 {   0,  38 }, {   0,11455 }, {   0,   0 }, {  47,  78 }, {   0,   0 },
 {  46,4186 }, {   0,   0 }, {  48,4210 }, {  49,4210 }, {  50,4210 },
 {  51,4210 }, {  52,4210 }, {  53,4210 }, {  54,4210 }, {  55,4210 },
 {  56,4210 }, {  57,4210 }, {   0,   0 }, {   0,   0 }, {  58,  78 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   1 }, {   0,11429 }, {  69,4247 }, {   0,  37 },
 {   0,11426 }, {   0,   2 }, {   0,11424 }, {   0,   5 }, {   0,11422 },
 {   0,   0 }, {   9,   0 }, {  10,   0 }, {   0,  35 }, {   0,11417 },

 {  13,   0 }, {   0,  36 }, {   0,11414 }, {   0,   3 }, {   0,11412 },
 {   0,   4 }, {   0,11410 }, {   0,   0 }, {   0,   0 }, {  48,4227 },
 {  49,4227 }, {  50,4227 }, {  51,4227 }, {  52,4227 }, {  53,4227 },
 {  54,4227 }, {  55,4227 }, {  56,4227 }, {  57,4227 }, {  32,   0 },
 { 101,4247 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,4319 }, {  66,4319 }, {  67,4319 }, {  68,4319 },
 {  69,4319 }, {  70,4319 }, {  71,4319 }, {  72,4319 }, {  73,4319 },
 {  74,4319 }, {  75,4319 }, {  76,4319 }, {  77,4319 }, {  78,4319 },
 {  79,4319 }, {  80,4319 }, {  81,4319 }, {  82,4319 }, {  83,4319 },
 {  84,4319 }, {  85,4319 }, {  86,4319 }, {  87,4319 }, {  88,4319 },

 {  89,4319 }, {  90,4319 }, {   0,  34 }, {   0,11363 }, {   0,   0 },
 {   0,   0 }, {  95,4319 }, { 124,  69 }, {  97,4319 }, {  98,4319 },
 {  99,4319 }, { 100,4319 }, { 101,4319 }, { 102,4319 }, { 103,4319 },
 { 104,4319 }, { 105,4319 }, { 106,4319 }, { 107,4319 }, { 108,4319 },
 { 109,4319 }, { 110,4319 }, { 111,4319 }, { 112,4319 }, { 113,4319 },
 { 114,4319 }, { 115,4319 }, { 116,4319 }, { 117,4319 }, { 118,4319 },
 { 119,4319 }, { 120,4319 }, { 121,4319 }, { 122,4319 }, {   0,   6 },
 {   0,11331 }, {   0,   6 }, {   0,11329 }, {   0,   9 }, {   0,11327 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  10,   2 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {  48,4135 }, {  49,4135 }, {  50,4135 }, {  51,4135 },
 {  52,4135 }, {  53,4135 }, {  54,4135 }, {  55,4135 }, {  56,4135 },
 {  57,4135 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,4227 }, {  66,4227 },
 {  67,4227 }, {  68,4227 }, {  69,4227 }, {  70,4227 }, {  71,4227 },
 {  72,4227 }, {  73,4227 }, {  74,4227 }, {  75,4227 }, {  76,4227 },
 {  77,4227 }, {  78,4227 }, {  79,4227 }, {  80,4227 }, {  81,4227 },
 {  82,4227 }, {  83,4227 }, {  84,4227 }, {  85,4227 }, {  86,4227 },
 {  87,4227 }, {  88,4227 }, {  89,4227 }, {  90,4227 }, {   0,  38 },
 {   0,11271 }, {   0,   0 }, {   0,   0 }, {  95,4227 }, {   0,   0 },

 {  97,4227 }, {  98,4227 }, {  99,4227 }, { 100,4227 }, { 101,4227 },
 { 102,4227 }, { 103,4227 }, { 104,4227 }, { 105,4227 }, { 106,4227 },
 { 107,4227 }, { 108,4227 }, { 109,4227 }, { 110,4227 }, { 111,4227 },
 { 112,4227 }, { 113,4227 }, { 114,4227 }, { 115,4227 }, { 116,4227 },
 { 117,4227 }, { 118,4227 }, { 119,4227 }, { 120,4227 }, { 121,4227 },
 { 122,4227 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,4043 }, {  49,4043 },
 {  50,4043 }, {  51,4043 }, {  52,4043 }, {  53,4043 }, {  54,4043 },

 {  55,4043 }, {  56,4043 }, {  57,4043 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,4135 }, {  66,4135 }, {  67,4135 }, {  68,4135 }, {  69,4135 },
 {  70,4135 }, {  71,4135 }, {  72,4135 }, {  73,4135 }, {  74,4135 },
 {  75,4135 }, {  76,4135 }, {  77,4135 }, {  78,4135 }, {  79,4135 },
 {  80,4135 }, {  81,4135 }, {  82,4135 }, {  83,4135 }, {  84,4135 },
 {  85,4135 }, {  86,4135 }, {  87,4135 }, {  88,4135 }, {  89,4135 },
 {  90,4135 }, {   0,  38 }, {   0,11179 }, {   0,   0 }, {   0,   0 },
 {  95,4135 }, {   0,   0 }, {  97,4135 }, {  98,4135 }, {  99,4135 },
 { 100,4135 }, { 101,4135 }, { 102,4135 }, { 103,4135 }, { 104,4135 },

 { 105,4135 }, { 106,4135 }, { 107,4135 }, { 108,4135 }, { 109,4135 },
 { 110,4135 }, { 111,4227 }, { 112,4135 }, { 113,4135 }, { 114,4135 },
 { 115,4135 }, { 116,4135 }, { 117,4135 }, { 118,4135 }, { 119,4135 },
 { 120,4135 }, { 121,4135 }, { 122,4135 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,3951 }, {  49,3951 }, {  50,3951 }, {  51,3951 }, {  52,3951 },
 {  53,3951 }, {  54,3951 }, {  55,3951 }, {  56,3951 }, {  57,3951 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  65,4043 }, {  66,4043 }, {  67,4043 },
 {  68,4043 }, {  69,4043 }, {  70,4043 }, {  71,4043 }, {  72,4043 },
 {  73,4043 }, {  74,4043 }, {  75,4043 }, {  76,4043 }, {  77,4043 },
 {  78,4043 }, {  79,4043 }, {  80,4043 }, {  81,4043 }, {  82,4043 },
 {  83,4043 }, {  84,4043 }, {  85,4043 }, {  86,4043 }, {  87,4043 },
 {  88,4043 }, {  89,4043 }, {  90,4043 }, {   0,  38 }, {   0,11087 },
 {   0,   0 }, {   0,   0 }, {  95,4043 }, {   0,   0 }, {  97,4043 },
 {  98,4043 }, {  99,4043 }, { 100,4043 }, { 101,4043 }, { 102,4043 },
 { 103,4043 }, { 104,4043 }, { 105,4043 }, { 106,4043 }, { 107,4043 },
 { 108,4043 }, { 109,4043 }, { 110,4227 }, { 111,4043 }, { 112,4043 },

 { 113,4043 }, { 114,4043 }, { 115,4043 }, { 116,4043 }, { 117,4043 },
 { 118,4043 }, { 119,4043 }, { 120,4319 }, { 121,4043 }, { 122,4043 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,3859 }, {  49,3859 }, {  50,3859 },
 {  51,3859 }, {  52,3859 }, {  53,3859 }, {  54,3859 }, {  55,3859 },
 {  56,3859 }, {  57,3859 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,3951 },
 {  66,3951 }, {  67,3951 }, {  68,3951 }, {  69,3951 }, {  70,3951 },

 {  71,3951 }, {  72,3951 }, {  73,3951 }, {  74,3951 }, {  75,3951 },
 {  76,3951 }, {  77,3951 }, {  78,3951 }, {  79,3951 }, {  80,3951 },
 {  81,3951 }, {  82,3951 }, {  83,3951 }, {  84,3951 }, {  85,3951 },
 {  86,3951 }, {  87,3951 }, {  88,3951 }, {  89,3951 }, {  90,3951 },
 {   0,  38 }, {   0,10995 }, {   0,   0 }, {   0,   0 }, {  95,3951 },
 {   0,   0 }, {  97,3951 }, {  98,3951 }, {  99,3951 }, { 100,3951 },
 { 101,3951 }, { 102,3951 }, { 103,3951 }, { 104,3951 }, { 105,3951 },
 { 106,3951 }, { 107,3951 }, { 108,4319 }, { 109,3951 }, { 110,4411 },
 { 111,3951 }, { 112,3951 }, { 113,3951 }, { 114,3951 }, { 115,3951 },
 { 116,3951 }, { 117,3951 }, { 118,3951 }, { 119,3951 }, { 120,3951 },

 { 121,3951 }, { 122,3951 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,3767 },
 {  49,3767 }, {  50,3767 }, {  51,3767 }, {  52,3767 }, {  53,3767 },
 {  54,3767 }, {  55,3767 }, {  56,3767 }, {  57,3767 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,3859 }, {  66,3859 }, {  67,3859 }, {  68,3859 },
 {  69,3859 }, {  70,3859 }, {  71,3859 }, {  72,3859 }, {  73,3859 },
 {  74,3859 }, {  75,3859 }, {  76,3859 }, {  77,3859 }, {  78,3859 },

 {  79,3859 }, {  80,3859 }, {  81,3859 }, {  82,3859 }, {  83,3859 },
 {  84,3859 }, {  85,3859 }, {  86,3859 }, {  87,3859 }, {  88,3859 },
 {  89,3859 }, {  90,3859 }, {   0,  38 }, {   0,10903 }, {   0,   0 },
 {   0,   0 }, {  95,3859 }, {   0,   0 }, {  97,3859 }, {  98,3859 },
 {  99,3859 }, { 100,3859 }, { 101,3859 }, { 102,3859 }, { 103,3859 },
 { 104,3859 }, { 105,3859 }, { 106,3859 }, { 107,3859 }, { 108,3859 },
 { 109,3859 }, { 110,4411 }, { 111,3859 }, { 112,3859 }, { 113,3859 },
 { 114,3859 }, { 115,3859 }, { 116,3859 }, { 117,3859 }, { 118,3859 },
 { 119,3859 }, { 120,3859 }, { 121,3859 }, { 122,3859 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,3675 }, {  49,3675 }, {  50,3675 }, {  51,3675 },
 {  52,3675 }, {  53,3675 }, {  54,3675 }, {  55,3675 }, {  56,3675 },
 {  57,3675 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,3767 }, {  66,3767 },
 {  67,3767 }, {  68,3767 }, {  69,3767 }, {  70,3767 }, {  71,3767 },
 {  72,3767 }, {  73,3767 }, {  74,3767 }, {  75,3767 }, {  76,3767 },
 {  77,3767 }, {  78,3767 }, {  79,3767 }, {  80,3767 }, {  81,3767 },
 {  82,3767 }, {  83,3767 }, {  84,3767 }, {  85,3767 }, {  86,3767 },

 {  87,3767 }, {  88,3767 }, {  89,3767 }, {  90,3767 }, {   0,  38 },
 {   0,10811 }, {   0,   0 }, {   0,   0 }, {  95,3767 }, {   0,   0 },
 {  97,3767 }, {  98,3767 }, {  99,3767 }, { 100,3767 }, { 101,4411 },
 { 102,3767 }, { 103,3767 }, { 104,3767 }, { 105,3767 }, { 106,3767 },
 { 107,3767 }, { 108,3767 }, { 109,3767 }, { 110,3767 }, { 111,3767 },
 { 112,3767 }, { 113,3767 }, { 114,3767 }, { 115,3767 }, { 116,3767 },
 { 117,3767 }, { 118,3767 }, { 119,3767 }, { 120,3767 }, { 121,3767 },
 { 122,3767 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,3583 }, {  49,3583 },
 {  50,3583 }, {  51,3583 }, {  52,3583 }, {  53,3583 }, {  54,3583 },
 {  55,3583 }, {  56,3583 }, {  57,3583 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,3675 }, {  66,3675 }, {  67,3675 }, {  68,3675 }, {  69,3675 },
 {  70,3675 }, {  71,3675 }, {  72,3675 }, {  73,3675 }, {  74,3675 },
 {  75,3675 }, {  76,3675 }, {  77,3675 }, {  78,3675 }, {  79,3675 },
 {  80,3675 }, {  81,3675 }, {  82,3675 }, {  83,3675 }, {  84,3675 },
 {  85,3675 }, {  86,3675 }, {  87,3675 }, {  88,3675 }, {  89,3675 },
 {  90,3675 }, {   0,  38 }, {   0,10719 }, {   0,   0 }, {   0,   0 },

 {  95,3675 }, {   0,   0 }, {  97,3675 }, {  98,3675 }, {  99,3675 },
 { 100,3675 }, { 101,3675 }, { 102,3675 }, { 103,3675 }, { 104,3675 },
 { 105,3675 }, { 106,3675 }, { 107,3675 }, { 108,3675 }, { 109,3675 },
 { 110,3675 }, { 111,3675 }, { 112,3675 }, { 113,3675 }, { 114,3675 },
 { 115,3675 }, { 116,4411 }, { 117,3675 }, { 118,3675 }, { 119,3675 },
 { 120,3675 }, { 121,3675 }, { 122,3675 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,3491 }, {  49,3491 }, {  50,3491 }, {  51,3491 }, {  52,3491 },

 {  53,3491 }, {  54,3491 }, {  55,3491 }, {  56,3491 }, {  57,3491 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,3583 }, {  66,3583 }, {  67,3583 },
 {  68,3583 }, {  69,3583 }, {  70,3583 }, {  71,3583 }, {  72,3583 },
 {  73,3583 }, {  74,3583 }, {  75,3583 }, {  76,3583 }, {  77,3583 },
 {  78,3583 }, {  79,3583 }, {  80,3583 }, {  81,3583 }, {  82,3583 },
 {  83,3583 }, {  84,3583 }, {  85,3583 }, {  86,3583 }, {  87,3583 },
 {  88,3583 }, {  89,3583 }, {  90,3583 }, {   0,  38 }, {   0,10627 },
 {   0,   0 }, {   0,   0 }, {  95,3583 }, {   0,   0 }, {  97,3583 },
 {  98,3583 }, {  99,3583 }, { 100,3583 }, { 101,3583 }, { 102,3583 },

 { 103,3583 }, { 104,3583 }, { 105,3583 }, { 106,3583 }, { 107,3583 },
 { 108,3583 }, { 109,3583 }, { 110,3583 }, { 111,3583 }, { 112,3583 },
 { 113,3583 }, { 114,3583 }, { 115,3583 }, { 116,3583 }, { 117,3583 },
 { 118,3583 }, { 119,3583 }, { 120,3583 }, { 121,4411 }, { 122,3583 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,3399 }, {  49,3399 }, {  50,3399 },
 {  51,3399 }, {  52,3399 }, {  53,3399 }, {  54,3399 }, {  55,3399 },
 {  56,3399 }, {  57,3399 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,3491 },
 {  66,3491 }, {  67,3491 }, {  68,3491 }, {  69,3491 }, {  70,3491 },
 {  71,3491 }, {  72,3491 }, {  73,3491 }, {  74,3491 }, {  75,3491 },
 {  76,3491 }, {  77,3491 }, {  78,3491 }, {  79,3491 }, {  80,3491 },
 {  81,3491 }, {  82,3491 }, {  83,3491 }, {  84,3491 }, {  85,3491 },
 {  86,3491 }, {  87,3491 }, {  88,3491 }, {  89,3491 }, {  90,3491 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,3491 },
 {   0,   0 }, {  97,4411 }, {  98,3491 }, {  99,3491 }, { 100,3491 },
 { 101,3491 }, { 102,3491 }, { 103,3491 }, { 104,3491 }, { 105,3491 },
 { 106,3491 }, { 107,3491 }, { 108,3491 }, { 109,3491 }, { 110,3491 },

 { 111,3491 }, { 112,3491 }, { 113,3491 }, { 114,3491 }, { 115,3491 },
 { 116,3491 }, { 117,3491 }, { 118,3491 }, { 119,3491 }, { 120,3491 },
 { 121,3491 }, { 122,3491 }, {   0,   3 }, {   0,10503 }, {   1,4411 },
 {   2,4411 }, {   3,4411 }, {   4,4411 }, {   5,4411 }, {   6,4411 },
 {   7,4411 }, {   8,4411 }, {   9,4411 }, {  10,4411 }, {  11,4411 },
 {  12,4411 }, {  13,4411 }, {  14,4411 }, {  15,4411 }, {  16,4411 },
 {  17,4411 }, {  18,4411 }, {  19,4411 }, {  20,4411 }, {  21,4411 },
 {  22,4411 }, {  23,4411 }, {  24,4411 }, {  25,4411 }, {  26,4411 },
 {  27,4411 }, {  28,4411 }, {  29,4411 }, {  30,4411 }, {  31,4411 },
 {  32,4411 }, {  33,4411 }, {  34,4411 }, {  35,4411 }, {  36,4411 },

 {  37,4411 }, {  38,4411 }, {  39,4411 }, {  40,4411 }, {  41,4411 },
 {   0,   0 }, {  43,4411 }, {  44,4411 }, {  45,4411 }, {  46,4411 },
 {  47,4411 }, {  48,4411 }, {  49,4411 }, {  50,4411 }, {  51,4411 },
 {  52,4411 }, {  53,4411 }, {  54,4411 }, {  55,4411 }, {  56,4411 },
 {  57,4411 }, {  58,4411 }, {  59,4411 }, {  60,4411 }, {  61,4411 },
 {  62,4411 }, {  63,4411 }, {  64,4411 }, {  65,4411 }, {  66,4411 },
 {  67,4411 }, {  68,4411 }, {  69,4411 }, {  70,4411 }, {  71,4411 },
 {  72,4411 }, {  73,4411 }, {  74,4411 }, {  75,4411 }, {  76,4411 },
 {  77,4411 }, {  78,4411 }, {  79,4411 }, {  80,4411 }, {  81,4411 },
 {  82,4411 }, {  83,4411 }, {  84,4411 }, {  85,4411 }, {  86,4411 },

 {  87,4411 }, {  88,4411 }, {  89,4411 }, {  90,4411 }, {  91,4411 },
 {  92,4411 }, {  93,4411 }, {  94,4411 }, {  95,4411 }, {  96,4411 },
 {  97,4411 }, {  98,4411 }, {  99,4411 }, { 100,4411 }, { 101,4411 },
 { 102,4411 }, { 103,4411 }, { 104,4411 }, { 105,4411 }, { 106,4411 },
 { 107,4411 }, { 108,4411 }, { 109,4411 }, { 110,4411 }, { 111,4411 },
 { 112,4411 }, { 113,4411 }, { 114,4411 }, { 115,4411 }, { 116,4411 },
 { 117,4411 }, { 118,4411 }, { 119,4411 }, { 120,4411 }, { 121,4411 },
 { 122,4411 }, { 123,4411 }, { 124,4411 }, { 125,4411 }, { 126,4411 },
 { 127,4411 }, { 128,4411 }, { 129,4411 }, { 130,4411 }, { 131,4411 },
 { 132,4411 }, { 133,4411 }, { 134,4411 }, { 135,4411 }, { 136,4411 },

 { 137,4411 }, { 138,4411 }, { 139,4411 }, { 140,4411 }, { 141,4411 },
 { 142,4411 }, { 143,4411 }, { 144,4411 }, { 145,4411 }, { 146,4411 },
 { 147,4411 }, { 148,4411 }, { 149,4411 }, { 150,4411 }, { 151,4411 },
 { 152,4411 }, { 153,4411 }, { 154,4411 }, { 155,4411 }, { 156,4411 },
 { 157,4411 }, { 158,4411 }, { 159,4411 }, { 160,4411 }, { 161,4411 },
 { 162,4411 }, { 163,4411 }, { 164,4411 }, { 165,4411 }, { 166,4411 },
 { 167,4411 }, { 168,4411 }, { 169,4411 }, { 170,4411 }, { 171,4411 },
 { 172,4411 }, { 173,4411 }, { 174,4411 }, { 175,4411 }, { 176,4411 },
 { 177,4411 }, { 178,4411 }, { 179,4411 }, { 180,4411 }, { 181,4411 },
 { 182,4411 }, { 183,4411 }, { 184,4411 }, { 185,4411 }, { 186,4411 },

 { 187,4411 }, { 188,4411 }, { 189,4411 }, { 190,4411 }, { 191,4411 },
 { 192,4411 }, { 193,4411 }, { 194,4411 }, { 195,4411 }, { 196,4411 },
 { 197,4411 }, { 198,4411 }, { 199,4411 }, { 200,4411 }, { 201,4411 },
 { 202,4411 }, { 203,4411 }, { 204,4411 }, { 205,4411 }, { 206,4411 },
 { 207,4411 }, { 208,4411 }, { 209,4411 }, { 210,4411 }, { 211,4411 },
 { 212,4411 }, { 213,4411 }, { 214,4411 }, { 215,4411 }, { 216,4411 },
 { 217,4411 }, { 218,4411 }, { 219,4411 }, { 220,4411 }, { 221,4411 },
 { 222,4411 }, { 223,4411 }, { 224,4411 }, { 225,4411 }, { 226,4411 },
 { 227,4411 }, { 228,4411 }, { 229,4411 }, { 230,4411 }, { 231,4411 },
 { 232,4411 }, { 233,4411 }, { 234,4411 }, { 235,4411 }, { 236,4411 },

 { 237,4411 }, { 238,4411 }, { 239,4411 }, { 240,4411 }, { 241,4411 },
 { 242,4411 }, { 243,4411 }, { 244,4411 }, { 245,4411 }, { 246,4411 },
 { 247,4411 }, { 248,4411 }, { 249,4411 }, { 250,4411 }, { 251,4411 },
 { 252,4411 }, { 253,4411 }, { 254,4411 }, { 255,4411 }, { 256,4411 },
 {   0,  41 }, {   0,10245 }, {   1,-1167 }, {   2,-1167 }, {   3,-1167 },
 {   4,-1167 }, {   5,-1167 }, {   6,-1167 }, {   7,-1167 }, {   8,-1167 },
 {   9,-1167 }, {  10,-1167 }, {  11,-1167 }, {  12,-1167 }, {  13,-1167 },
 {  14,-1167 }, {  15,-1167 }, {  16,-1167 }, {  17,-1167 }, {  18,-1167 },
 {  19,-1167 }, {  20,-1167 }, {  21,-1167 }, {  22,-1167 }, {  23,-1167 },
 {  24,-1167 }, {  25,-1167 }, {  26,-1167 }, {  27,-1167 }, {  28,-1167 },

 {  29,-1167 }, {  30,-1167 }, {  31,-1167 }, {  32,-1167 }, {  33,-1167 },
 {  34,-1167 }, {  35,-1167 }, {  36,-1167 }, {  37,-1167 }, {  38,-1167 },
 {  39,-1167 }, {  40,-1167 }, {  41,-1167 }, {  42,-1167 }, {  43,-1167 },
 {  44,-1167 }, {  45,-1167 }, {  46,-1167 }, {  47,-1165 }, {  48,-1167 },
 {  49,-1167 }, {  50,-1167 }, {  51,-1167 }, {  52,-1167 }, {  53,-1167 },
 {  54,-1167 }, {  55,-1167 }, {  56,-1167 }, {  57,-1167 }, {  58,-1167 },
 {  59,-1167 }, {  60,-1167 }, {  61,-1167 }, {  62,-1167 }, {  63,-1167 },
 {  64,-1167 }, {  65,-1167 }, {  66,-1167 }, {  67,-1167 }, {  68,-1167 },
 {  69,-1167 }, {  70,-1167 }, {  71,-1167 }, {  72,-1167 }, {  73,-1167 },
 {  74,-1167 }, {  75,-1167 }, {  76,-1167 }, {  77,-1167 }, {  78,-1167 },

 {  79,-1167 }, {  80,-1167 }, {  81,-1167 }, {  82,-1167 }, {  83,-1167 },
 {  84,-1167 }, {  85,-1167 }, {  86,-1167 }, {  87,-1167 }, {  88,-1167 },
 {  89,-1167 }, {  90,-1167 }, {  91,-1167 }, {  92,-1167 }, {  93,-1167 },
 {  94,-1167 }, {  95,-1167 }, {  96,-1167 }, {  97,-1167 }, {  98,-1167 },
 {  99,-1167 }, { 100,-1167 }, { 101,-1167 }, { 102,-1167 }, { 103,-1167 },
 { 104,-1167 }, { 105,-1167 }, { 106,-1167 }, { 107,-1167 }, { 108,-1167 },
 { 109,-1167 }, { 110,-1167 }, { 111,-1167 }, { 112,-1167 }, { 113,-1167 },
 { 114,-1167 }, { 115,-1167 }, { 116,-1167 }, { 117,-1167 }, { 118,-1167 },
 { 119,-1167 }, { 120,-1167 }, { 121,-1167 }, { 122,-1167 }, { 123,-1167 },
 { 124,-1167 }, { 125,-1167 }, { 126,-1167 }, { 127,-1167 }, { 128,-1167 },

 { 129,-1167 }, { 130,-1167 }, { 131,-1167 }, { 132,-1167 }, { 133,-1167 },
 { 134,-1167 }, { 135,-1167 }, { 136,-1167 }, { 137,-1167 }, { 138,-1167 },
 { 139,-1167 }, { 140,-1167 }, { 141,-1167 }, { 142,-1167 }, { 143,-1167 },
 { 144,-1167 }, { 145,-1167 }, { 146,-1167 }, { 147,-1167 }, { 148,-1167 },
 { 149,-1167 }, { 150,-1167 }, { 151,-1167 }, { 152,-1167 }, { 153,-1167 },
 { 154,-1167 }, { 155,-1167 }, { 156,-1167 }, { 157,-1167 }, { 158,-1167 },
 { 159,-1167 }, { 160,-1167 }, { 161,-1167 }, { 162,-1167 }, { 163,-1167 },
 { 164,-1167 }, { 165,-1167 }, { 166,-1167 }, { 167,-1167 }, { 168,-1167 },
 { 169,-1167 }, { 170,-1167 }, { 171,-1167 }, { 172,-1167 }, { 173,-1167 },
 { 174,-1167 }, { 175,-1167 }, { 176,-1167 }, { 177,-1167 }, { 178,-1167 },

 { 179,-1167 }, { 180,-1167 }, { 181,-1167 }, { 182,-1167 }, { 183,-1167 },
 { 184,-1167 }, { 185,-1167 }, { 186,-1167 }, { 187,-1167 }, { 188,-1167 },
 { 189,-1167 }, { 190,-1167 }, { 191,-1167 }, { 192,-1167 }, { 193,-1167 },
 { 194,-1167 }, { 195,-1167 }, { 196,-1167 }, { 197,-1167 }, { 198,-1167 },
 { 199,-1167 }, { 200,-1167 }, { 201,-1167 }, { 202,-1167 }, { 203,-1167 },
 { 204,-1167 }, { 205,-1167 }, { 206,-1167 }, { 207,-1167 }, { 208,-1167 },
 { 209,-1167 }, { 210,-1167 }, { 211,-1167 }, { 212,-1167 }, { 213,-1167 },
 { 214,-1167 }, { 215,-1167 }, { 216,-1167 }, { 217,-1167 }, { 218,-1167 },
 { 219,-1167 }, { 220,-1167 }, { 221,-1167 }, { 222,-1167 }, { 223,-1167 },
 { 224,-1167 }, { 225,-1167 }, { 226,-1167 }, { 227,-1167 }, { 228,-1167 },

 { 229,-1167 }, { 230,-1167 }, { 231,-1167 }, { 232,-1167 }, { 233,-1167 },
 { 234,-1167 }, { 235,-1167 }, { 236,-1167 }, { 237,-1167 }, { 238,-1167 },
 { 239,-1167 }, { 240,-1167 }, { 241,-1167 }, { 242,-1167 }, { 243,-1167 },
 { 244,-1167 }, { 245,-1167 }, { 246,-1167 }, { 247,-1167 }, { 248,-1167 },
 { 249,-1167 }, { 250,-1167 }, { 251,-1167 }, { 252,-1167 }, { 253,-1167 },
 { 254,-1167 }, { 255,-1167 }, { 256,-1167 }, {   0,   3 }, {   0,9987 },
 {   1,3895 }, {   2,3895 }, {   3,3895 }, {   4,3895 }, {   5,3895 },
 {   6,3895 }, {   7,3895 }, {   8,3895 }, {   9,3895 }, {  10,3895 },
 {  11,3895 }, {  12,3895 }, {  13,3895 }, {  14,3895 }, {  15,3895 },
 {  16,3895 }, {  17,3895 }, {  18,3895 }, {  19,3895 }, {  20,3895 },

 {  21,3895 }, {  22,3895 }, {  23,3895 }, {  24,3895 }, {  25,3895 },
 {  26,3895 }, {  27,3895 }, {  28,3895 }, {  29,3895 }, {  30,3895 },
 {  31,3895 }, {  32,3895 }, {  33,3895 }, {  34,3895 }, {  35,3895 },
 {  36,3895 }, {  37,3895 }, {  38,3895 }, {  39,3895 }, {  40,3895 },
 {  41,3895 }, {  42,-1437 }, {  43,3895 }, {  44,3895 }, {  45,3895 },
 {  46,3895 }, {  47,3895 }, {  48,3895 }, {  49,3895 }, {  50,3895 },
 {  51,3895 }, {  52,3895 }, {  53,3895 }, {  54,3895 }, {  55,3895 },
 {  56,3895 }, {  57,3895 }, {  58,3895 }, {  59,3895 }, {  60,3895 },
 {  61,3895 }, {  62,3895 }, {  63,3895 }, {  64,3895 }, {  65,3895 },
 {  66,3895 }, {  67,3895 }, {  68,3895 }, {  69,3895 }, {  70,3895 },

 {  71,3895 }, {  72,3895 }, {  73,3895 }, {  74,3895 }, {  75,3895 },
 {  76,3895 }, {  77,3895 }, {  78,3895 }, {  79,3895 }, {  80,3895 },
 {  81,3895 }, {  82,3895 }, {  83,3895 }, {  84,3895 }, {  85,3895 },
 {  86,3895 }, {  87,3895 }, {  88,3895 }, {  89,3895 }, {  90,3895 },
 {  91,3895 }, {  92,3895 }, {  93,3895 }, {  94,3895 }, {  95,3895 },
 {  96,3895 }, {  97,3895 }, {  98,3895 }, {  99,3895 }, { 100,3895 },
 { 101,3895 }, { 102,3895 }, { 103,3895 }, { 104,3895 }, { 105,3895 },
 { 106,3895 }, { 107,3895 }, { 108,3895 }, { 109,3895 }, { 110,3895 },
 { 111,3895 }, { 112,3895 }, { 113,3895 }, { 114,3895 }, { 115,3895 },
 { 116,3895 }, { 117,3895 }, { 118,3895 }, { 119,3895 }, { 120,3895 },

 { 121,3895 }, { 122,3895 }, { 123,3895 }, { 124,3895 }, { 125,3895 },
 { 126,3895 }, { 127,3895 }, { 128,3895 }, { 129,3895 }, { 130,3895 },
 { 131,3895 }, { 132,3895 }, { 133,3895 }, { 134,3895 }, { 135,3895 },
 { 136,3895 }, { 137,3895 }, { 138,3895 }, { 139,3895 }, { 140,3895 },
 { 141,3895 }, { 142,3895 }, { 143,3895 }, { 144,3895 }, { 145,3895 },
 { 146,3895 }, { 147,3895 }, { 148,3895 }, { 149,3895 }, { 150,3895 },
 { 151,3895 }, { 152,3895 }, { 153,3895 }, { 154,3895 }, { 155,3895 },
 { 156,3895 }, { 157,3895 }, { 158,3895 }, { 159,3895 }, { 160,3895 },
 { 161,3895 }, { 162,3895 }, { 163,3895 }, { 164,3895 }, { 165,3895 },
 { 166,3895 }, { 167,3895 }, { 168,3895 }, { 169,3895 }, { 170,3895 },

 { 171,3895 }, { 172,3895 }, { 173,3895 }, { 174,3895 }, { 175,3895 },
 { 176,3895 }, { 177,3895 }, { 178,3895 }, { 179,3895 }, { 180,3895 },
 { 181,3895 }, { 182,3895 }, { 183,3895 }, { 184,3895 }, { 185,3895 },
 { 186,3895 }, { 187,3895 }, { 188,3895 }, { 189,3895 }, { 190,3895 },
 { 191,3895 }, { 192,3895 }, { 193,3895 }, { 194,3895 }, { 195,3895 },
 { 196,3895 }, { 197,3895 }, { 198,3895 }, { 199,3895 }, { 200,3895 },
 { 201,3895 }, { 202,3895 }, { 203,3895 }, { 204,3895 }, { 205,3895 },
 { 206,3895 }, { 207,3895 }, { 208,3895 }, { 209,3895 }, { 210,3895 },
 { 211,3895 }, { 212,3895 }, { 213,3895 }, { 214,3895 }, { 215,3895 },
 { 216,3895 }, { 217,3895 }, { 218,3895 }, { 219,3895 }, { 220,3895 },

 { 221,3895 }, { 222,3895 }, { 223,3895 }, { 224,3895 }, { 225,3895 },
 { 226,3895 }, { 227,3895 }, { 228,3895 }, { 229,3895 }, { 230,3895 },
 { 231,3895 }, { 232,3895 }, { 233,3895 }, { 234,3895 }, { 235,3895 },
 { 236,3895 }, { 237,3895 }, { 238,3895 }, { 239,3895 }, { 240,3895 },
 { 241,3895 }, { 242,3895 }, { 243,3895 }, { 244,3895 }, { 245,3895 },
 { 246,3895 }, { 247,3895 }, { 248,3895 }, { 249,3895 }, { 250,3895 },
 { 251,3895 }, { 252,3895 }, { 253,3895 }, { 254,3895 }, { 255,3895 },
 { 256,3895 }, {   0,   3 }, {   0,9729 }, {   1,3637 }, {   2,3637 },
 {   3,3637 }, {   4,3637 }, {   5,3637 }, {   6,3637 }, {   7,3637 },
 {   8,3637 }, {   9,3637 }, {  10,3637 }, {  11,3637 }, {  12,3637 },

 {  13,3637 }, {  14,3637 }, {  15,3637 }, {  16,3637 }, {  17,3637 },
 {  18,3637 }, {  19,3637 }, {  20,3637 }, {  21,3637 }, {  22,3637 },
 {  23,3637 }, {  24,3637 }, {  25,3637 }, {  26,3637 }, {  27,3637 },
 {  28,3637 }, {  29,3637 }, {  30,3637 }, {  31,3637 }, {  32,3637 },
 {  33,3637 }, {  34,3637 }, {  35,3637 }, {  36,3637 }, {  37,3637 },
 {  38,3637 }, {  39,3637 }, {  40,3637 }, {  41,3637 }, {   0,   0 },
 {  43,3637 }, {  44,3637 }, {  45,3637 }, {  46,3637 }, {  47,3637 },
 {  48,3637 }, {  49,3637 }, {  50,3637 }, {  51,3637 }, {  52,3637 },
 {  53,3637 }, {  54,3637 }, {  55,3637 }, {  56,3637 }, {  57,3637 },
 {  58,3637 }, {  59,3637 }, {  60,3637 }, {  61,3637 }, {  62,3637 },

 {  63,3637 }, {  64,3637 }, {  65,3637 }, {  66,3637 }, {  67,3637 },
 {  68,3637 }, {  69,3637 }, {  70,3637 }, {  71,3637 }, {  72,3637 },
 {  73,3637 }, {  74,3637 }, {  75,3637 }, {  76,3637 }, {  77,3637 },
 {  78,3637 }, {  79,3637 }, {  80,3637 }, {  81,3637 }, {  82,3637 },
 {  83,3637 }, {  84,3637 }, {  85,3637 }, {  86,3637 }, {  87,3637 },
 {  88,3637 }, {  89,3637 }, {  90,3637 }, {  91,3637 }, {  92,3637 },
 {  93,3637 }, {  94,3637 }, {  95,3637 }, {  96,3637 }, {  97,3637 },
 {  98,3637 }, {  99,3637 }, { 100,3637 }, { 101,3637 }, { 102,3637 },
 { 103,3637 }, { 104,3637 }, { 105,3637 }, { 106,3637 }, { 107,3637 },
 { 108,3637 }, { 109,3637 }, { 110,3637 }, { 111,3637 }, { 112,3637 },

 { 113,3637 }, { 114,3637 }, { 115,3637 }, { 116,3637 }, { 117,3637 },
 { 118,3637 }, { 119,3637 }, { 120,3637 }, { 121,3637 }, { 122,3637 },
 { 123,3637 }, { 124,3637 }, { 125,3637 }, { 126,3637 }, { 127,3637 },
 { 128,3637 }, { 129,3637 }, { 130,3637 }, { 131,3637 }, { 132,3637 },
 { 133,3637 }, { 134,3637 }, { 135,3637 }, { 136,3637 }, { 137,3637 },
 { 138,3637 }, { 139,3637 }, { 140,3637 }, { 141,3637 }, { 142,3637 },
 { 143,3637 }, { 144,3637 }, { 145,3637 }, { 146,3637 }, { 147,3637 },
 { 148,3637 }, { 149,3637 }, { 150,3637 }, { 151,3637 }, { 152,3637 },
 { 153,3637 }, { 154,3637 }, { 155,3637 }, { 156,3637 }, { 157,3637 },
 { 158,3637 }, { 159,3637 }, { 160,3637 }, { 161,3637 }, { 162,3637 },

 { 163,3637 }, { 164,3637 }, { 165,3637 }, { 166,3637 }, { 167,3637 },
 { 168,3637 }, { 169,3637 }, { 170,3637 }, { 171,3637 }, { 172,3637 },
 { 173,3637 }, { 174,3637 }, { 175,3637 }, { 176,3637 }, { 177,3637 },
 { 178,3637 }, { 179,3637 }, { 180,3637 }, { 181,3637 }, { 182,3637 },
 { 183,3637 }, { 184,3637 }, { 185,3637 }, { 186,3637 }, { 187,3637 },
 { 188,3637 }, { 189,3637 }, { 190,3637 }, { 191,3637 }, { 192,3637 },
 { 193,3637 }, { 194,3637 }, { 195,3637 }, { 196,3637 }, { 197,3637 },
 { 198,3637 }, { 199,3637 }, { 200,3637 }, { 201,3637 }, { 202,3637 },
 { 203,3637 }, { 204,3637 }, { 205,3637 }, { 206,3637 }, { 207,3637 },
 { 208,3637 }, { 209,3637 }, { 210,3637 }, { 211,3637 }, { 212,3637 },

 { 213,3637 }, { 214,3637 }, { 215,3637 }, { 216,3637 }, { 217,3637 },
 { 218,3637 }, { 219,3637 }, { 220,3637 }, { 221,3637 }, { 222,3637 },
 { 223,3637 }, { 224,3637 }, { 225,3637 }, { 226,3637 }, { 227,3637 },
 { 228,3637 }, { 229,3637 }, { 230,3637 }, { 231,3637 }, { 232,3637 },
 { 233,3637 }, { 234,3637 }, { 235,3637 }, { 236,3637 }, { 237,3637 },
 { 238,3637 }, { 239,3637 }, { 240,3637 }, { 241,3637 }, { 242,3637 },
 { 243,3637 }, { 244,3637 }, { 245,3637 }, { 246,3637 }, { 247,3637 },
 { 248,3637 }, { 249,3637 }, { 250,3637 }, { 251,3637 }, { 252,3637 },
 { 253,3637 }, { 254,3637 }, { 255,3637 }, { 256,3637 }, {   0,   3 },
 {   0,9471 }, {   1,3379 }, {   2,3379 }, {   3,3379 }, {   4,3379 },

 {   5,3379 }, {   6,3379 }, {   7,3379 }, {   8,3379 }, {   9,3379 },
 {  10,3379 }, {  11,3379 }, {  12,3379 }, {  13,3379 }, {  14,3379 },
 {  15,3379 }, {  16,3379 }, {  17,3379 }, {  18,3379 }, {  19,3379 },
 {  20,3379 }, {  21,3379 }, {  22,3379 }, {  23,3379 }, {  24,3379 },
 {  25,3379 }, {  26,3379 }, {  27,3379 }, {  28,3379 }, {  29,3379 },
 {  30,3379 }, {  31,3379 }, {  32,3379 }, {  33,3379 }, {  34,3379 },
 {  35,3379 }, {  36,3379 }, {  37,3379 }, {  38,3379 }, {  39,3379 },
 {  40,3379 }, {  41,3379 }, {   0,   0 }, {  43,3379 }, {  44,3379 },
 {  45,3379 }, {  46,3379 }, {  47,3379 }, {  48,3379 }, {  49,3379 },
 {  50,3379 }, {  51,3379 }, {  52,3379 }, {  53,3379 }, {  54,3379 },

 {  55,3379 }, {  56,3379 }, {  57,3379 }, {  58,3379 }, {  59,3379 },
 {  60,3379 }, {  61,3379 }, {  62,3379 }, {  63,3379 }, {  64,3379 },
 {  65,3379 }, {  66,3379 }, {  67,3379 }, {  68,3379 }, {  69,3379 },
 {  70,3379 }, {  71,3379 }, {  72,3379 }, {  73,3379 }, {  74,3379 },
 {  75,3379 }, {  76,3379 }, {  77,3379 }, {  78,3379 }, {  79,3379 },
 {  80,3379 }, {  81,3379 }, {  82,3379 }, {  83,3379 }, {  84,3379 },
 {  85,3379 }, {  86,3379 }, {  87,3379 }, {  88,3379 }, {  89,3379 },
 {  90,3379 }, {  91,3379 }, {  92,3379 }, {  93,3379 }, {  94,3379 },
 {  95,3379 }, {  96,3379 }, {  97,3379 }, {  98,3379 }, {  99,3379 },
 { 100,3379 }, { 101,3379 }, { 102,3379 }, { 103,3379 }, { 104,3379 },

 { 105,3379 }, { 106,3379 }, { 107,3379 }, { 108,3379 }, { 109,3379 },
 { 110,3379 }, { 111,3379 }, { 112,3379 }, { 113,3379 }, { 114,3379 },
 { 115,3379 }, { 116,3379 }, { 117,3379 }, { 118,3379 }, { 119,3379 },
 { 120,3379 }, { 121,3379 }, { 122,3379 }, { 123,3379 }, { 124,3379 },
 { 125,3379 }, { 126,3379 }, { 127,3379 }, { 128,3637 }, { 129,3637 },
 { 130,3637 }, { 131,3637 }, { 132,3637 }, { 133,3637 }, { 134,3637 },
 { 135,3637 }, { 136,3637 }, { 137,3637 }, { 138,3637 }, { 139,3637 },
 { 140,3637 }, { 141,3637 }, { 142,3637 }, { 143,3637 }, { 144,3637 },
 { 145,3637 }, { 146,3637 }, { 147,3637 }, { 148,3637 }, { 149,3637 },
 { 150,3637 }, { 151,3637 }, { 152,3637 }, { 153,3637 }, { 154,3637 },

 { 155,3637 }, { 156,3637 }, { 157,3637 }, { 158,3637 }, { 159,3637 },
 { 160,3637 }, { 161,3637 }, { 162,3637 }, { 163,3637 }, { 164,3637 },
 { 165,3637 }, { 166,3637 }, { 167,3637 }, { 168,3637 }, { 169,3637 },
 { 170,3637 }, { 171,3637 }, { 172,3637 }, { 173,3637 }, { 174,3637 },
 { 175,3637 }, { 176,3637 }, { 177,3637 }, { 178,3637 }, { 179,3637 },
 { 180,3637 }, { 181,3637 }, { 182,3637 }, { 183,3637 }, { 184,3637 },
 { 185,3637 }, { 186,3637 }, { 187,3637 }, { 188,3637 }, { 189,3637 },
 { 190,3637 }, { 191,3637 }, { 192,3379 }, { 193,3379 }, { 194,3379 },
 { 195,3379 }, { 196,3379 }, { 197,3379 }, { 198,3379 }, { 199,3379 },
 { 200,3379 }, { 201,3379 }, { 202,3379 }, { 203,3379 }, { 204,3379 },

 { 205,3379 }, { 206,3379 }, { 207,3379 }, { 208,3379 }, { 209,3379 },
 { 210,3379 }, { 211,3379 }, { 212,3379 }, { 213,3379 }, { 214,3379 },
 { 215,3379 }, { 216,3379 }, { 217,3379 }, { 218,3379 }, { 219,3379 },
 { 220,3379 }, { 221,3379 }, { 222,3379 }, { 223,3379 }, { 224,3379 },
 { 225,3379 }, { 226,3379 }, { 227,3379 }, { 228,3379 }, { 229,3379 },
 { 230,3379 }, { 231,3379 }, { 232,3379 }, { 233,3379 }, { 234,3379 },
 { 235,3379 }, { 236,3379 }, { 237,3379 }, { 238,3379 }, { 239,3379 },
 { 240,3379 }, { 241,3379 }, { 242,3379 }, { 243,3379 }, { 244,3379 },
 { 245,3379 }, { 246,3379 }, { 247,3379 }, { 248,3379 }, { 249,3379 },
 { 250,3379 }, { 251,3379 }, { 252,3379 }, { 253,3379 }, { 254,3379 },

 { 255,3379 }, { 256,3379 }, {   0,   3 }, {   0,9213 }, {   1,3121 },
 {   2,3121 }, {   3,3121 }, {   4,3121 }, {   5,3121 }, {   6,3121 },
 {   7,3121 }, {   8,3121 }, {   9,3121 }, {  10,3121 }, {  11,3121 },
 {  12,3121 }, {  13,3121 }, {  14,3121 }, {  15,3121 }, {  16,3121 },
 {  17,3121 }, {  18,3121 }, {  19,3121 }, {  20,3121 }, {  21,3121 },
 {  22,3121 }, {  23,3121 }, {  24,3121 }, {  25,3121 }, {  26,3121 },
 {  27,3121 }, {  28,3121 }, {  29,3121 }, {  30,3121 }, {  31,3121 },
 {  32,3121 }, {  33,3121 }, {  34,3121 }, {  35,3121 }, {  36,3121 },
 {  37,3121 }, {  38,3121 }, {  39,3121 }, {  40,3121 }, {  41,3121 },
 {   0,   0 }, {  43,3121 }, {  44,3121 }, {  45,3121 }, {  46,3121 },

 {  47,3121 }, {  48,3121 }, {  49,3121 }, {  50,3121 }, {  51,3121 },
 {  52,3121 }, {  53,3121 }, {  54,3121 }, {  55,3121 }, {  56,3121 },
 {  57,3121 }, {  58,3121 }, {  59,3121 }, {  60,3121 }, {  61,3121 },
 {  62,3121 }, {  63,3121 }, {  64,3121 }, {  65,3121 }, {  66,3121 },
 {  67,3121 }, {  68,3121 }, {  69,3121 }, {  70,3121 }, {  71,3121 },
 {  72,3121 }, {  73,3121 }, {  74,3121 }, {  75,3121 }, {  76,3121 },
 {  77,3121 }, {  78,3121 }, {  79,3121 }, {  80,3121 }, {  81,3121 },
 {  82,3121 }, {  83,3121 }, {  84,3121 }, {  85,3121 }, {  86,3121 },
 {  87,3121 }, {  88,3121 }, {  89,3121 }, {  90,3121 }, {  91,3121 },
 {  92,3121 }, {  93,3121 }, {  94,3121 }, {  95,3121 }, {  96,3121 },

 {  97,3121 }, {  98,3121 }, {  99,3121 }, { 100,3121 }, { 101,3121 },
 { 102,3121 }, { 103,3121 }, { 104,3121 }, { 105,3121 }, { 106,3121 },
 { 107,3121 }, { 108,3121 }, { 109,3121 }, { 110,3121 }, { 111,3121 },
 { 112,3121 }, { 113,3121 }, { 114,3121 }, { 115,3121 }, { 116,3121 },
 { 117,3121 }, { 118,3121 }, { 119,3121 }, { 120,3121 }, { 121,3121 },
 { 122,3121 }, { 123,3121 }, { 124,3121 }, { 125,3121 }, { 126,3121 },
 { 127,3121 }, { 128,3637 }, { 129,3637 }, { 130,3637 }, { 131,3637 },
 { 132,3637 }, { 133,3637 }, { 134,3637 }, { 135,3637 }, { 136,3637 },
 { 137,3637 }, { 138,3637 }, { 139,3637 }, { 140,3637 }, { 141,3637 },
 { 142,3637 }, { 143,3637 }, { 144,3637 }, { 145,3637 }, { 146,3637 },

 { 147,3637 }, { 148,3637 }, { 149,3637 }, { 150,3637 }, { 151,3637 },
 { 152,3637 }, { 153,3637 }, { 154,3637 }, { 155,3637 }, { 156,3637 },
 { 157,3637 }, { 158,3637 }, { 159,3637 }, { 160,3637 }, { 161,3637 },
 { 162,3637 }, { 163,3637 }, { 164,3637 }, { 165,3637 }, { 166,3637 },
 { 167,3637 }, { 168,3637 }, { 169,3637 }, { 170,3637 }, { 171,3637 },
 { 172,3637 }, { 173,3637 }, { 174,3637 }, { 175,3637 }, { 176,3637 },
 { 177,3637 }, { 178,3637 }, { 179,3637 }, { 180,3637 }, { 181,3637 },
 { 182,3637 }, { 183,3637 }, { 184,3637 }, { 185,3637 }, { 186,3637 },
 { 187,3637 }, { 188,3637 }, { 189,3637 }, { 190,3637 }, { 191,3637 },
 { 192,3121 }, { 193,3121 }, { 194,3121 }, { 195,3121 }, { 196,3121 },

 { 197,3121 }, { 198,3121 }, { 199,3121 }, { 200,3121 }, { 201,3121 },
 { 202,3121 }, { 203,3121 }, { 204,3121 }, { 205,3121 }, { 206,3121 },
 { 207,3121 }, { 208,3121 }, { 209,3121 }, { 210,3121 }, { 211,3121 },
 { 212,3121 }, { 213,3121 }, { 214,3121 }, { 215,3121 }, { 216,3121 },
 { 217,3121 }, { 218,3121 }, { 219,3121 }, { 220,3121 }, { 221,3121 },
 { 222,3121 }, { 223,3121 }, { 224,3121 }, { 225,3121 }, { 226,3121 },
 { 227,3121 }, { 228,3121 }, { 229,3121 }, { 230,3121 }, { 231,3121 },
 { 232,3121 }, { 233,3121 }, { 234,3121 }, { 235,3121 }, { 236,3121 },
 { 237,3121 }, { 238,3121 }, { 239,3121 }, { 240,3121 }, { 241,3121 },
 { 242,3121 }, { 243,3121 }, { 244,3121 }, { 245,3121 }, { 246,3121 },

 { 247,3121 }, { 248,3121 }, { 249,3121 }, { 250,3121 }, { 251,3121 },
 { 252,3121 }, { 253,3121 }, { 254,3121 }, { 255,3121 }, { 256,3121 },
 {   0,   3 }, {   0,8955 }, {   1,2863 }, {   2,2863 }, {   3,2863 },
 {   4,2863 }, {   5,2863 }, {   6,2863 }, {   7,2863 }, {   8,2863 },
 {   9,2863 }, {  10,2863 }, {  11,2863 }, {  12,2863 }, {  13,2863 },
 {  14,2863 }, {  15,2863 }, {  16,2863 }, {  17,2863 }, {  18,2863 },
 {  19,2863 }, {  20,2863 }, {  21,2863 }, {  22,2863 }, {  23,2863 },
 {  24,2863 }, {  25,2863 }, {  26,2863 }, {  27,2863 }, {  28,2863 },
 {  29,2863 }, {  30,2863 }, {  31,2863 }, {  32,2863 }, {  33,2863 },
 {  34,2863 }, {  35,2863 }, {  36,2863 }, {  37,2863 }, {  38,2863 },

 {  39,2863 }, {  40,2863 }, {  41,2863 }, {   0,   0 }, {  43,2863 },
 {  44,2863 }, {  45,2863 }, {  46,2863 }, {  47,2863 }, {  48,2863 },
 {  49,2863 }, {  50,2863 }, {  51,2863 }, {  52,2863 }, {  53,2863 },
 {  54,2863 }, {  55,2863 }, {  56,2863 }, {  57,2863 }, {  58,2863 },
 {  59,2863 }, {  60,2863 }, {  61,2863 }, {  62,2863 }, {  63,2863 },
 {  64,2863 }, {  65,2863 }, {  66,2863 }, {  67,2863 }, {  68,2863 },
 {  69,2863 }, {  70,2863 }, {  71,2863 }, {  72,2863 }, {  73,2863 },
 {  74,2863 }, {  75,2863 }, {  76,2863 }, {  77,2863 }, {  78,2863 },
 {  79,2863 }, {  80,2863 }, {  81,2863 }, {  82,2863 }, {  83,2863 },
 {  84,2863 }, {  85,2863 }, {  86,2863 }, {  87,2863 }, {  88,2863 },

 {  89,2863 }, {  90,2863 }, {  91,2863 }, {  92,2863 }, {  93,2863 },
 {  94,2863 }, {  95,2863 }, {  96,2863 }, {  97,2863 }, {  98,2863 },
 {  99,2863 }, { 100,2863 }, { 101,2863 }, { 102,2863 }, { 103,2863 },
 { 104,2863 }, { 105,2863 }, { 106,2863 }, { 107,2863 }, { 108,2863 },
 { 109,2863 }, { 110,2863 }, { 111,2863 }, { 112,2863 }, { 113,2863 },
 { 114,2863 }, { 115,2863 }, { 116,2863 }, { 117,2863 }, { 118,2863 },
 { 119,2863 }, { 120,2863 }, { 121,2863 }, { 122,2863 }, { 123,2863 },
 { 124,2863 }, { 125,2863 }, { 126,2863 }, { 127,2863 }, { 128,3637 },
 { 129,3637 }, { 130,3637 }, { 131,3637 }, { 132,3637 }, { 133,3637 },
 { 134,3637 }, { 135,3637 }, { 136,3637 }, { 137,3637 }, { 138,3637 },

 { 139,3637 }, { 140,3637 }, { 141,3637 }, { 142,3637 }, { 143,3637 },
 { 144,3637 }, { 145,3637 }, { 146,3637 }, { 147,3637 }, { 148,3637 },
 { 149,3637 }, { 150,3637 }, { 151,3637 }, { 152,3637 }, { 153,3637 },
 { 154,3637 }, { 155,3637 }, { 156,3637 }, { 157,3637 }, { 158,3637 },
 { 159,3637 }, { 160,3637 }, { 161,3637 }, { 162,3637 }, { 163,3637 },
 { 164,3637 }, { 165,3637 }, { 166,3637 }, { 167,3637 }, { 168,3637 },
 { 169,3637 }, { 170,3637 }, { 171,3637 }, { 172,3637 }, { 173,3637 },
 { 174,3637 }, { 175,3637 }, { 176,3637 }, { 177,3637 }, { 178,3637 },
 { 179,3637 }, { 180,3637 }, { 181,3637 }, { 182,3637 }, { 183,3637 },
 { 184,3637 }, { 185,3637 }, { 186,3637 }, { 187,3637 }, { 188,3637 },

 { 189,3637 }, { 190,3637 }, { 191,3637 }, { 192,2863 }, { 193,2863 },
 { 194,2863 }, { 195,2863 }, { 196,2863 }, { 197,2863 }, { 198,2863 },
 { 199,2863 }, { 200,2863 }, { 201,2863 }, { 202,2863 }, { 203,2863 },
 { 204,2863 }, { 205,2863 }, { 206,2863 }, { 207,2863 }, { 208,2863 },
 { 209,2863 }, { 210,2863 }, { 211,2863 }, { 212,2863 }, { 213,2863 },
 { 214,2863 }, { 215,2863 }, { 216,2863 }, { 217,2863 }, { 218,2863 },
 { 219,2863 }, { 220,2863 }, { 221,2863 }, { 222,2863 }, { 223,2863 },
 { 224,2863 }, { 225,2863 }, { 226,2863 }, { 227,2863 }, { 228,2863 },
 { 229,2863 }, { 230,2863 }, { 231,2863 }, { 232,2863 }, { 233,2863 },
 { 234,2863 }, { 235,2863 }, { 236,2863 }, { 237,2863 }, { 238,2863 },

 { 239,2863 }, { 240,2863 }, { 241,2863 }, { 242,2863 }, { 243,2863 },
 { 244,2863 }, { 245,2863 }, { 246,2863 }, { 247,2863 }, { 248,2863 },
 { 249,2863 }, { 250,2863 }, { 251,2863 }, { 252,2863 }, { 253,2863 },
 { 254,2863 }, { 255,2863 }, { 256,2863 }, {   0,  41 }, {   0,8697 },
 {   1,3637 }, {   2,3637 }, {   3,3637 }, {   4,3637 }, {   5,3637 },
 {   6,3637 }, {   7,3637 }, {   8,3637 }, {   9,3637 }, {  10,3637 },
 {  11,3637 }, {  12,3637 }, {  13,-2634 }, {  14,3637 }, {  15,3637 },
 {  16,3637 }, {  17,3637 }, {  18,3637 }, {  19,3637 }, {  20,3637 },
 {  21,3637 }, {  22,3637 }, {  23,3637 }, {  24,3637 }, {  25,3637 },
 {  26,3637 }, {  27,3637 }, {  28,3637 }, {  29,3637 }, {  30,3637 },

 {  31,3637 }, {  32,3637 }, {  33,3637 }, {  34,3637 }, {  35,3637 },
 {  36,3637 }, {  37,3637 }, {  38,3637 }, {  39,3637 }, {  40,3637 },
 {  41,3637 }, {  42,3637 }, {  43,3637 }, {  44,3637 }, {  45,3637 },
 {  46,3637 }, {  47,3637 }, {  48,3637 }, {  49,3637 }, {  50,3637 },
 {  51,3637 }, {  52,3637 }, {  53,3637 }, {  54,3637 }, {  55,3637 },
 {  56,3637 }, {  57,3637 }, {  58,3637 }, {  59,3637 }, {  60,3637 },
 {  61,3637 }, {  62,3637 }, {  63,3637 }, {  64,3637 }, {  65,3637 },
 {  66,3637 }, {  67,3637 }, {  68,3637 }, {  69,3637 }, {  70,3637 },
 {  71,3637 }, {  72,3637 }, {  73,3637 }, {  74,3637 }, {  75,3637 },
 {  76,3637 }, {  77,3637 }, {  78,3637 }, {  79,3637 }, {  80,3637 },

 {  81,3637 }, {  82,3637 }, {  83,3637 }, {  84,3637 }, {  85,3637 },
 {  86,3637 }, {  87,3637 }, {  88,3637 }, {  89,3637 }, {  90,3637 },
 {  91,3637 }, {  92,3637 }, {  93,3637 }, {  94,3637 }, {  95,3637 },
 {  96,3637 }, {  97,3637 }, {  98,3637 }, {  99,3637 }, { 100,3637 },
 { 101,3637 }, { 102,3637 }, { 103,3637 }, { 104,3637 }, { 105,3637 },
 { 106,3637 }, { 107,3637 }, { 108,3637 }, { 109,3637 }, { 110,3637 },
 { 111,3637 }, { 112,3637 }, { 113,3637 }, { 114,3637 }, { 115,3637 },
 { 116,3637 }, { 117,3637 }, { 118,3637 }, { 119,3637 }, { 120,3637 },
 { 121,3637 }, { 122,3637 }, { 123,3637 }, { 124,3637 }, { 125,3637 },
 { 126,3637 }, { 127,3637 }, { 128,3637 }, { 129,3637 }, { 130,3637 },

 { 131,3637 }, { 132,3637 }, { 133,3637 }, { 134,3637 }, { 135,3637 },
 { 136,3637 }, { 137,3637 }, { 138,3637 }, { 139,3637 }, { 140,3637 },
 { 141,3637 }, { 142,3637 }, { 143,3637 }, { 144,3637 }, { 145,3637 },
 { 146,3637 }, { 147,3637 }, { 148,3637 }, { 149,3637 }, { 150,3637 },
 { 151,3637 }, { 152,3637 }, { 153,3637 }, { 154,3637 }, { 155,3637 },
 { 156,3637 }, { 157,3637 }, { 158,3637 }, { 159,3637 }, { 160,3637 },
 { 161,3637 }, { 162,3637 }, { 163,3637 }, { 164,3637 }, { 165,3637 },
 { 166,3637 }, { 167,3637 }, { 168,3637 }, { 169,3637 }, { 170,3637 },
 { 171,3637 }, { 172,3637 }, { 173,3637 }, { 174,3637 }, { 175,3637 },
 { 176,3637 }, { 177,3637 }, { 178,3637 }, { 179,3637 }, { 180,3637 },

 { 181,3637 }, { 182,3637 }, { 183,3637 }, { 184,3637 }, { 185,3637 },
 { 186,3637 }, { 187,3637 }, { 188,3637 }, { 189,3637 }, { 190,3637 },
 { 191,3637 }, { 192,3637 }, { 193,3637 }, { 194,3637 }, { 195,3637 },
 { 196,3637 }, { 197,3637 }, { 198,3637 }, { 199,3637 }, { 200,3637 },
 { 201,3637 }, { 202,3637 }, { 203,3637 }, { 204,3637 }, { 205,3637 },
 { 206,3637 }, { 207,3637 }, { 208,3637 }, { 209,3637 }, { 210,3637 },
 { 211,3637 }, { 212,3637 }, { 213,3637 }, { 214,3637 }, { 215,3637 },
 { 216,3637 }, { 217,3637 }, { 218,3637 }, { 219,3637 }, { 220,3637 },
 { 221,3637 }, { 222,3637 }, { 223,3637 }, { 224,3637 }, { 225,3637 },
 { 226,3637 }, { 227,3637 }, { 228,3637 }, { 229,3637 }, { 230,3637 },

 { 231,3637 }, { 232,3637 }, { 233,3637 }, { 234,3637 }, { 235,3637 },
 { 236,3637 }, { 237,3637 }, { 238,3637 }, { 239,3637 }, { 240,3637 },
 { 241,3637 }, { 242,3637 }, { 243,3637 }, { 244,3637 }, { 245,3637 },
 { 246,3637 }, { 247,3637 }, { 248,3637 }, { 249,3637 }, { 250,3637 },
 { 251,3637 }, { 252,3637 }, { 253,3637 }, { 254,3637 }, { 255,3637 },
 { 256,3637 }, {   0,   8 }, {   0,8439 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  10,3637 }, {   0,   0 }, {   0,   0 },
 {  13,3637 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,3637 },
 {  33,3637 }, {   0,   0 }, {  35,3637 }, {  36,3637 }, {  37,3637 },
 {  38,3637 }, {  39,3637 }, {  40,3637 }, {  41,3637 }, {  42,3637 },
 {  43,3637 }, {  44,3637 }, {  45,3637 }, {  46,3637 }, {  47,3637 },
 {  48,3637 }, {  49,3637 }, {  50,3637 }, {  51,3637 }, {  52,3637 },
 {  53,3637 }, {  54,3637 }, {  55,3637 }, {  56,3637 }, {  57,3637 },
 {  58,3637 }, {  59,3637 }, {  60,3637 }, {  61,3637 }, {  62,3637 },
 {  63,3637 }, {  64,3637 }, {  65,3637 }, {  66,3637 }, {  67,3637 },
 {  68,3637 }, {  69,3637 }, {  70,3637 }, {  71,3637 }, {  72,3637 },

 {  73,3637 }, {  74,3637 }, {  75,3637 }, {  76,3637 }, {  77,3637 },
 {  78,3637 }, {  79,3637 }, {  80,3637 }, {  81,3637 }, {  82,3637 },
 {  83,3637 }, {  84,3637 }, {  85,3637 }, {  86,3637 }, {  87,3637 },
 {  88,3637 }, {  89,3637 }, {  90,3637 }, {  91,3637 }, {   0,   0 },
 {  93,3637 }, {  94,3637 }, {  95,3637 }, {  96,3637 }, {  97,3637 },
 {  98,3637 }, {  99,3637 }, { 100,3637 }, { 101,3637 }, { 102,3637 },
 { 103,3637 }, { 104,3637 }, { 105,3637 }, { 106,3637 }, { 107,3637 },
 { 108,3637 }, { 109,3637 }, { 110,3637 }, { 111,3637 }, { 112,3637 },
 { 113,3637 }, { 114,3637 }, { 115,3637 }, { 116,3637 }, { 117,3637 },
 { 118,3637 }, { 119,3637 }, { 120,3637 }, { 121,3637 }, { 122,3637 },

 { 123,3637 }, { 124,3637 }, { 125,3637 }, { 126,3637 }, {   0,   0 },
 { 128,3637 }, { 129,3637 }, { 130,3637 }, { 131,3637 }, { 132,3637 },
 { 133,3637 }, { 134,3637 }, { 135,3637 }, { 136,3637 }, { 137,3637 },
 { 138,3637 }, { 139,3637 }, { 140,3637 }, { 141,3637 }, { 142,3637 },
 { 143,3637 }, { 144,3637 }, { 145,3637 }, { 146,3637 }, { 147,3637 },
 { 148,3637 }, { 149,3637 }, { 150,3637 }, { 151,3637 }, { 152,3637 },
 { 153,3637 }, { 154,3637 }, { 155,3637 }, { 156,3637 }, { 157,3637 },
 { 158,3637 }, { 159,3637 }, { 160,3637 }, { 161,3637 }, { 162,3637 },
 { 163,3637 }, { 164,3637 }, { 165,3637 }, { 166,3637 }, { 167,3637 },
 { 168,3637 }, { 169,3637 }, { 170,3637 }, { 171,3637 }, { 172,3637 },

 { 173,3637 }, { 174,3637 }, { 175,3637 }, { 176,3637 }, { 177,3637 },
 { 178,3637 }, { 179,3637 }, { 180,3637 }, { 181,3637 }, { 182,3637 },
 { 183,3637 }, { 184,3637 }, { 185,3637 }, { 186,3637 }, { 187,3637 },
 { 188,3637 }, { 189,3637 }, { 190,3637 }, { 191,3637 }, { 192,3637 },
 { 193,3637 }, { 194,3894 }, { 195,3894 }, { 196,3894 }, { 197,3894 },
 { 198,3894 }, { 199,3894 }, { 200,3894 }, { 201,3894 }, { 202,3894 },
 { 203,3894 }, { 204,3894 }, { 205,3894 }, { 206,3894 }, { 207,3894 },
 { 208,3894 }, { 209,3894 }, { 210,3894 }, { 211,3894 }, { 212,3894 },
 { 213,3894 }, { 214,3894 }, { 215,3894 }, { 216,3894 }, { 217,3894 },
 { 218,3894 }, { 219,3894 }, { 220,3894 }, { 221,3894 }, { 222,3894 },

 { 223,3894 }, { 224,4151 }, { 225,4151 }, { 226,4151 }, { 227,4151 },
 { 228,4151 }, { 229,4151 }, { 230,4151 }, { 231,4151 }, { 232,4151 },
 { 233,4151 }, { 234,4151 }, { 235,4151 }, { 236,4151 }, { 237,4151 },
 { 238,4151 }, { 239,4151 }, { 240,4408 }, { 241,4408 }, { 242,4408 },
 { 243,4408 }, { 244,4408 }, { 245,3637 }, { 246,3637 }, { 247,3637 },
 { 248,3637 }, { 249,3637 }, { 250,3637 }, { 251,3637 }, { 252,3637 },
 { 253,3637 }, { 254,3637 }, { 255,3637 }, {   0,  41 }, {   0,8182 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  34,-3145 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  39,-3145 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,4408 }, {  49,4408 }, {  50,4408 },
 {  51,4408 }, {  52,4408 }, {  53,4408 }, {  54,4408 }, {  55,4408 },
 {  56,4408 }, {  57,4408 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  88,4418 }, {   0,   8 }, {   0,8092 },
 {   0,   0 }, {  92,-3145 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  97,-3145 }, {  98,-3145 }, {   0,   0 }, {  10,3290 },
 {   0,   0 }, { 102,-3145 }, {  13,3290 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, { 110,-3145 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, { 114,-3145 }, {   0,   0 },

 { 116,-3145 }, {   0,   0 }, { 118,-3145 }, {   0,   0 }, { 120,4418 },
 {   0,   0 }, {  32,3290 }, {  33,3290 }, {   0,   0 }, {  35,3290 },
 {  36,3290 }, {  37,3290 }, {  38,3290 }, {  39,3290 }, {  40,3290 },
 {  41,3290 }, {  42,3290 }, {  43,3290 }, {  44,3290 }, {  45,3290 },
 {  46,3290 }, {  47,3290 }, {  48,3290 }, {  49,3290 }, {  50,3290 },
 {  51,3290 }, {  52,3290 }, {  53,3290 }, {  54,3290 }, {  55,3290 },
 {  56,3290 }, {  57,3290 }, {  58,3290 }, {  59,3290 }, {  60,3290 },
 {  61,3290 }, {  62,3290 }, {  63,3290 }, {  64,3290 }, {  65,3290 },
 {  66,3290 }, {  67,3290 }, {  68,3290 }, {  69,3290 }, {  70,3290 },
 {  71,3290 }, {  72,3290 }, {  73,3290 }, {  74,3290 }, {  75,3290 },

 {  76,3290 }, {  77,3290 }, {  78,3290 }, {  79,3290 }, {  80,3290 },
 {  81,3290 }, {  82,3290 }, {  83,3290 }, {  84,3290 }, {  85,3290 },
 {  86,3290 }, {  87,3290 }, {  88,3290 }, {  89,3290 }, {  90,3290 },
 {  91,3290 }, {   0,   0 }, {  93,3290 }, {  94,3290 }, {  95,3290 },
 {  96,3290 }, {  97,3290 }, {  98,3290 }, {  99,3290 }, { 100,3290 },
 { 101,3290 }, { 102,3290 }, { 103,3290 }, { 104,3290 }, { 105,3290 },
 { 106,3290 }, { 107,3290 }, { 108,3290 }, { 109,3290 }, { 110,3290 },
 { 111,3290 }, { 112,3290 }, { 113,3290 }, { 114,3290 }, { 115,3290 },
 { 116,3290 }, { 117,3290 }, { 118,3290 }, { 119,3290 }, { 120,3290 },
 { 121,3290 }, { 122,3290 }, { 123,3290 }, { 124,3290 }, { 125,3290 },

 { 126,3290 }, {   0,   0 }, { 128,4400 }, { 129,4400 }, { 130,4400 },
 { 131,4400 }, { 132,4400 }, { 133,4400 }, { 134,4400 }, { 135,4400 },
 { 136,4400 }, { 137,4400 }, { 138,4400 }, { 139,4400 }, { 140,4400 },
 { 141,4400 }, { 142,4400 }, { 143,4400 }, { 144,4400 }, { 145,4400 },
 { 146,4400 }, { 147,4400 }, { 148,4400 }, { 149,4400 }, { 150,4400 },
 { 151,4400 }, { 152,4400 }, { 153,4400 }, { 154,4400 }, { 155,4400 },
 { 156,4400 }, { 157,4400 }, { 158,4400 }, { 159,4400 }, { 160,4400 },
 { 161,4400 }, { 162,4400 }, { 163,4400 }, { 164,4400 }, { 165,4400 },
 { 166,4400 }, { 167,4400 }, { 168,4400 }, { 169,4400 }, { 170,4400 },
 { 171,4400 }, { 172,4400 }, { 173,4400 }, { 174,4400 }, { 175,4400 },

 { 176,4400 }, { 177,4400 }, { 178,4400 }, { 179,4400 }, { 180,4400 },
 { 181,4400 }, { 182,4400 }, { 183,4400 }, { 184,4400 }, { 185,4400 },
 { 186,4400 }, { 187,4400 }, { 188,4400 }, { 189,4400 }, { 190,4400 },
 { 191,4400 }, { 192,3290 }, { 193,3290 }, { 194,3547 }, { 195,3547 },
 { 196,3547 }, { 197,3547 }, { 198,3547 }, { 199,3547 }, { 200,3547 },
 { 201,3547 }, { 202,3547 }, { 203,3547 }, { 204,3547 }, { 205,3547 },
 { 206,3547 }, { 207,3547 }, { 208,3547 }, { 209,3547 }, { 210,3547 },
 { 211,3547 }, { 212,3547 }, { 213,3547 }, { 214,3547 }, { 215,3547 },
 { 216,3547 }, { 217,3547 }, { 218,3547 }, { 219,3547 }, { 220,3547 },
 { 221,3547 }, { 222,3547 }, { 223,3547 }, { 224,3804 }, { 225,3804 },

 { 226,3804 }, { 227,3804 }, { 228,3804 }, { 229,3804 }, { 230,3804 },
 { 231,3804 }, { 232,3804 }, { 233,3804 }, { 234,3804 }, { 235,3804 },
 { 236,3804 }, { 237,3804 }, { 238,3804 }, { 239,3804 }, { 240,4061 },
 { 241,4061 }, { 242,4061 }, { 243,4061 }, { 244,4061 }, { 245,3290 },
 { 246,3290 }, { 247,3290 }, { 248,3290 }, { 249,3290 }, { 250,3290 },
 { 251,3290 }, { 252,3290 }, { 253,3290 }, { 254,3290 }, { 255,3290 },
 {   0,   8 }, {   0,7835 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  10,3033 }, {   0,   0 }, {   0,   0 }, {  13,3033 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,3033 }, {  33,3033 },
 {   0,   0 }, {  35,3033 }, {  36,3033 }, {  37,3033 }, {  38,3033 },
 {  39,3033 }, {  40,3033 }, {  41,3033 }, {  42,3033 }, {  43,3033 },
 {  44,3033 }, {  45,3033 }, {  46,3033 }, {  47,3033 }, {  48,3033 },
 {  49,3033 }, {  50,3033 }, {  51,3033 }, {  52,3033 }, {  53,3033 },
 {  54,3033 }, {  55,3033 }, {  56,3033 }, {  57,3033 }, {  58,3033 },
 {  59,3033 }, {  60,3033 }, {  61,3033 }, {  62,3033 }, {  63,3033 },
 {  64,3033 }, {  65,3033 }, {  66,3033 }, {  67,3033 }, {  68,3033 },

 {  69,3033 }, {  70,3033 }, {  71,3033 }, {  72,3033 }, {  73,3033 },
 {  74,3033 }, {  75,3033 }, {  76,3033 }, {  77,3033 }, {  78,3033 },
 {  79,3033 }, {  80,3033 }, {  81,3033 }, {  82,3033 }, {  83,3033 },
 {  84,3033 }, {  85,3033 }, {  86,3033 }, {  87,3033 }, {  88,3033 },
 {  89,3033 }, {  90,3033 }, {  91,3033 }, {   0,   0 }, {  93,3033 },
 {  94,3033 }, {  95,3033 }, {  96,3033 }, {  97,3033 }, {  98,3033 },
 {  99,3033 }, { 100,3033 }, { 101,3033 }, { 102,3033 }, { 103,3033 },
 { 104,3033 }, { 105,3033 }, { 106,3033 }, { 107,3033 }, { 108,3033 },
 { 109,3033 }, { 110,3033 }, { 111,3033 }, { 112,3033 }, { 113,3033 },
 { 114,3033 }, { 115,3033 }, { 116,3033 }, { 117,3033 }, { 118,3033 },

 { 119,3033 }, { 120,3033 }, { 121,3033 }, { 122,3033 }, { 123,3033 },
 { 124,3033 }, { 125,3033 }, { 126,3033 }, {   0,   0 }, { 128,4400 },
 { 129,4400 }, { 130,4400 }, { 131,4400 }, { 132,4400 }, { 133,4400 },
 { 134,4400 }, { 135,4400 }, { 136,4400 }, { 137,4400 }, { 138,4400 },
 { 139,4400 }, { 140,4400 }, { 141,4400 }, { 142,4400 }, { 143,4400 },
 { 144,4400 }, { 145,4400 }, { 146,4400 }, { 147,4400 }, { 148,4400 },
 { 149,4400 }, { 150,4400 }, { 151,4400 }, { 152,4400 }, { 153,4400 },
 { 154,4400 }, { 155,4400 }, { 156,4400 }, { 157,4400 }, { 158,4400 },
 { 159,4400 }, { 160,4400 }, { 161,4400 }, { 162,4400 }, { 163,4400 },
 { 164,4400 }, { 165,4400 }, { 166,4400 }, { 167,4400 }, { 168,4400 },

 { 169,4400 }, { 170,4400 }, { 171,4400 }, { 172,4400 }, { 173,4400 },
 { 174,4400 }, { 175,4400 }, { 176,4400 }, { 177,4400 }, { 178,4400 },
 { 179,4400 }, { 180,4400 }, { 181,4400 }, { 182,4400 }, { 183,4400 },
 { 184,4400 }, { 185,4400 }, { 186,4400 }, { 187,4400 }, { 188,4400 },
 { 189,4400 }, { 190,4400 }, { 191,4400 }, { 192,3033 }, { 193,3033 },
 { 194,3290 }, { 195,3290 }, { 196,3290 }, { 197,3290 }, { 198,3290 },
 { 199,3290 }, { 200,3290 }, { 201,3290 }, { 202,3290 }, { 203,3290 },
 { 204,3290 }, { 205,3290 }, { 206,3290 }, { 207,3290 }, { 208,3290 },
 { 209,3290 }, { 210,3290 }, { 211,3290 }, { 212,3290 }, { 213,3290 },
 { 214,3290 }, { 215,3290 }, { 216,3290 }, { 217,3290 }, { 218,3290 },

 { 219,3290 }, { 220,3290 }, { 221,3290 }, { 222,3290 }, { 223,3290 },
 { 224,3547 }, { 225,3547 }, { 226,3547 }, { 227,3547 }, { 228,3547 },
 { 229,3547 }, { 230,3547 }, { 231,3547 }, { 232,3547 }, { 233,3547 },
 { 234,3547 }, { 235,3547 }, { 236,3547 }, { 237,3547 }, { 238,3547 },
 { 239,3547 }, { 240,3804 }, { 241,3804 }, { 242,3804 }, { 243,3804 },
 { 244,3804 }, { 245,3033 }, { 246,3033 }, { 247,3033 }, { 248,3033 },
 { 249,3033 }, { 250,3033 }, { 251,3033 }, { 252,3033 }, { 253,3033 },
 { 254,3033 }, { 255,3033 }, {   0,   8 }, {   0,7578 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,2776 }, {   0,   0 },

 {   0,   0 }, {  13,2776 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  32,2776 }, {  33,2776 }, {   0,   0 }, {  35,2776 }, {  36,2776 },
 {  37,2776 }, {  38,2776 }, {  39,2776 }, {  40,2776 }, {  41,2776 },
 {  42,2776 }, {  43,2776 }, {  44,2776 }, {  45,2776 }, {  46,2776 },
 {  47,2776 }, {  48,2776 }, {  49,2776 }, {  50,2776 }, {  51,2776 },
 {  52,2776 }, {  53,2776 }, {  54,2776 }, {  55,2776 }, {  56,2776 },
 {  57,2776 }, {  58,2776 }, {  59,2776 }, {  60,2776 }, {  61,2776 },

 {  62,2776 }, {  63,2776 }, {  64,2776 }, {  65,2776 }, {  66,2776 },
 {  67,2776 }, {  68,2776 }, {  69,2776 }, {  70,2776 }, {  71,2776 },
 {  72,2776 }, {  73,2776 }, {  74,2776 }, {  75,2776 }, {  76,2776 },
 {  77,2776 }, {  78,2776 }, {  79,2776 }, {  80,2776 }, {  81,2776 },
 {  82,2776 }, {  83,2776 }, {  84,2776 }, {  85,2776 }, {  86,2776 },
 {  87,2776 }, {  88,2776 }, {  89,2776 }, {  90,2776 }, {  91,2776 },
 {   0,   0 }, {  93,2776 }, {  94,2776 }, {  95,2776 }, {  96,2776 },
 {  97,2776 }, {  98,2776 }, {  99,2776 }, { 100,2776 }, { 101,2776 },
 { 102,2776 }, { 103,2776 }, { 104,2776 }, { 105,2776 }, { 106,2776 },
 { 107,2776 }, { 108,2776 }, { 109,2776 }, { 110,2776 }, { 111,2776 },

 { 112,2776 }, { 113,2776 }, { 114,2776 }, { 115,2776 }, { 116,2776 },
 { 117,2776 }, { 118,2776 }, { 119,2776 }, { 120,2776 }, { 121,2776 },
 { 122,2776 }, { 123,2776 }, { 124,2776 }, { 125,2776 }, { 126,2776 },
 {   0,   0 }, { 128,4400 }, { 129,4400 }, { 130,4400 }, { 131,4400 },
 { 132,4400 }, { 133,4400 }, { 134,4400 }, { 135,4400 }, { 136,4400 },
 { 137,4400 }, { 138,4400 }, { 139,4400 }, { 140,4400 }, { 141,4400 },
 { 142,4400 }, { 143,4400 }, { 144,4400 }, { 145,4400 }, { 146,4400 },
 { 147,4400 }, { 148,4400 }, { 149,4400 }, { 150,4400 }, { 151,4400 },
 { 152,4400 }, { 153,4400 }, { 154,4400 }, { 155,4400 }, { 156,4400 },
 { 157,4400 }, { 158,4400 }, { 159,4400 }, { 160,4400 }, { 161,4400 },

 { 162,4400 }, { 163,4400 }, { 164,4400 }, { 165,4400 }, { 166,4400 },
 { 167,4400 }, { 168,4400 }, { 169,4400 }, { 170,4400 }, { 171,4400 },
 { 172,4400 }, { 173,4400 }, { 174,4400 }, { 175,4400 }, { 176,4400 },
 { 177,4400 }, { 178,4400 }, { 179,4400 }, { 180,4400 }, { 181,4400 },
 { 182,4400 }, { 183,4400 }, { 184,4400 }, { 185,4400 }, { 186,4400 },
 { 187,4400 }, { 188,4400 }, { 189,4400 }, { 190,4400 }, { 191,4400 },
 { 192,2776 }, { 193,2776 }, { 194,3033 }, { 195,3033 }, { 196,3033 },
 { 197,3033 }, { 198,3033 }, { 199,3033 }, { 200,3033 }, { 201,3033 },
 { 202,3033 }, { 203,3033 }, { 204,3033 }, { 205,3033 }, { 206,3033 },
 { 207,3033 }, { 208,3033 }, { 209,3033 }, { 210,3033 }, { 211,3033 },

 { 212,3033 }, { 213,3033 }, { 214,3033 }, { 215,3033 }, { 216,3033 },
 { 217,3033 }, { 218,3033 }, { 219,3033 }, { 220,3033 }, { 221,3033 },
 { 222,3033 }, { 223,3033 }, { 224,3290 }, { 225,3290 }, { 226,3290 },
 { 227,3290 }, { 228,3290 }, { 229,3290 }, { 230,3290 }, { 231,3290 },
 { 232,3290 }, { 233,3290 }, { 234,3290 }, { 235,3290 }, { 236,3290 },
 { 237,3290 }, { 238,3290 }, { 239,3290 }, { 240,3547 }, { 241,3547 },
 { 242,3547 }, { 243,3547 }, { 244,3547 }, { 245,2776 }, { 246,2776 },
 { 247,2776 }, { 248,2776 }, { 249,2776 }, { 250,2776 }, { 251,2776 },
 { 252,2776 }, { 253,2776 }, { 254,2776 }, { 255,2776 }, {   0,  40 },
 {   0,7321 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  40 },
 {   0,7311 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  39 }, {   0,7287 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,   0 }, {  49,   0 },
 {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 },

 {  55,   0 }, {  56,   0 }, {  57,   0 }, {  48, -10 }, {  49, -10 },
 {  50, -10 }, {  51, -10 }, {  52, -10 }, {  53, -10 }, {  54, -10 },
 {  55, -10 }, {  56, -10 }, {  57, -10 }, {   0,   0 }, {  69,  71 },
 {   0,   0 }, {   0,7250 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  69,  61 },
 {  46, -24 }, {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },
 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {   0,  38 }, {   0,7228 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, { 101,  71 }, {   0,   0 }, {  69,  37 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, { 101,  61 }, {   0,   0 }, {   0,   0 }, {  43,4329 },
 {   0,   0 }, {  45,4329 }, {   0,   0 }, {   0,   0 }, {  48,4339 },
 {  49,4339 }, {  50,4339 }, {  51,4339 }, {  52,4339 }, {  53,4339 },
 {  54,4339 }, {  55,4339 }, {  56,4339 }, {  57,4339 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 101,  37 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },
 {  57,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,   0 }, {  66,   0 },
 {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 }, {  71,   0 },
 {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 }, {  76,   0 },
 {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 }, {  81,   0 },
 {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 }, {  86,   0 },
 {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 }, {   0,  38 },
 {   0,7136 }, {   0,   0 }, {   0,   0 }, {  95,   0 }, {   0,   0 },
 {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 },
 { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 }, { 106,   0 },
 { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 }, { 111,   0 },

 { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 }, { 116,   0 },
 { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 }, { 121,   0 },
 { 122,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48, -92 }, {  49, -92 },
 {  50, -92 }, {  51, -92 }, {  52, -92 }, {  53, -92 }, {  54, -92 },
 {  55, -92 }, {  56, -92 }, {  57, -92 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,   0 }, {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 },

 {  70,   0 }, {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 },
 {  75,   0 }, {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 },
 {  80,   0 }, {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 },
 {  85,   0 }, {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 },
 {  90,   0 }, {   0,  38 }, {   0,7044 }, {   0,   0 }, {   0,   0 },
 {  95,   0 }, {   0,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 },
 { 100,   0 }, { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 },
 { 105,   0 }, { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 },
 { 110,   0 }, { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 },
 { 115,   0 }, { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 },

 { 120,   0 }, { 121,   0 }, { 122,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-184 }, {  49,-184 }, {  50,-184 }, {  51,-184 }, {  52,-184 },
 {  53,-184 }, {  54,-184 }, {  55,-184 }, {  56,-184 }, {  57,-184 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65, -92 }, {  66, -92 }, {  67, -92 },
 {  68, -92 }, {  69, -92 }, {  70, -92 }, {  71, -92 }, {  72, -92 },
 {  73, -92 }, {  74, -92 }, {  75, -92 }, {  76, -92 }, {  77, -92 },

 {  78, -92 }, {  79, -92 }, {  80, -92 }, {  81, -92 }, {  82, -92 },
 {  83, -92 }, {  84, -92 }, {  85, -92 }, {  86, -92 }, {  87, -92 },
 {  88, -92 }, {  89, -92 }, {  90, -92 }, {   0,  38 }, {   0,6952 },
 {   0,   0 }, {   0,   0 }, {  95, -92 }, {   0,   0 }, {  97, -92 },
 {  98, -92 }, {  99, -92 }, { 100, -92 }, { 101, -92 }, { 102, -92 },
 { 103, -92 }, { 104, -92 }, { 105, -92 }, { 106, -92 }, { 107, -92 },
 { 108, -92 }, { 109, -92 }, { 110, -92 }, { 111,4143 }, { 112, -92 },
 { 113, -92 }, { 114, -92 }, { 115, -92 }, { 116, -92 }, { 117, -92 },
 { 118, -92 }, { 119, -92 }, { 120, -92 }, { 121, -92 }, { 122, -92 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-276 }, {  49,-276 }, {  50,-276 },
 {  51,-276 }, {  52,-276 }, {  53,-276 }, {  54,-276 }, {  55,-276 },
 {  56,-276 }, {  57,-276 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-184 },
 {  66,-184 }, {  67,-184 }, {  68,-184 }, {  69,-184 }, {  70,-184 },
 {  71,-184 }, {  72,-184 }, {  73,-184 }, {  74,-184 }, {  75,-184 },
 {  76,-184 }, {  77,-184 }, {  78,-184 }, {  79,-184 }, {  80,-184 },
 {  81,-184 }, {  82,-184 }, {  83,-184 }, {  84,-184 }, {  85,-184 },

 {  86,-184 }, {  87,-184 }, {  88,-184 }, {  89,-184 }, {  90,-184 },
 {   0,  38 }, {   0,6860 }, {   0,   0 }, {   0,   0 }, {  95,-184 },
 {   0,   0 }, {  97,-184 }, {  98,-184 }, {  99,-184 }, { 100,-184 },
 { 101,-184 }, { 102,-184 }, { 103,-184 }, { 104,-184 }, { 105,-184 },
 { 106,-184 }, { 107,-184 }, { 108,-184 }, { 109,-184 }, { 110,-184 },
 { 111,-184 }, { 112,-184 }, { 113,-184 }, { 114,-184 }, { 115,-184 },
 { 116,-184 }, { 117,4143 }, { 118,-184 }, { 119,-184 }, { 120,-184 },
 { 121,-184 }, { 122,-184 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-368 },
 {  49,-368 }, {  50,-368 }, {  51,-368 }, {  52,-368 }, {  53,-368 },
 {  54,-368 }, {  55,-368 }, {  56,-368 }, {  57,-368 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-276 }, {  66,-276 }, {  67,-276 }, {  68,-276 },
 {  69,-276 }, {  70,-276 }, {  71,-276 }, {  72,-276 }, {  73,-276 },
 {  74,-276 }, {  75,-276 }, {  76,-276 }, {  77,-276 }, {  78,-276 },
 {  79,-276 }, {  80,-276 }, {  81,-276 }, {  82,-276 }, {  83,-276 },
 {  84,-276 }, {  85,-276 }, {  86,-276 }, {  87,-276 }, {  88,-276 },
 {  89,-276 }, {  90,-276 }, {   0,  38 }, {   0,6768 }, {   0,   0 },

 {   0,   0 }, {  95,-276 }, {   0,   0 }, {  97,-276 }, {  98,-276 },
 {  99,-276 }, { 100,-276 }, { 101,-276 }, { 102,-276 }, { 103,-276 },
 { 104,-276 }, { 105,-276 }, { 106,-276 }, { 107,-276 }, { 108,-276 },
 { 109,-276 }, { 110,-276 }, { 111,-276 }, { 112,-276 }, { 113,-276 },
 { 114,-276 }, { 115,-276 }, { 116,4143 }, { 117,-276 }, { 118,-276 },
 { 119,-276 }, { 120,-276 }, { 121,-276 }, { 122,-276 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-460 }, {  49,-460 }, {  50,-460 }, {  51,-460 },

 {  52,-460 }, {  53,-460 }, {  54,-460 }, {  55,-460 }, {  56,-460 },
 {  57,-460 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-368 }, {  66,-368 },
 {  67,-368 }, {  68,-368 }, {  69,-368 }, {  70,-368 }, {  71,-368 },
 {  72,-368 }, {  73,-368 }, {  74,-368 }, {  75,-368 }, {  76,-368 },
 {  77,-368 }, {  78,-368 }, {  79,-368 }, {  80,-368 }, {  81,-368 },
 {  82,-368 }, {  83,-368 }, {  84,-368 }, {  85,-368 }, {  86,-368 },
 {  87,-368 }, {  88,-368 }, {  89,-368 }, {  90,-368 }, {   0,  12 },
 {   0,6676 }, {   0,   0 }, {   0,   0 }, {  95,-368 }, {   0,   0 },
 {  97,-368 }, {  98,-368 }, {  99,-368 }, { 100,-368 }, { 101,-368 },

 { 102,-368 }, { 103,-368 }, { 104,-368 }, { 105,-368 }, { 106,-368 },
 { 107,-368 }, { 108,-368 }, { 109,-368 }, { 110,-368 }, { 111,4143 },
 { 112,-368 }, { 113,-368 }, { 114,-368 }, { 115,-368 }, { 116,-368 },
 { 117,-368 }, { 118,-368 }, { 119,-368 }, { 120,-368 }, { 121,-368 },
 { 122,-368 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-552 }, {  49,-552 },
 {  50,-552 }, {  51,-552 }, {  52,-552 }, {  53,-552 }, {  54,-552 },
 {  55,-552 }, {  56,-552 }, {  57,-552 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-460 }, {  66,-460 }, {  67,-460 }, {  68,-460 }, {  69,-460 },
 {  70,-460 }, {  71,-460 }, {  72,-460 }, {  73,-460 }, {  74,-460 },
 {  75,-460 }, {  76,-460 }, {  77,-460 }, {  78,-460 }, {  79,-460 },
 {  80,-460 }, {  81,-460 }, {  82,-460 }, {  83,-460 }, {  84,-460 },
 {  85,-460 }, {  86,-460 }, {  87,-460 }, {  88,-460 }, {  89,-460 },
 {  90,-460 }, {   0,  38 }, {   0,6584 }, {   0,   0 }, {   0,   0 },
 {  95,-460 }, {   0,   0 }, {  97,-460 }, {  98,-460 }, {  99,-460 },
 { 100,-460 }, { 101,-460 }, { 102,-460 }, { 103,-460 }, { 104,-460 },
 { 105,-460 }, { 106,-460 }, { 107,-460 }, { 108,-460 }, { 109,-460 },

 { 110,-460 }, { 111,-460 }, { 112,-460 }, { 113,-460 }, { 114,-460 },
 { 115,-460 }, { 116,-460 }, { 117,-460 }, { 118,-460 }, { 119,-460 },
 { 120,-460 }, { 121,-460 }, { 122,-460 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-644 }, {  49,-644 }, {  50,-644 }, {  51,-644 }, {  52,-644 },
 {  53,-644 }, {  54,-644 }, {  55,-644 }, {  56,-644 }, {  57,-644 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-552 }, {  66,-552 }, {  67,-552 },

 {  68,-552 }, {  69,-552 }, {  70,-552 }, {  71,-552 }, {  72,-552 },
 {  73,-552 }, {  74,-552 }, {  75,-552 }, {  76,-552 }, {  77,-552 },
 {  78,-552 }, {  79,-552 }, {  80,-552 }, {  81,-552 }, {  82,-552 },
 {  83,-552 }, {  84,-552 }, {  85,-552 }, {  86,-552 }, {  87,-552 },
 {  88,-552 }, {  89,-552 }, {  90,-552 }, {   0,  38 }, {   0,6492 },
 {   0,   0 }, {   0,   0 }, {  95,-552 }, {   0,   0 }, {  97,-552 },
 {  98,-552 }, {  99,-552 }, { 100,-552 }, { 101,-552 }, { 102,-552 },
 { 103,-552 }, { 104,-552 }, { 105,-552 }, { 106,-552 }, { 107,-552 },
 { 108,-552 }, { 109,-552 }, { 110,-552 }, { 111,-552 }, { 112,-552 },
 { 113,-552 }, { 114,-552 }, { 115,-552 }, { 116,4051 }, { 117,-552 },

 { 118,-552 }, { 119,-552 }, { 120,-552 }, { 121,-552 }, { 122,-552 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-736 }, {  49,-736 }, {  50,-736 },
 {  51,-736 }, {  52,-736 }, {  53,-736 }, {  54,-736 }, {  55,-736 },
 {  56,-736 }, {  57,-736 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-644 },
 {  66,-644 }, {  67,-644 }, {  68,-644 }, {  69,-644 }, {  70,-644 },
 {  71,-644 }, {  72,-644 }, {  73,-644 }, {  74,-644 }, {  75,-644 },

 {  76,-644 }, {  77,-644 }, {  78,-644 }, {  79,-644 }, {  80,-644 },
 {  81,-644 }, {  82,-644 }, {  83,-644 }, {  84,-644 }, {  85,-644 },
 {  86,-644 }, {  87,-644 }, {  88,-644 }, {  89,-644 }, {  90,-644 },
 {   0,  38 }, {   0,6400 }, {   0,   0 }, {   0,   0 }, {  95,-644 },
 {   0,   0 }, {  97,-644 }, {  98,-644 }, {  99,-644 }, { 100,-644 },
 { 101,-644 }, { 102,-644 }, { 103,-644 }, { 104,-644 }, { 105,-644 },
 { 106,-644 }, { 107,-644 }, { 108,-644 }, { 109,-644 }, { 110,-644 },
 { 111,-644 }, { 112,-644 }, { 113,-644 }, { 114,-644 }, { 115,-644 },
 { 116,4051 }, { 117,-644 }, { 118,-644 }, { 119,-644 }, { 120,-644 },
 { 121,-644 }, { 122,-644 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-828 },
 {  49,-828 }, {  50,-828 }, {  51,-828 }, {  52,-828 }, {  53,-828 },
 {  54,-828 }, {  55,-828 }, {  56,-828 }, {  57,-828 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-736 }, {  66,-736 }, {  67,-736 }, {  68,-736 },
 {  69,-736 }, {  70,-736 }, {  71,-736 }, {  72,-736 }, {  73,-736 },
 {  74,-736 }, {  75,-736 }, {  76,-736 }, {  77,-736 }, {  78,-736 },
 {  79,-736 }, {  80,-736 }, {  81,-736 }, {  82,-736 }, {  83,-736 },

 {  84,-736 }, {  85,-736 }, {  86,-736 }, {  87,-736 }, {  88,-736 },
 {  89,-736 }, {  90,-736 }, {   0,  38 }, {   0,6308 }, {   0,   0 },
 {   0,   0 }, {  95,-736 }, {   0,   0 }, {  97,-736 }, {  98,-736 },
 {  99,-736 }, { 100,-736 }, { 101,-736 }, { 102,-736 }, { 103,-736 },
 { 104,-736 }, { 105,-736 }, { 106,-736 }, { 107,-736 }, { 108,-736 },
 { 109,-736 }, { 110,-736 }, { 111,-736 }, { 112,-736 }, { 113,-736 },
 { 114,4051 }, { 115,-736 }, { 116,-736 }, { 117,-736 }, { 118,-736 },
 { 119,-736 }, { 120,-736 }, { 121,-736 }, { 122,-736 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-920 }, {  49,-920 }, {  50,-920 }, {  51,-920 },
 {  52,-920 }, {  53,-920 }, {  54,-920 }, {  55,-920 }, {  56,-920 },
 {  57,-920 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-828 }, {  66,-828 },
 {  67,-828 }, {  68,-828 }, {  69,-828 }, {  70,-828 }, {  71,-828 },
 {  72,-828 }, {  73,-828 }, {  74,-828 }, {  75,-828 }, {  76,-828 },
 {  77,-828 }, {  78,-828 }, {  79,-828 }, {  80,-828 }, {  81,-828 },
 {  82,-828 }, {  83,-828 }, {  84,-828 }, {  85,-828 }, {  86,-828 },
 {  87,-828 }, {  88,-828 }, {  89,-828 }, {  90,-828 }, {   0,  38 },

 {   0,6216 }, {   0,   0 }, {   0,   0 }, {  95,-828 }, {   0,   0 },
 {  97,-828 }, {  98,-828 }, {  99,-828 }, { 100,-828 }, { 101,-828 },
 { 102,-828 }, { 103,-828 }, { 104,-828 }, { 105,-828 }, { 106,-828 },
 { 107,-828 }, { 108,-828 }, { 109,-828 }, { 110,-828 }, { 111,-828 },
 { 112,4051 }, { 113,-828 }, { 114,-828 }, { 115,-828 }, { 116,-828 },
 { 117,-828 }, { 118,-828 }, { 119,-828 }, { 120,-828 }, { 121,-828 },
 { 122,-828 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-1012 }, {  49,-1012 },

 {  50,-1012 }, {  51,-1012 }, {  52,-1012 }, {  53,-1012 }, {  54,-1012 },
 {  55,-1012 }, {  56,-1012 }, {  57,-1012 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-920 }, {  66,-920 }, {  67,-920 }, {  68,-920 }, {  69,-920 },
 {  70,-920 }, {  71,-920 }, {  72,-920 }, {  73,-920 }, {  74,-920 },
 {  75,-920 }, {  76,-920 }, {  77,-920 }, {  78,-920 }, {  79,-920 },
 {  80,-920 }, {  81,-920 }, {  82,-920 }, {  83,-920 }, {  84,-920 },
 {  85,-920 }, {  86,-920 }, {  87,-920 }, {  88,-920 }, {  89,-920 },
 {  90,-920 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  95,-920 }, {   0,   0 }, {  97,-920 }, {  98,-920 }, {  99,-920 },

 { 100,-920 }, { 101,-920 }, { 102,-920 }, { 103,-920 }, { 104,-920 },
 { 105,-920 }, { 106,-920 }, { 107,-920 }, { 108,-920 }, { 109,-920 },
 { 110,-920 }, { 111,-920 }, { 112,-920 }, { 113,-920 }, { 114,4051 },
 { 115,-920 }, { 116,-920 }, { 117,-920 }, { 118,-920 }, { 119,-920 },
 { 120,-920 }, { 121,-920 }, { 122,-920 }, {   0,   3 }, {   0,6092 },
 {   1,   0 }, {   2,   0 }, {   3,   0 }, {   4,   0 }, {   5,   0 },
 {   6,   0 }, {   7,   0 }, {   8,   0 }, {   9,   0 }, {  10,   0 },
 {  11,   0 }, {  12,   0 }, {  13,   0 }, {  14,   0 }, {  15,   0 },
 {  16,   0 }, {  17,   0 }, {  18,   0 }, {  19,   0 }, {  20,   0 },
 {  21,   0 }, {  22,   0 }, {  23,   0 }, {  24,   0 }, {  25,   0 },

 {  26,   0 }, {  27,   0 }, {  28,   0 }, {  29,   0 }, {  30,   0 },
 {  31,   0 }, {  32,   0 }, {  33,   0 }, {  34,   0 }, {  35,   0 },
 {  36,   0 }, {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 },
 {  41,   0 }, {   0,   0 }, {  43,   0 }, {  44,   0 }, {  45,   0 },
 {  46,   0 }, {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },
 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 },
 {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 },
 {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 },
 {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 },

 {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 },
 {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 },
 {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 },
 {  91,   0 }, {  92,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 },
 {  96,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 },
 { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 },
 { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 },
 { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 },
 { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 },
 { 121,   0 }, { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 },

 { 126,   0 }, { 127,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 },
 { 131,   0 }, { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 },
 { 136,   0 }, { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 },
 { 141,   0 }, { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 },
 { 146,   0 }, { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 },
 { 151,   0 }, { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 },
 { 156,   0 }, { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 },
 { 161,   0 }, { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 },
 { 166,   0 }, { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 },
 { 171,   0 }, { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 },

 { 176,   0 }, { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 },
 { 181,   0 }, { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 },
 { 186,   0 }, { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 },
 { 191,   0 }, { 192,   0 }, { 193,   0 }, { 194,   0 }, { 195,   0 },
 { 196,   0 }, { 197,   0 }, { 198,   0 }, { 199,   0 }, { 200,   0 },
 { 201,   0 }, { 202,   0 }, { 203,   0 }, { 204,   0 }, { 205,   0 },
 { 206,   0 }, { 207,   0 }, { 208,   0 }, { 209,   0 }, { 210,   0 },
 { 211,   0 }, { 212,   0 }, { 213,   0 }, { 214,   0 }, { 215,   0 },
 { 216,   0 }, { 217,   0 }, { 218,   0 }, { 219,   0 }, { 220,   0 },
 { 221,   0 }, { 222,   0 }, { 223,   0 }, { 224,   0 }, { 225,   0 },

 { 226,   0 }, { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 },
 { 231,   0 }, { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 },
 { 236,   0 }, { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240,   0 },
 { 241,   0 }, { 242,   0 }, { 243,   0 }, { 244,   0 }, { 245,   0 },
 { 246,   0 }, { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 },
 { 251,   0 }, { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 },
 { 256,   0 }, {   0,   3 }, {   0,5834 }, {   1,-258 }, {   2,-258 },
 {   3,-258 }, {   4,-258 }, {   5,-258 }, {   6,-258 }, {   7,-258 },
 {   8,-258 }, {   9,-258 }, {  10,-258 }, {  11,-258 }, {  12,-258 },
 {  13,-258 }, {  14,-258 }, {  15,-258 }, {  16,-258 }, {  17,-258 },

 {  18,-258 }, {  19,-258 }, {  20,-258 }, {  21,-258 }, {  22,-258 },
 {  23,-258 }, {  24,-258 }, {  25,-258 }, {  26,-258 }, {  27,-258 },
 {  28,-258 }, {  29,-258 }, {  30,-258 }, {  31,-258 }, {  32,-258 },
 {  33,-258 }, {  34,-258 }, {  35,-258 }, {  36,-258 }, {  37,-258 },
 {  38,-258 }, {  39,-258 }, {  40,-258 }, {  41,-258 }, {   0,   0 },
 {  43,-258 }, {  44,-258 }, {  45,-258 }, {  46,-258 }, {  47,-258 },
 {  48,-258 }, {  49,-258 }, {  50,-258 }, {  51,-258 }, {  52,-258 },
 {  53,-258 }, {  54,-258 }, {  55,-258 }, {  56,-258 }, {  57,-258 },
 {  58,-258 }, {  59,-258 }, {  60,-258 }, {  61,-258 }, {  62,-258 },
 {  63,-258 }, {  64,-258 }, {  65,-258 }, {  66,-258 }, {  67,-258 },

 {  68,-258 }, {  69,-258 }, {  70,-258 }, {  71,-258 }, {  72,-258 },
 {  73,-258 }, {  74,-258 }, {  75,-258 }, {  76,-258 }, {  77,-258 },
 {  78,-258 }, {  79,-258 }, {  80,-258 }, {  81,-258 }, {  82,-258 },
 {  83,-258 }, {  84,-258 }, {  85,-258 }, {  86,-258 }, {  87,-258 },
 {  88,-258 }, {  89,-258 }, {  90,-258 }, {  91,-258 }, {  92,-258 },
 {  93,-258 }, {  94,-258 }, {  95,-258 }, {  96,-258 }, {  97,-258 },
 {  98,-258 }, {  99,-258 }, { 100,-258 }, { 101,-258 }, { 102,-258 },
 { 103,-258 }, { 104,-258 }, { 105,-258 }, { 106,-258 }, { 107,-258 },
 { 108,-258 }, { 109,-258 }, { 110,-258 }, { 111,-258 }, { 112,-258 },
 { 113,-258 }, { 114,-258 }, { 115,-258 }, { 116,-258 }, { 117,-258 },

 { 118,-258 }, { 119,-258 }, { 120,-258 }, { 121,-258 }, { 122,-258 },
 { 123,-258 }, { 124,-258 }, { 125,-258 }, { 126,-258 }, { 127,-258 },
 { 128,-258 }, { 129,-258 }, { 130,-258 }, { 131,-258 }, { 132,-258 },
 { 133,-258 }, { 134,-258 }, { 135,-258 }, { 136,-258 }, { 137,-258 },
 { 138,-258 }, { 139,-258 }, { 140,-258 }, { 141,-258 }, { 142,-258 },
 { 143,-258 }, { 144,-258 }, { 145,-258 }, { 146,-258 }, { 147,-258 },
 { 148,-258 }, { 149,-258 }, { 150,-258 }, { 151,-258 }, { 152,-258 },
 { 153,-258 }, { 154,-258 }, { 155,-258 }, { 156,-258 }, { 157,-258 },
 { 158,-258 }, { 159,-258 }, { 160,-258 }, { 161,-258 }, { 162,-258 },
 { 163,-258 }, { 164,-258 }, { 165,-258 }, { 166,-258 }, { 167,-258 },

 { 168,-258 }, { 169,-258 }, { 170,-258 }, { 171,-258 }, { 172,-258 },
 { 173,-258 }, { 174,-258 }, { 175,-258 }, { 176,-258 }, { 177,-258 },
 { 178,-258 }, { 179,-258 }, { 180,-258 }, { 181,-258 }, { 182,-258 },
 { 183,-258 }, { 184,-258 }, { 185,-258 }, { 186,-258 }, { 187,-258 },
 { 188,-258 }, { 189,-258 }, { 190,-258 }, { 191,-258 }, { 192,-258 },
 { 193,-258 }, { 194,-258 }, { 195,-258 }, { 196,-258 }, { 197,-258 },
 { 198,-258 }, { 199,-258 }, { 200,-258 }, { 201,-258 }, { 202,-258 },
 { 203,-258 }, { 204,-258 }, { 205,-258 }, { 206,-258 }, { 207,-258 },
 { 208,-258 }, { 209,-258 }, { 210,-258 }, { 211,-258 }, { 212,-258 },
 { 213,-258 }, { 214,-258 }, { 215,-258 }, { 216,-258 }, { 217,-258 },

 { 218,-258 }, { 219,-258 }, { 220,-258 }, { 221,-258 }, { 222,-258 },
 { 223,-258 }, { 224,-258 }, { 225,-258 }, { 226,-258 }, { 227,-258 },
 { 228,-258 }, { 229,-258 }, { 230,-258 }, { 231,-258 }, { 232,-258 },
 { 233,-258 }, { 234,-258 }, { 235,-258 }, { 236,-258 }, { 237,-258 },
 { 238,-258 }, { 239,-258 }, { 240,-258 }, { 241,-258 }, { 242,-258 },
 { 243,-258 }, { 244,-258 }, { 245,-258 }, { 246,-258 }, { 247,-258 },
 { 248,-258 }, { 249,-258 }, { 250,-258 }, { 251,-258 }, { 252,-258 },
 { 253,-258 }, { 254,-258 }, { 255,-258 }, { 256,-258 }, {   0,   3 },
 {   0,5576 }, {   1,-516 }, {   2,-516 }, {   3,-516 }, {   4,-516 },
 {   5,-516 }, {   6,-516 }, {   7,-516 }, {   8,-516 }, {   9,-516 },

 {  10,-516 }, {  11,-516 }, {  12,-516 }, {  13,-516 }, {  14,-516 },
 {  15,-516 }, {  16,-516 }, {  17,-516 }, {  18,-516 }, {  19,-516 },
 {  20,-516 }, {  21,-516 }, {  22,-516 }, {  23,-516 }, {  24,-516 },
 {  25,-516 }, {  26,-516 }, {  27,-516 }, {  28,-516 }, {  29,-516 },
 {  30,-516 }, {  31,-516 }, {  32,-516 }, {  33,-516 }, {  34,-516 },
 {  35,-516 }, {  36,-516 }, {  37,-516 }, {  38,-516 }, {  39,-516 },
 {  40,-516 }, {  41,-516 }, {   0,   0 }, {  43,-516 }, {  44,-516 },
 {  45,-516 }, {  46,-516 }, {  47,-516 }, {  48,-516 }, {  49,-516 },
 {  50,-516 }, {  51,-516 }, {  52,-516 }, {  53,-516 }, {  54,-516 },
 {  55,-516 }, {  56,-516 }, {  57,-516 }, {  58,-516 }, {  59,-516 },

 {  60,-516 }, {  61,-516 }, {  62,-516 }, {  63,-516 }, {  64,-516 },
 {  65,-516 }, {  66,-516 }, {  67,-516 }, {  68,-516 }, {  69,-516 },
 {  70,-516 }, {  71,-516 }, {  72,-516 }, {  73,-516 }, {  74,-516 },
 {  75,-516 }, {  76,-516 }, {  77,-516 }, {  78,-516 }, {  79,-516 },
 {  80,-516 }, {  81,-516 }, {  82,-516 }, {  83,-516 }, {  84,-516 },
 {  85,-516 }, {  86,-516 }, {  87,-516 }, {  88,-516 }, {  89,-516 },
 {  90,-516 }, {  91,-516 }, {  92,-516 }, {  93,-516 }, {  94,-516 },
 {  95,-516 }, {  96,-516 }, {  97,-516 }, {  98,-516 }, {  99,-516 },
 { 100,-516 }, { 101,-516 }, { 102,-516 }, { 103,-516 }, { 104,-516 },
 { 105,-516 }, { 106,-516 }, { 107,-516 }, { 108,-516 }, { 109,-516 },

 { 110,-516 }, { 111,-516 }, { 112,-516 }, { 113,-516 }, { 114,-516 },
 { 115,-516 }, { 116,-516 }, { 117,-516 }, { 118,-516 }, { 119,-516 },
 { 120,-516 }, { 121,-516 }, { 122,-516 }, { 123,-516 }, { 124,-516 },
 { 125,-516 }, { 126,-516 }, { 127,-516 }, { 128,-258 }, { 129,-258 },
 { 130,-258 }, { 131,-258 }, { 132,-258 }, { 133,-258 }, { 134,-258 },
 { 135,-258 }, { 136,-258 }, { 137,-258 }, { 138,-258 }, { 139,-258 },
 { 140,-258 }, { 141,-258 }, { 142,-258 }, { 143,-258 }, { 144,-258 },
 { 145,-258 }, { 146,-258 }, { 147,-258 }, { 148,-258 }, { 149,-258 },
 { 150,-258 }, { 151,-258 }, { 152,-258 }, { 153,-258 }, { 154,-258 },
 { 155,-258 }, { 156,-258 }, { 157,-258 }, { 158,-258 }, { 159,-258 },

 { 160,-258 }, { 161,-258 }, { 162,-258 }, { 163,-258 }, { 164,-258 },
 { 165,-258 }, { 166,-258 }, { 167,-258 }, { 168,-258 }, { 169,-258 },
 { 170,-258 }, { 171,-258 }, { 172,-258 }, { 173,-258 }, { 174,-258 },
 { 175,-258 }, { 176,-258 }, { 177,-258 }, { 178,-258 }, { 179,-258 },
 { 180,-258 }, { 181,-258 }, { 182,-258 }, { 183,-258 }, { 184,-258 },
 { 185,-258 }, { 186,-258 }, { 187,-258 }, { 188,-258 }, { 189,-258 },
 { 190,-258 }, { 191,-258 }, { 192,-516 }, { 193,-516 }, { 194,-516 },
 { 195,-516 }, { 196,-516 }, { 197,-516 }, { 198,-516 }, { 199,-516 },
 { 200,-516 }, { 201,-516 }, { 202,-516 }, { 203,-516 }, { 204,-516 },
 { 205,-516 }, { 206,-516 }, { 207,-516 }, { 208,-516 }, { 209,-516 },

 { 210,-516 }, { 211,-516 }, { 212,-516 }, { 213,-516 }, { 214,-516 },
 { 215,-516 }, { 216,-516 }, { 217,-516 }, { 218,-516 }, { 219,-516 },
 { 220,-516 }, { 221,-516 }, { 222,-516 }, { 223,-516 }, { 224,-516 },
 { 225,-516 }, { 226,-516 }, { 227,-516 }, { 228,-516 }, { 229,-516 },
 { 230,-516 }, { 231,-516 }, { 232,-516 }, { 233,-516 }, { 234,-516 },
 { 235,-516 }, { 236,-516 }, { 237,-516 }, { 238,-516 }, { 239,-516 },
 { 240,-516 }, { 241,-516 }, { 242,-516 }, { 243,-516 }, { 244,-516 },
 { 245,-516 }, { 246,-516 }, { 247,-516 }, { 248,-516 }, { 249,-516 },
 { 250,-516 }, { 251,-516 }, { 252,-516 }, { 253,-516 }, { 254,-516 },
 { 255,-516 }, { 256,-516 }, {   0,   3 }, {   0,5318 }, {   1,-774 },

 {   2,-774 }, {   3,-774 }, {   4,-774 }, {   5,-774 }, {   6,-774 },
 {   7,-774 }, {   8,-774 }, {   9,-774 }, {  10,-774 }, {  11,-774 },
 {  12,-774 }, {  13,-774 }, {  14,-774 }, {  15,-774 }, {  16,-774 },
 {  17,-774 }, {  18,-774 }, {  19,-774 }, {  20,-774 }, {  21,-774 },
 {  22,-774 }, {  23,-774 }, {  24,-774 }, {  25,-774 }, {  26,-774 },
 {  27,-774 }, {  28,-774 }, {  29,-774 }, {  30,-774 }, {  31,-774 },
 {  32,-774 }, {  33,-774 }, {  34,-774 }, {  35,-774 }, {  36,-774 },
 {  37,-774 }, {  38,-774 }, {  39,-774 }, {  40,-774 }, {  41,-774 },
 {   0,   0 }, {  43,-774 }, {  44,-774 }, {  45,-774 }, {  46,-774 },
 {  47,-774 }, {  48,-774 }, {  49,-774 }, {  50,-774 }, {  51,-774 },

 {  52,-774 }, {  53,-774 }, {  54,-774 }, {  55,-774 }, {  56,-774 },
 {  57,-774 }, {  58,-774 }, {  59,-774 }, {  60,-774 }, {  61,-774 },
 {  62,-774 }, {  63,-774 }, {  64,-774 }, {  65,-774 }, {  66,-774 },
 {  67,-774 }, {  68,-774 }, {  69,-774 }, {  70,-774 }, {  71,-774 },
 {  72,-774 }, {  73,-774 }, {  74,-774 }, {  75,-774 }, {  76,-774 },
 {  77,-774 }, {  78,-774 }, {  79,-774 }, {  80,-774 }, {  81,-774 },
 {  82,-774 }, {  83,-774 }, {  84,-774 }, {  85,-774 }, {  86,-774 },
 {  87,-774 }, {  88,-774 }, {  89,-774 }, {  90,-774 }, {  91,-774 },
 {  92,-774 }, {  93,-774 }, {  94,-774 }, {  95,-774 }, {  96,-774 },
 {  97,-774 }, {  98,-774 }, {  99,-774 }, { 100,-774 }, { 101,-774 },

 { 102,-774 }, { 103,-774 }, { 104,-774 }, { 105,-774 }, { 106,-774 },
 { 107,-774 }, { 108,-774 }, { 109,-774 }, { 110,-774 }, { 111,-774 },
 { 112,-774 }, { 113,-774 }, { 114,-774 }, { 115,-774 }, { 116,-774 },
 { 117,-774 }, { 118,-774 }, { 119,-774 }, { 120,-774 }, { 121,-774 },
 { 122,-774 }, { 123,-774 }, { 124,-774 }, { 125,-774 }, { 126,-774 },
 { 127,-774 }, { 128,3277 }, { 129,3277 }, { 130,3277 }, { 131,3277 },
 { 132,3277 }, { 133,3277 }, { 134,3277 }, { 135,3277 }, { 136,3277 },
 { 137,3277 }, { 138,3277 }, { 139,3277 }, { 140,3277 }, { 141,3277 },
 { 142,3277 }, { 143,3277 }, { 144,3277 }, { 145,3277 }, { 146,3277 },
 { 147,3277 }, { 148,3277 }, { 149,3277 }, { 150,3277 }, { 151,3277 },

 { 152,3277 }, { 153,3277 }, { 154,3277 }, { 155,3277 }, { 156,3277 },
 { 157,3277 }, { 158,3277 }, { 159,3277 }, { 160,3277 }, { 161,3277 },
 { 162,3277 }, { 163,3277 }, { 164,3277 }, { 165,3277 }, { 166,3277 },
 { 167,3277 }, { 168,3277 }, { 169,3277 }, { 170,3277 }, { 171,3277 },
 { 172,3277 }, { 173,3277 }, { 174,3277 }, { 175,3277 }, { 176,3277 },
 { 177,3277 }, { 178,3277 }, { 179,3277 }, { 180,3277 }, { 181,3277 },
 { 182,3277 }, { 183,3277 }, { 184,3277 }, { 185,3277 }, { 186,3277 },
 { 187,3277 }, { 188,3277 }, { 189,3277 }, { 190,3277 }, { 191,3277 },
 { 192,-774 }, { 193,-774 }, { 194,-774 }, { 195,-774 }, { 196,-774 },
 { 197,-774 }, { 198,-774 }, { 199,-774 }, { 200,-774 }, { 201,-774 },

 { 202,-774 }, { 203,-774 }, { 204,-774 }, { 205,-774 }, { 206,-774 },
 { 207,-774 }, { 208,-774 }, { 209,-774 }, { 210,-774 }, { 211,-774 },
 { 212,-774 }, { 213,-774 }, { 214,-774 }, { 215,-774 }, { 216,-774 },
 { 217,-774 }, { 218,-774 }, { 219,-774 }, { 220,-774 }, { 221,-774 },
 { 222,-774 }, { 223,-774 }, { 224,-774 }, { 225,-774 }, { 226,-774 },
 { 227,-774 }, { 228,-774 }, { 229,-774 }, { 230,-774 }, { 231,-774 },
 { 232,-774 }, { 233,-774 }, { 234,-774 }, { 235,-774 }, { 236,-774 },
 { 237,-774 }, { 238,-774 }, { 239,-774 }, { 240,-774 }, { 241,-774 },
 { 242,-774 }, { 243,-774 }, { 244,-774 }, { 245,-774 }, { 246,-774 },
 { 247,-774 }, { 248,-774 }, { 249,-774 }, { 250,-774 }, { 251,-774 },

 { 252,-774 }, { 253,-774 }, { 254,-774 }, { 255,-774 }, { 256,-774 },
 {   0,   0 }, {   0,5060 }, {   1,   0 }, {   2,   0 }, {   3,   0 },
 {   4,   0 }, {   5,   0 }, {   6,   0 }, {   7,   0 }, {   8,   0 },
 {   9,   0 }, {  10,   0 }, {  11,   0 }, {  12,   0 }, {  13,-6271 },
 {  14,   0 }, {  15,   0 }, {  16,   0 }, {  17,   0 }, {  18,   0 },
 {  19,   0 }, {  20,   0 }, {  21,   0 }, {  22,   0 }, {  23,   0 },
 {  24,   0 }, {  25,   0 }, {  26,   0 }, {  27,   0 }, {  28,   0 },
 {  29,   0 }, {  30,   0 }, {  31,   0 }, {  32,   0 }, {  33,   0 },
 {  34,   0 }, {  35,   0 }, {  36,   0 }, {  37,   0 }, {  38,   0 },
 {  39,   0 }, {  40,   0 }, {  41,   0 }, {  42,   0 }, {  43,   0 },

 {  44,   0 }, {  45,   0 }, {  46,   0 }, {  47,   0 }, {  48,   0 },
 {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 },
 {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 }, {  58,   0 },
 {  59,   0 }, {  60,   0 }, {  61,   0 }, {  62,   0 }, {  63,   0 },
 {  64,   0 }, {  65,   0 }, {  66,   0 }, {  67,   0 }, {  68,   0 },
 {  69,   0 }, {  70,   0 }, {  71,   0 }, {  72,   0 }, {  73,   0 },
 {  74,   0 }, {  75,   0 }, {  76,   0 }, {  77,   0 }, {  78,   0 },
 {  79,   0 }, {  80,   0 }, {  81,   0 }, {  82,   0 }, {  83,   0 },
 {  84,   0 }, {  85,   0 }, {  86,   0 }, {  87,   0 }, {  88,   0 },
 {  89,   0 }, {  90,   0 }, {  91,   0 }, {  92,   0 }, {  93,   0 },

 {  94,   0 }, {  95,   0 }, {  96,   0 }, {  97,   0 }, {  98,   0 },
 {  99,   0 }, { 100,   0 }, { 101,   0 }, { 102,   0 }, { 103,   0 },
 { 104,   0 }, { 105,   0 }, { 106,   0 }, { 107,   0 }, { 108,   0 },
 { 109,   0 }, { 110,   0 }, { 111,   0 }, { 112,   0 }, { 113,   0 },
 { 114,   0 }, { 115,   0 }, { 116,   0 }, { 117,   0 }, { 118,   0 },
 { 119,   0 }, { 120,   0 }, { 121,   0 }, { 122,   0 }, { 123,   0 },
 { 124,   0 }, { 125,   0 }, { 126,   0 }, { 127,   0 }, { 128,   0 },
 { 129,   0 }, { 130,   0 }, { 131,   0 }, { 132,   0 }, { 133,   0 },
 { 134,   0 }, { 135,   0 }, { 136,   0 }, { 137,   0 }, { 138,   0 },
 { 139,   0 }, { 140,   0 }, { 141,   0 }, { 142,   0 }, { 143,   0 },

 { 144,   0 }, { 145,   0 }, { 146,   0 }, { 147,   0 }, { 148,   0 },
 { 149,   0 }, { 150,   0 }, { 151,   0 }, { 152,   0 }, { 153,   0 },
 { 154,   0 }, { 155,   0 }, { 156,   0 }, { 157,   0 }, { 158,   0 },
 { 159,   0 }, { 160,   0 }, { 161,   0 }, { 162,   0 }, { 163,   0 },
 { 164,   0 }, { 165,   0 }, { 166,   0 }, { 167,   0 }, { 168,   0 },
 { 169,   0 }, { 170,   0 }, { 171,   0 }, { 172,   0 }, { 173,   0 },
 { 174,   0 }, { 175,   0 }, { 176,   0 }, { 177,   0 }, { 178,   0 },
 { 179,   0 }, { 180,   0 }, { 181,   0 }, { 182,   0 }, { 183,   0 },
 { 184,   0 }, { 185,   0 }, { 186,   0 }, { 187,   0 }, { 188,   0 },
 { 189,   0 }, { 190,   0 }, { 191,   0 }, { 192,   0 }, { 193,   0 },

 { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 }, { 198,   0 },
 { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 }, { 203,   0 },
 { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 }, { 208,   0 },
 { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 }, { 213,   0 },
 { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 }, { 218,   0 },
 { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 }, { 223,   0 },
 { 224,   0 }, { 225,   0 }, { 226,   0 }, { 227,   0 }, { 228,   0 },
 { 229,   0 }, { 230,   0 }, { 231,   0 }, { 232,   0 }, { 233,   0 },
 { 234,   0 }, { 235,   0 }, { 236,   0 }, { 237,   0 }, { 238,   0 },
 { 239,   0 }, { 240,   0 }, { 241,   0 }, { 242,   0 }, { 243,   0 },

 { 244,   0 }, { 245,   0 }, { 246,   0 }, { 247,   0 }, { 248,   0 },
 { 249,   0 }, { 250,   0 }, { 251,   0 }, { 252,   0 }, { 253,   0 },
 { 254,   0 }, { 255,   0 }, { 256,   0 }, {   0,   8 }, {   0,4802 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,   0 },
 {   0,   0 }, {   0,   0 }, {  13,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  32,   0 }, {  33,   0 }, {   0,   0 }, {  35,   0 },

 {  36,   0 }, {  37,   0 }, {  38,   0 }, {  39,   0 }, {  40,   0 },
 {  41,   0 }, {  42,   0 }, {  43,   0 }, {  44,   0 }, {  45,   0 },
 {  46,   0 }, {  47,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 },
 {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 },
 {  56,   0 }, {  57,   0 }, {  58,   0 }, {  59,   0 }, {  60,   0 },
 {  61,   0 }, {  62,   0 }, {  63,   0 }, {  64,   0 }, {  65,   0 },
 {  66,   0 }, {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 },
 {  71,   0 }, {  72,   0 }, {  73,   0 }, {  74,   0 }, {  75,   0 },
 {  76,   0 }, {  77,   0 }, {  78,   0 }, {  79,   0 }, {  80,   0 },
 {  81,   0 }, {  82,   0 }, {  83,   0 }, {  84,   0 }, {  85,   0 },

 {  86,   0 }, {  87,   0 }, {  88,   0 }, {  89,   0 }, {  90,   0 },
 {  91,   0 }, {   0,   0 }, {  93,   0 }, {  94,   0 }, {  95,   0 },
 {  96,   0 }, {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 },
 { 101,   0 }, { 102,   0 }, { 103,   0 }, { 104,   0 }, { 105,   0 },
 { 106,   0 }, { 107,   0 }, { 108,   0 }, { 109,   0 }, { 110,   0 },
 { 111,   0 }, { 112,   0 }, { 113,   0 }, { 114,   0 }, { 115,   0 },
 { 116,   0 }, { 117,   0 }, { 118,   0 }, { 119,   0 }, { 120,   0 },
 { 121,   0 }, { 122,   0 }, { 123,   0 }, { 124,   0 }, { 125,   0 },
 { 126,   0 }, {   0,   0 }, { 128,   0 }, { 129,   0 }, { 130,   0 },
 { 131,   0 }, { 132,   0 }, { 133,   0 }, { 134,   0 }, { 135,   0 },

 { 136,   0 }, { 137,   0 }, { 138,   0 }, { 139,   0 }, { 140,   0 },
 { 141,   0 }, { 142,   0 }, { 143,   0 }, { 144,   0 }, { 145,   0 },
 { 146,   0 }, { 147,   0 }, { 148,   0 }, { 149,   0 }, { 150,   0 },
 { 151,   0 }, { 152,   0 }, { 153,   0 }, { 154,   0 }, { 155,   0 },
 { 156,   0 }, { 157,   0 }, { 158,   0 }, { 159,   0 }, { 160,   0 },
 { 161,   0 }, { 162,   0 }, { 163,   0 }, { 164,   0 }, { 165,   0 },
 { 166,   0 }, { 167,   0 }, { 168,   0 }, { 169,   0 }, { 170,   0 },
 { 171,   0 }, { 172,   0 }, { 173,   0 }, { 174,   0 }, { 175,   0 },
 { 176,   0 }, { 177,   0 }, { 178,   0 }, { 179,   0 }, { 180,   0 },
 { 181,   0 }, { 182,   0 }, { 183,   0 }, { 184,   0 }, { 185,   0 },

 { 186,   0 }, { 187,   0 }, { 188,   0 }, { 189,   0 }, { 190,   0 },
 { 191,   0 }, { 192,   0 }, { 193,   0 }, { 194, 257 }, { 195, 257 },
 { 196, 257 }, { 197, 257 }, { 198, 257 }, { 199, 257 }, { 200, 257 },
 { 201, 257 }, { 202, 257 }, { 203, 257 }, { 204, 257 }, { 205, 257 },
 { 206, 257 }, { 207, 257 }, { 208, 257 }, { 209, 257 }, { 210, 257 },
 { 211, 257 }, { 212, 257 }, { 213, 257 }, { 214, 257 }, { 215, 257 },
 { 216, 257 }, { 217, 257 }, { 218, 257 }, { 219, 257 }, { 220, 257 },
 { 221, 257 }, { 222, 257 }, { 223, 257 }, { 224, 514 }, { 225, 514 },
 { 226, 514 }, { 227, 514 }, { 228, 514 }, { 229, 514 }, { 230, 514 },
 { 231, 514 }, { 232, 514 }, { 233, 514 }, { 234, 514 }, { 235, 514 },

 { 236, 514 }, { 237, 514 }, { 238, 514 }, { 239, 514 }, { 240, 771 },
 { 241, 771 }, { 242, 771 }, { 243, 771 }, { 244, 771 }, { 245,   0 },
 { 246,   0 }, { 247,   0 }, { 248,   0 }, { 249,   0 }, { 250,   0 },
 { 251,   0 }, { 252,   0 }, { 253,   0 }, { 254,   0 }, { 255,   0 },
 {   0,   8 }, {   0,4545 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  10,-257 }, {   0,   0 }, {   0,   0 }, {  13,-257 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,-257 }, {  33,-257 },
 {   0,   0 }, {  35,-257 }, {  36,-257 }, {  37,-257 }, {  38,-257 },
 {  39,-257 }, {  40,-257 }, {  41,-257 }, {  42,-257 }, {  43,-257 },
 {  44,-257 }, {  45,-257 }, {  46,-257 }, {  47,-257 }, {  48,-257 },
 {  49,-257 }, {  50,-257 }, {  51,-257 }, {  52,-257 }, {  53,-257 },
 {  54,-257 }, {  55,-257 }, {  56,-257 }, {  57,-257 }, {  58,-257 },
 {  59,-257 }, {  60,-257 }, {  61,-257 }, {  62,-257 }, {  63,-257 },
 {  64,-257 }, {  65,-257 }, {  66,-257 }, {  67,-257 }, {  68,-257 },
 {  69,-257 }, {  70,-257 }, {  71,-257 }, {  72,-257 }, {  73,-257 },
 {  74,-257 }, {  75,-257 }, {  76,-257 }, {  77,-257 }, {  78,-257 },

 {  79,-257 }, {  80,-257 }, {  81,-257 }, {  82,-257 }, {  83,-257 },
 {  84,-257 }, {  85,-257 }, {  86,-257 }, {  87,-257 }, {  88,-257 },
 {  89,-257 }, {  90,-257 }, {  91,-257 }, {   0,   0 }, {  93,-257 },
 {  94,-257 }, {  95,-257 }, {  96,-257 }, {  97,-257 }, {  98,-257 },
 {  99,-257 }, { 100,-257 }, { 101,-257 }, { 102,-257 }, { 103,-257 },
 { 104,-257 }, { 105,-257 }, { 106,-257 }, { 107,-257 }, { 108,-257 },
 { 109,-257 }, { 110,-257 }, { 111,-257 }, { 112,-257 }, { 113,-257 },
 { 114,-257 }, { 115,-257 }, { 116,-257 }, { 117,-257 }, { 118,-257 },
 { 119,-257 }, { 120,-257 }, { 121,-257 }, { 122,-257 }, { 123,-257 },
 { 124,-257 }, { 125,-257 }, { 126,-257 }, {   0,   0 }, { 128, 853 },

 { 129, 853 }, { 130, 853 }, { 131, 853 }, { 132, 853 }, { 133, 853 },
 { 134, 853 }, { 135, 853 }, { 136, 853 }, { 137, 853 }, { 138, 853 },
 { 139, 853 }, { 140, 853 }, { 141, 853 }, { 142, 853 }, { 143, 853 },
 { 144, 853 }, { 145, 853 }, { 146, 853 }, { 147, 853 }, { 148, 853 },
 { 149, 853 }, { 150, 853 }, { 151, 853 }, { 152, 853 }, { 153, 853 },
 { 154, 853 }, { 155, 853 }, { 156, 853 }, { 157, 853 }, { 158, 853 },
 { 159, 853 }, { 160, 853 }, { 161, 853 }, { 162, 853 }, { 163, 853 },
 { 164, 853 }, { 165, 853 }, { 166, 853 }, { 167, 853 }, { 168, 853 },
 { 169, 853 }, { 170, 853 }, { 171, 853 }, { 172, 853 }, { 173, 853 },
 { 174, 853 }, { 175, 853 }, { 176, 853 }, { 177, 853 }, { 178, 853 },

 { 179, 853 }, { 180, 853 }, { 181, 853 }, { 182, 853 }, { 183, 853 },
 { 184, 853 }, { 185, 853 }, { 186, 853 }, { 187, 853 }, { 188, 853 },
 { 189, 853 }, { 190, 853 }, { 191, 853 }, { 192,-257 }, { 193,-257 },
 { 194,   0 }, { 195,   0 }, { 196,   0 }, { 197,   0 }, { 198,   0 },
 { 199,   0 }, { 200,   0 }, { 201,   0 }, { 202,   0 }, { 203,   0 },
 { 204,   0 }, { 205,   0 }, { 206,   0 }, { 207,   0 }, { 208,   0 },
 { 209,   0 }, { 210,   0 }, { 211,   0 }, { 212,   0 }, { 213,   0 },
 { 214,   0 }, { 215,   0 }, { 216,   0 }, { 217,   0 }, { 218,   0 },
 { 219,   0 }, { 220,   0 }, { 221,   0 }, { 222,   0 }, { 223,   0 },
 { 224, 257 }, { 225, 257 }, { 226, 257 }, { 227, 257 }, { 228, 257 },

 { 229, 257 }, { 230, 257 }, { 231, 257 }, { 232, 257 }, { 233, 257 },
 { 234, 257 }, { 235, 257 }, { 236, 257 }, { 237, 257 }, { 238, 257 },
 { 239, 257 }, { 240, 514 }, { 241, 514 }, { 242, 514 }, { 243, 514 },
 { 244, 514 }, { 245,-257 }, { 246,-257 }, { 247,-257 }, { 248,-257 },
 { 249,-257 }, { 250,-257 }, { 251,-257 }, { 252,-257 }, { 253,-257 },
 { 254,-257 }, { 255,-257 }, {   0,   8 }, {   0,4288 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,-514 }, {   0,   0 },
 {   0,   0 }, {  13,-514 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  32,-514 }, {  33,-514 }, {   0,   0 }, {  35,-514 }, {  36,-514 },
 {  37,-514 }, {  38,-514 }, {  39,-514 }, {  40,-514 }, {  41,-514 },
 {  42,-514 }, {  43,-514 }, {  44,-514 }, {  45,-514 }, {  46,-514 },
 {  47,-514 }, {  48,-514 }, {  49,-514 }, {  50,-514 }, {  51,-514 },
 {  52,-514 }, {  53,-514 }, {  54,-514 }, {  55,-514 }, {  56,-514 },
 {  57,-514 }, {  58,-514 }, {  59,-514 }, {  60,-514 }, {  61,-514 },
 {  62,-514 }, {  63,-514 }, {  64,-514 }, {  65,-514 }, {  66,-514 },
 {  67,-514 }, {  68,-514 }, {  69,-514 }, {  70,-514 }, {  71,-514 },

 {  72,-514 }, {  73,-514 }, {  74,-514 }, {  75,-514 }, {  76,-514 },
 {  77,-514 }, {  78,-514 }, {  79,-514 }, {  80,-514 }, {  81,-514 },
 {  82,-514 }, {  83,-514 }, {  84,-514 }, {  85,-514 }, {  86,-514 },
 {  87,-514 }, {  88,-514 }, {  89,-514 }, {  90,-514 }, {  91,-514 },
 {   0,   0 }, {  93,-514 }, {  94,-514 }, {  95,-514 }, {  96,-514 },
 {  97,-514 }, {  98,-514 }, {  99,-514 }, { 100,-514 }, { 101,-514 },
 { 102,-514 }, { 103,-514 }, { 104,-514 }, { 105,-514 }, { 106,-514 },
 { 107,-514 }, { 108,-514 }, { 109,-514 }, { 110,-514 }, { 111,-514 },
 { 112,-514 }, { 113,-514 }, { 114,-514 }, { 115,-514 }, { 116,-514 },
 { 117,-514 }, { 118,-514 }, { 119,-514 }, { 120,-514 }, { 121,-514 },

 { 122,-514 }, { 123,-514 }, { 124,-514 }, { 125,-514 }, { 126,-514 },
 {   0,   0 }, { 128, 853 }, { 129, 853 }, { 130, 853 }, { 131, 853 },
 { 132, 853 }, { 133, 853 }, { 134, 853 }, { 135, 853 }, { 136, 853 },
 { 137, 853 }, { 138, 853 }, { 139, 853 }, { 140, 853 }, { 141, 853 },
 { 142, 853 }, { 143, 853 }, { 144, 853 }, { 145, 853 }, { 146, 853 },
 { 147, 853 }, { 148, 853 }, { 149, 853 }, { 150, 853 }, { 151, 853 },
 { 152, 853 }, { 153, 853 }, { 154, 853 }, { 155, 853 }, { 156, 853 },
 { 157, 853 }, { 158, 853 }, { 159, 853 }, { 160, 853 }, { 161, 853 },
 { 162, 853 }, { 163, 853 }, { 164, 853 }, { 165, 853 }, { 166, 853 },
 { 167, 853 }, { 168, 853 }, { 169, 853 }, { 170, 853 }, { 171, 853 },

 { 172, 853 }, { 173, 853 }, { 174, 853 }, { 175, 853 }, { 176, 853 },
 { 177, 853 }, { 178, 853 }, { 179, 853 }, { 180, 853 }, { 181, 853 },
 { 182, 853 }, { 183, 853 }, { 184, 853 }, { 185, 853 }, { 186, 853 },
 { 187, 853 }, { 188, 853 }, { 189, 853 }, { 190, 853 }, { 191, 853 },
 { 192,-514 }, { 193,-514 }, { 194,-257 }, { 195,-257 }, { 196,-257 },
 { 197,-257 }, { 198,-257 }, { 199,-257 }, { 200,-257 }, { 201,-257 },
 { 202,-257 }, { 203,-257 }, { 204,-257 }, { 205,-257 }, { 206,-257 },
 { 207,-257 }, { 208,-257 }, { 209,-257 }, { 210,-257 }, { 211,-257 },
 { 212,-257 }, { 213,-257 }, { 214,-257 }, { 215,-257 }, { 216,-257 },
 { 217,-257 }, { 218,-257 }, { 219,-257 }, { 220,-257 }, { 221,-257 },

 { 222,-257 }, { 223,-257 }, { 224,   0 }, { 225,   0 }, { 226,   0 },
 { 227,   0 }, { 228,   0 }, { 229,   0 }, { 230,   0 }, { 231,   0 },
 { 232,   0 }, { 233,   0 }, { 234,   0 }, { 235,   0 }, { 236,   0 },
 { 237,   0 }, { 238,   0 }, { 239,   0 }, { 240, 257 }, { 241, 257 },
 { 242, 257 }, { 243, 257 }, { 244, 257 }, { 245,-514 }, { 246,-514 },
 { 247,-514 }, { 248,-514 }, { 249,-514 }, { 250,-514 }, { 251,-514 },
 { 252,-514 }, { 253,-514 }, { 254,-514 }, { 255,-514 }, {   0,   8 },
 {   0,4031 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  10,-771 }, {   0,   0 }, {   0,   0 }, {  13,-771 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  32,-771 }, {  33,-771 }, {   0,   0 },
 {  35,-771 }, {  36,-771 }, {  37,-771 }, {  38,-771 }, {  39,-771 },
 {  40,-771 }, {  41,-771 }, {  42,-771 }, {  43,-771 }, {  44,-771 },
 {  45,-771 }, {  46,-771 }, {  47,-771 }, {  48,-771 }, {  49,-771 },
 {  50,-771 }, {  51,-771 }, {  52,-771 }, {  53,-771 }, {  54,-771 },
 {  55,-771 }, {  56,-771 }, {  57,-771 }, {  58,-771 }, {  59,-771 },
 {  60,-771 }, {  61,-771 }, {  62,-771 }, {  63,-771 }, {  64,-771 },

 {  65,-771 }, {  66,-771 }, {  67,-771 }, {  68,-771 }, {  69,-771 },
 {  70,-771 }, {  71,-771 }, {  72,-771 }, {  73,-771 }, {  74,-771 },
 {  75,-771 }, {  76,-771 }, {  77,-771 }, {  78,-771 }, {  79,-771 },
 {  80,-771 }, {  81,-771 }, {  82,-771 }, {  83,-771 }, {  84,-771 },
 {  85,-771 }, {  86,-771 }, {  87,-771 }, {  88,-771 }, {  89,-771 },
 {  90,-771 }, {  91,-771 }, {   0,   0 }, {  93,-771 }, {  94,-771 },
 {  95,-771 }, {  96,-771 }, {  97,-771 }, {  98,-771 }, {  99,-771 },
 { 100,-771 }, { 101,-771 }, { 102,-771 }, { 103,-771 }, { 104,-771 },
 { 105,-771 }, { 106,-771 }, { 107,-771 }, { 108,-771 }, { 109,-771 },
 { 110,-771 }, { 111,-771 }, { 112,-771 }, { 113,-771 }, { 114,-771 },

 { 115,-771 }, { 116,-771 }, { 117,-771 }, { 118,-771 }, { 119,-771 },
 { 120,-771 }, { 121,-771 }, { 122,-771 }, { 123,-771 }, { 124,-771 },
 { 125,-771 }, { 126,-771 }, {   0,   0 }, { 128, 853 }, { 129, 853 },
 { 130, 853 }, { 131, 853 }, { 132, 853 }, { 133, 853 }, { 134, 853 },
 { 135, 853 }, { 136, 853 }, { 137, 853 }, { 138, 853 }, { 139, 853 },
 { 140, 853 }, { 141, 853 }, { 142, 853 }, { 143, 853 }, { 144, 853 },
 { 145, 853 }, { 146, 853 }, { 147, 853 }, { 148, 853 }, { 149, 853 },
 { 150, 853 }, { 151, 853 }, { 152, 853 }, { 153, 853 }, { 154, 853 },
 { 155, 853 }, { 156, 853 }, { 157, 853 }, { 158, 853 }, { 159, 853 },
 { 160, 853 }, { 161, 853 }, { 162, 853 }, { 163, 853 }, { 164, 853 },

 { 165, 853 }, { 166, 853 }, { 167, 853 }, { 168, 853 }, { 169, 853 },
 { 170, 853 }, { 171, 853 }, { 172, 853 }, { 173, 853 }, { 174, 853 },
 { 175, 853 }, { 176, 853 }, { 177, 853 }, { 178, 853 }, { 179, 853 },
 { 180, 853 }, { 181, 853 }, { 182, 853 }, { 183, 853 }, { 184, 853 },
 { 185, 853 }, { 186, 853 }, { 187, 853 }, { 188, 853 }, { 189, 853 },
 { 190, 853 }, { 191, 853 }, { 192,-771 }, { 193,-771 }, { 194,-514 },
 { 195,-514 }, { 196,-514 }, { 197,-514 }, { 198,-514 }, { 199,-514 },
 { 200,-514 }, { 201,-514 }, { 202,-514 }, { 203,-514 }, { 204,-514 },
 { 205,-514 }, { 206,-514 }, { 207,-514 }, { 208,-514 }, { 209,-514 },
 { 210,-514 }, { 211,-514 }, { 212,-514 }, { 213,-514 }, { 214,-514 },

 { 215,-514 }, { 216,-514 }, { 217,-514 }, { 218,-514 }, { 219,-514 },
 { 220,-514 }, { 221,-514 }, { 222,-514 }, { 223,-514 }, { 224,-257 },
 { 225,-257 }, { 226,-257 }, { 227,-257 }, { 228,-257 }, { 229,-257 },
 { 230,-257 }, { 231,-257 }, { 232,-257 }, { 233,-257 }, { 234,-257 },
 { 235,-257 }, { 236,-257 }, { 237,-257 }, { 238,-257 }, { 239,-257 },
 { 240,   0 }, { 241,   0 }, { 242,   0 }, { 243,   0 }, { 244,   0 },
 { 245,-771 }, { 246,-771 }, { 247,-771 }, { 248,-771 }, { 249,-771 },
 { 250,-771 }, { 251,-771 }, { 252,-771 }, { 253,-771 }, { 254,-771 },
 { 255,-771 }, {   0,   9 }, {   0,3774 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,3764 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 }, {  52,   0 },
 {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 }, {  57,   0 },

 {  48,1981 }, {  49,1981 }, {  50,1981 }, {  51,1981 }, {  52,1981 },
 {  53,1981 }, {  54,1981 }, {  55,1981 }, {  56,1981 }, {  57,1981 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,1981 }, {  66,1981 }, {  67,1981 },
 {  68,1981 }, {  69,1981 }, {  70,1981 }, {   0,   8 }, {   0,3692 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,-1110 },
 {   0,   0 }, {   0,   0 }, {  13,-1110 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  97,1981 },

 {  98,1981 }, {  99,1981 }, { 100,1981 }, { 101,1981 }, { 102,1981 },
 {   0,   0 }, {  32,-1110 }, {  33,-1110 }, {   0,   0 }, {  35,-1110 },
 {  36,-1110 }, {  37,-1110 }, {  38,-1110 }, {  39,-1110 }, {  40,-1110 },
 {  41,-1110 }, {  42,-1110 }, {  43,-1110 }, {  44,-1110 }, {  45,-1110 },
 {  46,-1110 }, {  47,-1110 }, {  48,-1110 }, {  49,-1110 }, {  50,-1110 },
 {  51,-1110 }, {  52,-1110 }, {  53,-1110 }, {  54,-1110 }, {  55,-1110 },
 {  56,-1110 }, {  57,-1110 }, {  58,-1110 }, {  59,-1110 }, {  60,-1110 },
 {  61,-1110 }, {  62,-1110 }, {  63,-1110 }, {  64,-1110 }, {  65,-1110 },
 {  66,-1110 }, {  67,-1110 }, {  68,-1110 }, {  69,-1110 }, {  70,-1110 },
 {  71,-1110 }, {  72,-1110 }, {  73,-1110 }, {  74,-1110 }, {  75,-1110 },

 {  76,-1110 }, {  77,-1110 }, {  78,-1110 }, {  79,-1110 }, {  80,-1110 },
 {  81,-1110 }, {  82,-1110 }, {  83,-1110 }, {  84,-1110 }, {  85,-1110 },
 {  86,-1110 }, {  87,-1110 }, {  88,-1110 }, {  89,-1110 }, {  90,-1110 },
 {  91,-1110 }, {   0,   0 }, {  93,-1110 }, {  94,-1110 }, {  95,-1110 },
 {  96,-1110 }, {  97,-1110 }, {  98,-1110 }, {  99,-1110 }, { 100,-1110 },
 { 101,-1110 }, { 102,-1110 }, { 103,-1110 }, { 104,-1110 }, { 105,-1110 },
 { 106,-1110 }, { 107,-1110 }, { 108,-1110 }, { 109,-1110 }, { 110,-1110 },
 { 111,-1110 }, { 112,-1110 }, { 113,-1110 }, { 114,-1110 }, { 115,-1110 },
 { 116,-1110 }, { 117,-1110 }, { 118,-1110 }, { 119,-1110 }, { 120,-1110 },
 { 121,-1110 }, { 122,-1110 }, { 123,-1110 }, { 124,-1110 }, { 125,-1110 },

 { 126,-1110 }, {   0,   0 }, { 128,-1110 }, { 129,-1110 }, { 130,-1110 },
 { 131,-1110 }, { 132,-1110 }, { 133,-1110 }, { 134,-1110 }, { 135,-1110 },
 { 136,-1110 }, { 137,-1110 }, { 138,-1110 }, { 139,-1110 }, { 140,-1110 },
 { 141,-1110 }, { 142,-1110 }, { 143,-1110 }, { 144,-1110 }, { 145,-1110 },
 { 146,-1110 }, { 147,-1110 }, { 148,-1110 }, { 149,-1110 }, { 150,-1110 },
 { 151,-1110 }, { 152,-1110 }, { 153,-1110 }, { 154,-1110 }, { 155,-1110 },
 { 156,-1110 }, { 157,-1110 }, { 158,-1110 }, { 159,-1110 }, { 160,-1110 },
 { 161,-1110 }, { 162,-1110 }, { 163,-1110 }, { 164,-1110 }, { 165,-1110 },
 { 166,-1110 }, { 167,-1110 }, { 168,-1110 }, { 169,-1110 }, { 170,-1110 },
 { 171,-1110 }, { 172,-1110 }, { 173,-1110 }, { 174,-1110 }, { 175,-1110 },

 { 176,-1110 }, { 177,-1110 }, { 178,-1110 }, { 179,-1110 }, { 180,-1110 },
 { 181,-1110 }, { 182,-1110 }, { 183,-1110 }, { 184,-1110 }, { 185,-1110 },
 { 186,-1110 }, { 187,-1110 }, { 188,-1110 }, { 189,-1110 }, { 190,-1110 },
 { 191,-1110 }, { 192,-1110 }, { 193,-1110 }, { 194,-853 }, { 195,-853 },
 { 196,-853 }, { 197,-853 }, { 198,-853 }, { 199,-853 }, { 200,-853 },
 { 201,-853 }, { 202,-853 }, { 203,-853 }, { 204,-853 }, { 205,-853 },
 { 206,-853 }, { 207,-853 }, { 208,-853 }, { 209,-853 }, { 210,-853 },
 { 211,-853 }, { 212,-853 }, { 213,-853 }, { 214,-853 }, { 215,-853 },
 { 216,-853 }, { 217,-853 }, { 218,-853 }, { 219,-853 }, { 220,-853 },
 { 221,-853 }, { 222,-853 }, { 223,-853 }, { 224,-596 }, { 225,-596 },

 { 226,-596 }, { 227,-596 }, { 228,-596 }, { 229,-596 }, { 230,-596 },
 { 231,-596 }, { 232,-596 }, { 233,-596 }, { 234,-596 }, { 235,-596 },
 { 236,-596 }, { 237,-596 }, { 238,-596 }, { 239,-596 }, { 240,-339 },
 { 241,-339 }, { 242,-339 }, { 243,-339 }, { 244,-339 }, { 245,-1110 },
 { 246,-1110 }, { 247,-1110 }, { 248,-1110 }, { 249,-1110 }, { 250,-1110 },
 { 251,-1110 }, { 252,-1110 }, { 253,-1110 }, { 254,-1110 }, { 255,-1110 },
 {   0,   8 }, {   0,3435 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  10,-1367 }, {   0,   0 }, {   0,   0 }, {  13,-1367 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  32,-1367 }, {  33,-1367 },
 {   0,   0 }, {  35,-1367 }, {  36,-1367 }, {  37,-1367 }, {  38,-1367 },
 {  39,-1367 }, {  40,-1367 }, {  41,-1367 }, {  42,-1367 }, {  43,-1367 },
 {  44,-1367 }, {  45,-1367 }, {  46,-1367 }, {  47,-1367 }, {  48,-1367 },
 {  49,-1367 }, {  50,-1367 }, {  51,-1367 }, {  52,-1367 }, {  53,-1367 },
 {  54,-1367 }, {  55,-1367 }, {  56,-1367 }, {  57,-1367 }, {  58,-1367 },
 {  59,-1367 }, {  60,-1367 }, {  61,-1367 }, {  62,-1367 }, {  63,-1367 },
 {  64,-1367 }, {  65,-1367 }, {  66,-1367 }, {  67,-1367 }, {  68,-1367 },

 {  69,-1367 }, {  70,-1367 }, {  71,-1367 }, {  72,-1367 }, {  73,-1367 },
 {  74,-1367 }, {  75,-1367 }, {  76,-1367 }, {  77,-1367 }, {  78,-1367 },
 {  79,-1367 }, {  80,-1367 }, {  81,-1367 }, {  82,-1367 }, {  83,-1367 },
 {  84,-1367 }, {  85,-1367 }, {  86,-1367 }, {  87,-1367 }, {  88,-1367 },
 {  89,-1367 }, {  90,-1367 }, {  91,-1367 }, {   0,   0 }, {  93,-1367 },
 {  94,-1367 }, {  95,-1367 }, {  96,-1367 }, {  97,-1367 }, {  98,-1367 },
 {  99,-1367 }, { 100,-1367 }, { 101,-1367 }, { 102,-1367 }, { 103,-1367 },
 { 104,-1367 }, { 105,-1367 }, { 106,-1367 }, { 107,-1367 }, { 108,-1367 },
 { 109,-1367 }, { 110,-1367 }, { 111,-1367 }, { 112,-1367 }, { 113,-1367 },
 { 114,-1367 }, { 115,-1367 }, { 116,-1367 }, { 117,-1367 }, { 118,-1367 },

 { 119,-1367 }, { 120,-1367 }, { 121,-1367 }, { 122,-1367 }, { 123,-1367 },
 { 124,-1367 }, { 125,-1367 }, { 126,-1367 }, {   0,   0 }, { 128,-257 },
 { 129,-257 }, { 130,-257 }, { 131,-257 }, { 132,-257 }, { 133,-257 },
 { 134,-257 }, { 135,-257 }, { 136,-257 }, { 137,-257 }, { 138,-257 },
 { 139,-257 }, { 140,-257 }, { 141,-257 }, { 142,-257 }, { 143,-257 },
 { 144,-257 }, { 145,-257 }, { 146,-257 }, { 147,-257 }, { 148,-257 },
 { 149,-257 }, { 150,-257 }, { 151,-257 }, { 152,-257 }, { 153,-257 },
 { 154,-257 }, { 155,-257 }, { 156,-257 }, { 157,-257 }, { 158,-257 },
 { 159,-257 }, { 160,-257 }, { 161,-257 }, { 162,-257 }, { 163,-257 },
 { 164,-257 }, { 165,-257 }, { 166,-257 }, { 167,-257 }, { 168,-257 },

 { 169,-257 }, { 170,-257 }, { 171,-257 }, { 172,-257 }, { 173,-257 },
 { 174,-257 }, { 175,-257 }, { 176,-257 }, { 177,-257 }, { 178,-257 },
 { 179,-257 }, { 180,-257 }, { 181,-257 }, { 182,-257 }, { 183,-257 },
 { 184,-257 }, { 185,-257 }, { 186,-257 }, { 187,-257 }, { 188,-257 },
 { 189,-257 }, { 190,-257 }, { 191,-257 }, { 192,-1367 }, { 193,-1367 },
 { 194,-1110 }, { 195,-1110 }, { 196,-1110 }, { 197,-1110 }, { 198,-1110 },
 { 199,-1110 }, { 200,-1110 }, { 201,-1110 }, { 202,-1110 }, { 203,-1110 },
 { 204,-1110 }, { 205,-1110 }, { 206,-1110 }, { 207,-1110 }, { 208,-1110 },
 { 209,-1110 }, { 210,-1110 }, { 211,-1110 }, { 212,-1110 }, { 213,-1110 },
 { 214,-1110 }, { 215,-1110 }, { 216,-1110 }, { 217,-1110 }, { 218,-1110 },

 { 219,-1110 }, { 220,-1110 }, { 221,-1110 }, { 222,-1110 }, { 223,-1110 },
 { 224,-853 }, { 225,-853 }, { 226,-853 }, { 227,-853 }, { 228,-853 },
 { 229,-853 }, { 230,-853 }, { 231,-853 }, { 232,-853 }, { 233,-853 },
 { 234,-853 }, { 235,-853 }, { 236,-853 }, { 237,-853 }, { 238,-853 },
 { 239,-853 }, { 240,-596 }, { 241,-596 }, { 242,-596 }, { 243,-596 },
 { 244,-596 }, { 245,-1367 }, { 246,-1367 }, { 247,-1367 }, { 248,-1367 },
 { 249,-1367 }, { 250,-1367 }, { 251,-1367 }, { 252,-1367 }, { 253,-1367 },
 { 254,-1367 }, { 255,-1367 }, {   0,   8 }, {   0,3178 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  10,-1624 }, {   0,   0 },

 {   0,   0 }, {  13,-1624 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  32,-1624 }, {  33,-1624 }, {   0,   0 }, {  35,-1624 }, {  36,-1624 },
 {  37,-1624 }, {  38,-1624 }, {  39,-1624 }, {  40,-1624 }, {  41,-1624 },
 {  42,-1624 }, {  43,-1624 }, {  44,-1624 }, {  45,-1624 }, {  46,-1624 },
 {  47,-1624 }, {  48,-1624 }, {  49,-1624 }, {  50,-1624 }, {  51,-1624 },
 {  52,-1624 }, {  53,-1624 }, {  54,-1624 }, {  55,-1624 }, {  56,-1624 },
 {  57,-1624 }, {  58,-1624 }, {  59,-1624 }, {  60,-1624 }, {  61,-1624 },

 {  62,-1624 }, {  63,-1624 }, {  64,-1624 }, {  65,-1624 }, {  66,-1624 },
 {  67,-1624 }, {  68,-1624 }, {  69,-1624 }, {  70,-1624 }, {  71,-1624 },
 {  72,-1624 }, {  73,-1624 }, {  74,-1624 }, {  75,-1624 }, {  76,-1624 },
 {  77,-1624 }, {  78,-1624 }, {  79,-1624 }, {  80,-1624 }, {  81,-1624 },
 {  82,-1624 }, {  83,-1624 }, {  84,-1624 }, {  85,-1624 }, {  86,-1624 },
 {  87,-1624 }, {  88,-1624 }, {  89,-1624 }, {  90,-1624 }, {  91,-1624 },
 {   0,   0 }, {  93,-1624 }, {  94,-1624 }, {  95,-1624 }, {  96,-1624 },
 {  97,-1624 }, {  98,-1624 }, {  99,-1624 }, { 100,-1624 }, { 101,-1624 },
 { 102,-1624 }, { 103,-1624 }, { 104,-1624 }, { 105,-1624 }, { 106,-1624 },
 { 107,-1624 }, { 108,-1624 }, { 109,-1624 }, { 110,-1624 }, { 111,-1624 },

 { 112,-1624 }, { 113,-1624 }, { 114,-1624 }, { 115,-1624 }, { 116,-1624 },
 { 117,-1624 }, { 118,-1624 }, { 119,-1624 }, { 120,-1624 }, { 121,-1624 },
 { 122,-1624 }, { 123,-1624 }, { 124,-1624 }, { 125,-1624 }, { 126,-1624 },
 {   0,   0 }, { 128,1467 }, { 129,1467 }, { 130,1467 }, { 131,1467 },
 { 132,1467 }, { 133,1467 }, { 134,1467 }, { 135,1467 }, { 136,1467 },
 { 137,1467 }, { 138,1467 }, { 139,1467 }, { 140,1467 }, { 141,1467 },
 { 142,1467 }, { 143,1467 }, { 144,1467 }, { 145,1467 }, { 146,1467 },
 { 147,1467 }, { 148,1467 }, { 149,1467 }, { 150,1467 }, { 151,1467 },
 { 152,1467 }, { 153,1467 }, { 154,1467 }, { 155,1467 }, { 156,1467 },
 { 157,1467 }, { 158,1467 }, { 159,1467 }, { 160,1467 }, { 161,1467 },

 { 162,1467 }, { 163,1467 }, { 164,1467 }, { 165,1467 }, { 166,1467 },
 { 167,1467 }, { 168,1467 }, { 169,1467 }, { 170,1467 }, { 171,1467 },
 { 172,1467 }, { 173,1467 }, { 174,1467 }, { 175,1467 }, { 176,1467 },
 { 177,1467 }, { 178,1467 }, { 179,1467 }, { 180,1467 }, { 181,1467 },
 { 182,1467 }, { 183,1467 }, { 184,1467 }, { 185,1467 }, { 186,1467 },
 { 187,1467 }, { 188,1467 }, { 189,1467 }, { 190,1467 }, { 191,1467 },
 { 192,-1624 }, { 193,-1624 }, { 194,-1367 }, { 195,-1367 }, { 196,-1367 },
 { 197,-1367 }, { 198,-1367 }, { 199,-1367 }, { 200,-1367 }, { 201,-1367 },
 { 202,-1367 }, { 203,-1367 }, { 204,-1367 }, { 205,-1367 }, { 206,-1367 },
 { 207,-1367 }, { 208,-1367 }, { 209,-1367 }, { 210,-1367 }, { 211,-1367 },

 { 212,-1367 }, { 213,-1367 }, { 214,-1367 }, { 215,-1367 }, { 216,-1367 },
 { 217,-1367 }, { 218,-1367 }, { 219,-1367 }, { 220,-1367 }, { 221,-1367 },
 { 222,-1367 }, { 223,-1367 }, { 224,-1110 }, { 225,-1110 }, { 226,-1110 },
 { 227,-1110 }, { 228,-1110 }, { 229,-1110 }, { 230,-1110 }, { 231,-1110 },
 { 232,-1110 }, { 233,-1110 }, { 234,-1110 }, { 235,-1110 }, { 236,-1110 },
 { 237,-1110 }, { 238,-1110 }, { 239,-1110 }, { 240,-853 }, { 241,-853 },
 { 242,-853 }, { 243,-853 }, { 244,-853 }, { 245,-1624 }, { 246,-1624 },
 { 247,-1624 }, { 248,-1624 }, { 249,-1624 }, { 250,-1624 }, { 251,-1624 },
 { 252,-1624 }, { 253,-1624 }, { 254,-1624 }, { 255,-1624 }, {   0,   0 },
 {   0,2921 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  40 },
 {   0,2911 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,  38 },
 {   0,2901 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,  10 }, {  49,  10 },
 {  50,  10 }, {  51,  10 }, {  52,  10 }, {  53,  10 }, {  54,  10 },

 {  55,  10 }, {  56,  10 }, {  57,  10 }, {  48,   0 }, {  49,   0 },
 {  50,   0 }, {  51,   0 }, {  52,   0 }, {  53,   0 }, {  54,   0 },
 {  55,   0 }, {  56,   0 }, {  57,   0 }, {  48,-4327 }, {  49,-4327 },
 {  50,-4327 }, {  51,-4327 }, {  52,-4327 }, {  53,-4327 }, {  54,-4327 },
 {  55,-4327 }, {  56,-4327 }, {  57,-4327 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-4235 }, {  66,-4235 }, {  67,-4235 }, {  68,-4235 }, {  69,-4235 },
 {  70,-4235 }, {  71,-4235 }, {  72,-4235 }, {  73,-4235 }, {  74,-4235 },
 {  75,-4235 }, {  76,-4235 }, {  77,-4235 }, {  78,-4235 }, {  79,-4235 },
 {  80,-4235 }, {  81,-4235 }, {  82,-4235 }, {  83,-4235 }, {  84,-4235 },

 {  85,-4235 }, {  86,-4235 }, {  87,-4235 }, {  88,-4235 }, {  89,-4235 },
 {  90,-4235 }, {   0,  38 }, {   0,2809 }, {   0,   0 }, {   0,   0 },
 {  95,-4235 }, {   0,   0 }, {  97,-4235 }, {  98,-4235 }, {  99,-4235 },
 { 100,-4235 }, { 101,-4235 }, { 102,-4235 }, { 103,-4235 }, { 104,-4235 },
 { 105,-4235 }, { 106,-4235 }, { 107,-4235 }, { 108,1447 }, { 109,-4235 },
 { 110,-4235 }, { 111,-4235 }, { 112,-4235 }, { 113,-4235 }, { 114,-4235 },
 { 115,-4235 }, { 116,-4235 }, { 117,-4235 }, { 118,-4235 }, { 119,-4235 },
 { 120,-4235 }, { 121,-4235 }, { 122,-4235 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-4419 }, {  49,-4419 }, {  50,-4419 }, {  51,-4419 }, {  52,-4419 },
 {  53,-4419 }, {  54,-4419 }, {  55,-4419 }, {  56,-4419 }, {  57,-4419 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-4327 }, {  66,-4327 }, {  67,-4327 },
 {  68,-4327 }, {  69,-4327 }, {  70,-4327 }, {  71,-4327 }, {  72,-4327 },
 {  73,-4327 }, {  74,-4327 }, {  75,-4327 }, {  76,-4327 }, {  77,-4327 },
 {  78,-4327 }, {  79,-4327 }, {  80,-4327 }, {  81,-4327 }, {  82,-4327 },
 {  83,-4327 }, {  84,-4327 }, {  85,-4327 }, {  86,-4327 }, {  87,-4327 },
 {  88,-4327 }, {  89,-4327 }, {  90,-4327 }, {   0,  38 }, {   0,2717 },

 {   0,   0 }, {   0,   0 }, {  95,-4327 }, {   0,   0 }, {  97,-4327 },
 {  98,-4327 }, {  99,-4327 }, { 100,-4327 }, { 101,-4327 }, { 102,-4327 },
 { 103,-4327 }, { 104,-4327 }, { 105,-4327 }, { 106,-4327 }, { 107,-4327 },
 { 108,-4327 }, { 109,1447 }, { 110,-4327 }, { 111,-4327 }, { 112,-4327 },
 { 113,-4327 }, { 114,-4327 }, { 115,-4327 }, { 116,-4327 }, { 117,-4327 },
 { 118,-4327 }, { 119,-4327 }, { 120,-4327 }, { 121,-4327 }, { 122,-4327 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-4511 }, {  49,-4511 }, {  50,-4511 },

 {  51,-4511 }, {  52,-4511 }, {  53,-4511 }, {  54,-4511 }, {  55,-4511 },
 {  56,-4511 }, {  57,-4511 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-4419 },
 {  66,-4419 }, {  67,-4419 }, {  68,-4419 }, {  69,-4419 }, {  70,-4419 },
 {  71,-4419 }, {  72,-4419 }, {  73,-4419 }, {  74,-4419 }, {  75,-4419 },
 {  76,-4419 }, {  77,-4419 }, {  78,-4419 }, {  79,-4419 }, {  80,-4419 },
 {  81,-4419 }, {  82,-4419 }, {  83,-4419 }, {  84,-4419 }, {  85,-4419 },
 {  86,-4419 }, {  87,-4419 }, {  88,-4419 }, {  89,-4419 }, {  90,-4419 },
 {   0,  38 }, {   0,2625 }, {   0,   0 }, {   0,   0 }, {  95,-4419 },
 {   0,   0 }, {  97,-4419 }, {  98,-4419 }, {  99,-4419 }, { 100,-4419 },

 { 101,1447 }, { 102,-4419 }, { 103,-4419 }, { 104,-4419 }, { 105,-4419 },
 { 106,-4419 }, { 107,-4419 }, { 108,-4419 }, { 109,-4419 }, { 110,-4419 },
 { 111,-4419 }, { 112,-4419 }, { 113,-4419 }, { 114,-4419 }, { 115,-4419 },
 { 116,-4419 }, { 117,-4419 }, { 118,-4419 }, { 119,-4419 }, { 120,-4419 },
 { 121,-4419 }, { 122,-4419 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-4603 },
 {  49,-4603 }, {  50,-4603 }, {  51,-4603 }, {  52,-4603 }, {  53,-4603 },
 {  54,-4603 }, {  55,-4603 }, {  56,-4603 }, {  57,-4603 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-4511 }, {  66,-4511 }, {  67,-4511 }, {  68,-4511 },
 {  69,-4511 }, {  70,-4511 }, {  71,-4511 }, {  72,-4511 }, {  73,-4511 },
 {  74,-4511 }, {  75,-4511 }, {  76,-4511 }, {  77,-4511 }, {  78,-4511 },
 {  79,-4511 }, {  80,-4511 }, {  81,-4511 }, {  82,-4511 }, {  83,-4511 },
 {  84,-4511 }, {  85,-4511 }, {  86,-4511 }, {  87,-4511 }, {  88,-4511 },
 {  89,-4511 }, {  90,-4511 }, {   0,  20 }, {   0,2533 }, {   0,   0 },
 {   0,   0 }, {  95,-4511 }, {   0,   0 }, {  97,1447 }, {  98,-4511 },
 {  99,-4511 }, { 100,-4511 }, { 101,-4511 }, { 102,-4511 }, { 103,-4511 },
 { 104,-4511 }, { 105,-4511 }, { 106,-4511 }, { 107,-4511 }, { 108,-4511 },

 { 109,-4511 }, { 110,-4511 }, { 111,-4511 }, { 112,-4511 }, { 113,-4511 },
 { 114,-4511 }, { 115,-4511 }, { 116,-4511 }, { 117,-4511 }, { 118,-4511 },
 { 119,-4511 }, { 120,-4511 }, { 121,-4511 }, { 122,-4511 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-4695 }, {  49,-4695 }, {  50,-4695 }, {  51,-4695 },
 {  52,-4695 }, {  53,-4695 }, {  54,-4695 }, {  55,-4695 }, {  56,-4695 },
 {  57,-4695 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-4603 }, {  66,-4603 },

 {  67,-4603 }, {  68,-4603 }, {  69,-4603 }, {  70,-4603 }, {  71,-4603 },
 {  72,-4603 }, {  73,-4603 }, {  74,-4603 }, {  75,-4603 }, {  76,-4603 },
 {  77,-4603 }, {  78,-4603 }, {  79,-4603 }, {  80,-4603 }, {  81,-4603 },
 {  82,-4603 }, {  83,-4603 }, {  84,-4603 }, {  85,-4603 }, {  86,-4603 },
 {  87,-4603 }, {  88,-4603 }, {  89,-4603 }, {  90,-4603 }, {   0,  13 },
 {   0,2441 }, {   0,   0 }, {   0,   0 }, {  95,-4603 }, {   0,   0 },
 {  97,-4603 }, {  98,-4603 }, {  99,-4603 }, { 100,-4603 }, { 101,-4603 },
 { 102,-4603 }, { 103,-4603 }, { 104,-4603 }, { 105,-4603 }, { 106,-4603 },
 { 107,-4603 }, { 108,-4603 }, { 109,-4603 }, { 110,-4603 }, { 111,-4603 },
 { 112,-4603 }, { 113,-4603 }, { 114,-4603 }, { 115,-4603 }, { 116,-4603 },

 { 117,-4603 }, { 118,-4603 }, { 119,-4603 }, { 120,-4603 }, { 121,-4603 },
 { 122,-4603 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-4787 }, {  49,-4787 },
 {  50,-4787 }, {  51,-4787 }, {  52,-4787 }, {  53,-4787 }, {  54,-4787 },
 {  55,-4787 }, {  56,-4787 }, {  57,-4787 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-4695 }, {  66,-4695 }, {  67,-4695 }, {  68,-4695 }, {  69,-4695 },
 {  70,-4695 }, {  71,-4695 }, {  72,-4695 }, {  73,-4695 }, {  74,-4695 },

 {  75,-4695 }, {  76,-4695 }, {  77,-4695 }, {  78,-4695 }, {  79,-4695 },
 {  80,-4695 }, {  81,-4695 }, {  82,-4695 }, {  83,-4695 }, {  84,-4695 },
 {  85,-4695 }, {  86,-4695 }, {  87,-4695 }, {  88,-4695 }, {  89,-4695 },
 {  90,-4695 }, {   0,  38 }, {   0,2349 }, {   0,   0 }, {   0,   0 },
 {  95,-4695 }, {   0,   0 }, {  97,-4695 }, {  98,-4695 }, {  99,-4695 },
 { 100,-4695 }, { 101,-4695 }, { 102,-4695 }, { 103,-4695 }, { 104,-4695 },
 { 105,-4695 }, { 106,-4695 }, { 107,-4695 }, { 108,-4695 }, { 109,-4695 },
 { 110,-4695 }, { 111,-4695 }, { 112,-4695 }, { 113,-4695 }, { 114,-4695 },
 { 115,-4695 }, { 116,-4695 }, { 117,-4695 }, { 118,-4695 }, { 119,-4695 },
 { 120,-4695 }, { 121,-4695 }, { 122,-4695 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-4879 }, {  49,-4879 }, {  50,-4879 }, {  51,-4879 }, {  52,-4879 },
 {  53,-4879 }, {  54,-4879 }, {  55,-4879 }, {  56,-4879 }, {  57,-4879 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-4787 }, {  66,-4787 }, {  67,-4787 },
 {  68,-4787 }, {  69,-4787 }, {  70,-4787 }, {  71,-4787 }, {  72,-4787 },
 {  73,-4787 }, {  74,-4787 }, {  75,-4787 }, {  76,-4787 }, {  77,-4787 },
 {  78,-4787 }, {  79,-4787 }, {  80,-4787 }, {  81,-4787 }, {  82,-4787 },

 {  83,-4787 }, {  84,-4787 }, {  85,-4787 }, {  86,-4787 }, {  87,-4787 },
 {  88,-4787 }, {  89,-4787 }, {  90,-4787 }, {   0,  38 }, {   0,2257 },
 {   0,   0 }, {   0,   0 }, {  95,-4787 }, {   0,   0 }, {  97,-4787 },
 {  98,-4787 }, {  99,-4787 }, { 100,-4787 }, { 101,-4787 }, { 102,-4787 },
 { 103,-4787 }, { 104,-4787 }, { 105,1263 }, { 106,-4787 }, { 107,-4787 },
 { 108,-4787 }, { 109,-4787 }, { 110,-4787 }, { 111,-4787 }, { 112,-4787 },
 { 113,-4787 }, { 114,-4787 }, { 115,-4787 }, { 116,-4787 }, { 117,-4787 },
 { 118,-4787 }, { 119,-4787 }, { 120,-4787 }, { 121,-4787 }, { 122,-4787 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-4971 }, {  49,-4971 }, {  50,-4971 },
 {  51,-4971 }, {  52,-4971 }, {  53,-4971 }, {  54,-4971 }, {  55,-4971 },
 {  56,-4971 }, {  57,-4971 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-4879 },
 {  66,-4879 }, {  67,-4879 }, {  68,-4879 }, {  69,-4879 }, {  70,-4879 },
 {  71,-4879 }, {  72,-4879 }, {  73,-4879 }, {  74,-4879 }, {  75,-4879 },
 {  76,-4879 }, {  77,-4879 }, {  78,-4879 }, {  79,-4879 }, {  80,-4879 },
 {  81,-4879 }, {  82,-4879 }, {  83,-4879 }, {  84,-4879 }, {  85,-4879 },
 {  86,-4879 }, {  87,-4879 }, {  88,-4879 }, {  89,-4879 }, {  90,-4879 },

 {   0,  14 }, {   0,2165 }, {   0,   0 }, {   0,   0 }, {  95,-4879 },
 {   0,   0 }, {  97,-4879 }, {  98,-4879 }, {  99,-4879 }, { 100,-4879 },
 { 101,1263 }, { 102,-4879 }, { 103,-4879 }, { 104,-4879 }, { 105,-4879 },
 { 106,-4879 }, { 107,-4879 }, { 108,-4879 }, { 109,-4879 }, { 110,-4879 },
 { 111,-4879 }, { 112,-4879 }, { 113,-4879 }, { 114,-4879 }, { 115,-4879 },
 { 116,-4879 }, { 117,-4879 }, { 118,-4879 }, { 119,-4879 }, { 120,-4879 },
 { 121,-4879 }, { 122,-4879 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-5063 },

 {  49,-5063 }, {  50,-5063 }, {  51,-5063 }, {  52,-5063 }, {  53,-5063 },
 {  54,-5063 }, {  55,-5063 }, {  56,-5063 }, {  57,-5063 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-4971 }, {  66,-4971 }, {  67,-4971 }, {  68,-4971 },
 {  69,-4971 }, {  70,-4971 }, {  71,-4971 }, {  72,-4971 }, {  73,-4971 },
 {  74,-4971 }, {  75,-4971 }, {  76,-4971 }, {  77,-4971 }, {  78,-4971 },
 {  79,-4971 }, {  80,-4971 }, {  81,-4971 }, {  82,-4971 }, {  83,-4971 },
 {  84,-4971 }, {  85,-4971 }, {  86,-4971 }, {  87,-4971 }, {  88,-4971 },
 {  89,-4971 }, {  90,-4971 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  95,-4971 }, {   0,   0 }, {  97,-4971 }, {  98,-4971 },

 {  99,-4971 }, { 100,-4971 }, { 101,-4971 }, { 102,-4971 }, { 103,-4971 },
 { 104,-4971 }, { 105,-4971 }, { 106,-4971 }, { 107,-4971 }, { 108,-4971 },
 { 109,-4971 }, { 110,-4971 }, { 111,-4971 }, { 112,-4971 }, { 113,-4971 },
 { 114,-4971 }, { 115,-4971 }, { 116,-4971 }, { 117,-4971 }, { 118,-4971 },
 { 119,-4971 }, { 120,-4971 }, { 121,-4971 }, { 122,-4971 }, {   0,   3 },
 {   0,2041 }, {   1,-4051 }, {   2,-4051 }, {   3,-4051 }, {   4,-4051 },
 {   5,-4051 }, {   6,-4051 }, {   7,-4051 }, {   8,-4051 }, {   9,-4051 },
 {  10,-4051 }, {  11,-4051 }, {  12,-4051 }, {  13,-4051 }, {  14,-4051 },
 {  15,-4051 }, {  16,-4051 }, {  17,-4051 }, {  18,-4051 }, {  19,-4051 },
 {  20,-4051 }, {  21,-4051 }, {  22,-4051 }, {  23,-4051 }, {  24,-4051 },

 {  25,-4051 }, {  26,-4051 }, {  27,-4051 }, {  28,-4051 }, {  29,-4051 },
 {  30,-4051 }, {  31,-4051 }, {  32,-4051 }, {  33,-4051 }, {  34,-4051 },
 {  35,-4051 }, {  36,-4051 }, {  37,-4051 }, {  38,-4051 }, {  39,-4051 },
 {  40,-4051 }, {  41,-4051 }, {   0,   0 }, {  43,-4051 }, {  44,-4051 },
 {  45,-4051 }, {  46,-4051 }, {  47,-4051 }, {  48,-4051 }, {  49,-4051 },
 {  50,-4051 }, {  51,-4051 }, {  52,-4051 }, {  53,-4051 }, {  54,-4051 },
 {  55,-4051 }, {  56,-4051 }, {  57,-4051 }, {  58,-4051 }, {  59,-4051 },
 {  60,-4051 }, {  61,-4051 }, {  62,-4051 }, {  63,-4051 }, {  64,-4051 },
 {  65,-4051 }, {  66,-4051 }, {  67,-4051 }, {  68,-4051 }, {  69,-4051 },
 {  70,-4051 }, {  71,-4051 }, {  72,-4051 }, {  73,-4051 }, {  74,-4051 },

 {  75,-4051 }, {  76,-4051 }, {  77,-4051 }, {  78,-4051 }, {  79,-4051 },
 {  80,-4051 }, {  81,-4051 }, {  82,-4051 }, {  83,-4051 }, {  84,-4051 },
 {  85,-4051 }, {  86,-4051 }, {  87,-4051 }, {  88,-4051 }, {  89,-4051 },
 {  90,-4051 }, {  91,-4051 }, {  92,-4051 }, {  93,-4051 }, {  94,-4051 },
 {  95,-4051 }, {  96,-4051 }, {  97,-4051 }, {  98,-4051 }, {  99,-4051 },
 { 100,-4051 }, { 101,-4051 }, { 102,-4051 }, { 103,-4051 }, { 104,-4051 },
 { 105,-4051 }, { 106,-4051 }, { 107,-4051 }, { 108,-4051 }, { 109,-4051 },
 { 110,-4051 }, { 111,-4051 }, { 112,-4051 }, { 113,-4051 }, { 114,-4051 },
 { 115,-4051 }, { 116,-4051 }, { 117,-4051 }, { 118,-4051 }, { 119,-4051 },
 { 120,-4051 }, { 121,-4051 }, { 122,-4051 }, { 123,-4051 }, { 124,-4051 },

 { 125,-4051 }, { 126,-4051 }, { 127,-4051 }, { 128,-3793 }, { 129,-3793 },
 { 130,-3793 }, { 131,-3793 }, { 132,-3793 }, { 133,-3793 }, { 134,-3793 },
 { 135,-3793 }, { 136,-3793 }, { 137,-3793 }, { 138,-3793 }, { 139,-3793 },
 { 140,-3793 }, { 141,-3793 }, { 142,-3793 }, { 143,-3793 }, { 144,-3793 },
 { 145,-3793 }, { 146,-3793 }, { 147,-3793 }, { 148,-3793 }, { 149,-3793 },
 { 150,-3793 }, { 151,-3793 }, { 152,-3793 }, { 153,-3793 }, { 154,-3793 },
 { 155,-3793 }, { 156,-3793 }, { 157,-3793 }, { 158,-3793 }, { 159,-3793 },
 { 160,-3793 }, { 161,-3793 }, { 162,-3793 }, { 163,-3793 }, { 164,-3793 },
 { 165,-3793 }, { 166,-3793 }, { 167,-3793 }, { 168,-3793 }, { 169,-3793 },
 { 170,-3793 }, { 171,-3793 }, { 172,-3793 }, { 173,-3793 }, { 174,-3793 },

 { 175,-3793 }, { 176,-3793 }, { 177,-3793 }, { 178,-3793 }, { 179,-3793 },
 { 180,-3793 }, { 181,-3793 }, { 182,-3793 }, { 183,-3793 }, { 184,-3793 },
 { 185,-3793 }, { 186,-3793 }, { 187,-3793 }, { 188,-3793 }, { 189,-3793 },
 { 190,-3793 }, { 191,-3793 }, { 192,-4051 }, { 193,-4051 }, { 194,-4051 },
 { 195,-4051 }, { 196,-4051 }, { 197,-4051 }, { 198,-4051 }, { 199,-4051 },
 { 200,-4051 }, { 201,-4051 }, { 202,-4051 }, { 203,-4051 }, { 204,-4051 },
 { 205,-4051 }, { 206,-4051 }, { 207,-4051 }, { 208,-4051 }, { 209,-4051 },
 { 210,-4051 }, { 211,-4051 }, { 212,-4051 }, { 213,-4051 }, { 214,-4051 },
 { 215,-4051 }, { 216,-4051 }, { 217,-4051 }, { 218,-4051 }, { 219,-4051 },
 { 220,-4051 }, { 221,-4051 }, { 222,-4051 }, { 223,-4051 }, { 224,-4051 },

 { 225,-4051 }, { 226,-4051 }, { 227,-4051 }, { 228,-4051 }, { 229,-4051 },
 { 230,-4051 }, { 231,-4051 }, { 232,-4051 }, { 233,-4051 }, { 234,-4051 },
 { 235,-4051 }, { 236,-4051 }, { 237,-4051 }, { 238,-4051 }, { 239,-4051 },
 { 240,-4051 }, { 241,-4051 }, { 242,-4051 }, { 243,-4051 }, { 244,-4051 },
 { 245,-4051 }, { 246,-4051 }, { 247,-4051 }, { 248,-4051 }, { 249,-4051 },
 { 250,-4051 }, { 251,-4051 }, { 252,-4051 }, { 253,-4051 }, { 254,-4051 },
 { 255,-4051 }, { 256,-4051 }, {   0,  10 }, {   0,1783 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,   0 }, {  49,   0 }, {  50,   0 }, {  51,   0 },
 {  52,   0 }, {  53,   0 }, {  54,   0 }, {  55,   0 }, {  56,   0 },
 {  57,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,   0 }, {  66,   0 },

 {  67,   0 }, {  68,   0 }, {  69,   0 }, {  70,   0 }, {   0,   8 },
 {   0,1711 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  10,-3091 }, {   0,   0 }, {   0,   0 }, {  13,-3091 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  97,   0 }, {  98,   0 }, {  99,   0 }, { 100,   0 }, { 101,   0 },
 { 102,   0 }, {   0,   0 }, {  32,-3091 }, {  33,-3091 }, {   0,   0 },
 {  35,-3091 }, {  36,-3091 }, {  37,-3091 }, {  38,-3091 }, {  39,-3091 },
 {  40,-3091 }, {  41,-3091 }, {  42,-3091 }, {  43,-3091 }, {  44,-3091 },

 {  45,-3091 }, {  46,-3091 }, {  47,-3091 }, {  48,-3091 }, {  49,-3091 },
 {  50,-3091 }, {  51,-3091 }, {  52,-3091 }, {  53,-3091 }, {  54,-3091 },
 {  55,-3091 }, {  56,-3091 }, {  57,-3091 }, {  58,-3091 }, {  59,-3091 },
 {  60,-3091 }, {  61,-3091 }, {  62,-3091 }, {  63,-3091 }, {  64,-3091 },
 {  65,-3091 }, {  66,-3091 }, {  67,-3091 }, {  68,-3091 }, {  69,-3091 },
 {  70,-3091 }, {  71,-3091 }, {  72,-3091 }, {  73,-3091 }, {  74,-3091 },
 {  75,-3091 }, {  76,-3091 }, {  77,-3091 }, {  78,-3091 }, {  79,-3091 },
 {  80,-3091 }, {  81,-3091 }, {  82,-3091 }, {  83,-3091 }, {  84,-3091 },
 {  85,-3091 }, {  86,-3091 }, {  87,-3091 }, {  88,-3091 }, {  89,-3091 },
 {  90,-3091 }, {  91,-3091 }, {   0,   0 }, {  93,-3091 }, {  94,-3091 },

 {  95,-3091 }, {  96,-3091 }, {  97,-3091 }, {  98,-3091 }, {  99,-3091 },
 { 100,-3091 }, { 101,-3091 }, { 102,-3091 }, { 103,-3091 }, { 104,-3091 },
 { 105,-3091 }, { 106,-3091 }, { 107,-3091 }, { 108,-3091 }, { 109,-3091 },
 { 110,-3091 }, { 111,-3091 }, { 112,-3091 }, { 113,-3091 }, { 114,-3091 },
 { 115,-3091 }, { 116,-3091 }, { 117,-3091 }, { 118,-3091 }, { 119,-3091 },
 { 120,-3091 }, { 121,-3091 }, { 122,-3091 }, { 123,-3091 }, { 124,-3091 },
 { 125,-3091 }, { 126,-3091 }, {   0,   0 }, { 128,-1981 }, { 129,-1981 },
 { 130,-1981 }, { 131,-1981 }, { 132,-1981 }, { 133,-1981 }, { 134,-1981 },
 { 135,-1981 }, { 136,-1981 }, { 137,-1981 }, { 138,-1981 }, { 139,-1981 },
 { 140,-1981 }, { 141,-1981 }, { 142,-1981 }, { 143,-1981 }, { 144,-1981 },

 { 145,-1981 }, { 146,-1981 }, { 147,-1981 }, { 148,-1981 }, { 149,-1981 },
 { 150,-1981 }, { 151,-1981 }, { 152,-1981 }, { 153,-1981 }, { 154,-1981 },
 { 155,-1981 }, { 156,-1981 }, { 157,-1981 }, { 158,-1981 }, { 159,-1981 },
 { 160,-1981 }, { 161,-1981 }, { 162,-1981 }, { 163,-1981 }, { 164,-1981 },
 { 165,-1981 }, { 166,-1981 }, { 167,-1981 }, { 168,-1981 }, { 169,-1981 },
 { 170,-1981 }, { 171,-1981 }, { 172,-1981 }, { 173,-1981 }, { 174,-1981 },
 { 175,-1981 }, { 176,-1981 }, { 177,-1981 }, { 178,-1981 }, { 179,-1981 },
 { 180,-1981 }, { 181,-1981 }, { 182,-1981 }, { 183,-1981 }, { 184,-1981 },
 { 185,-1981 }, { 186,-1981 }, { 187,-1981 }, { 188,-1981 }, { 189,-1981 },
 { 190,-1981 }, { 191,-1981 }, { 192,-3091 }, { 193,-3091 }, { 194,-2834 },

 { 195,-2834 }, { 196,-2834 }, { 197,-2834 }, { 198,-2834 }, { 199,-2834 },
 { 200,-2834 }, { 201,-2834 }, { 202,-2834 }, { 203,-2834 }, { 204,-2834 },
 { 205,-2834 }, { 206,-2834 }, { 207,-2834 }, { 208,-2834 }, { 209,-2834 },
 { 210,-2834 }, { 211,-2834 }, { 212,-2834 }, { 213,-2834 }, { 214,-2834 },
 { 215,-2834 }, { 216,-2834 }, { 217,-2834 }, { 218,-2834 }, { 219,-2834 },
 { 220,-2834 }, { 221,-2834 }, { 222,-2834 }, { 223,-2834 }, { 224,-2577 },
 { 225,-2577 }, { 226,-2577 }, { 227,-2577 }, { 228,-2577 }, { 229,-2577 },
 { 230,-2577 }, { 231,-2577 }, { 232,-2577 }, { 233,-2577 }, { 234,-2577 },
 { 235,-2577 }, { 236,-2577 }, { 237,-2577 }, { 238,-2577 }, { 239,-2577 },
 { 240,-2320 }, { 241,-2320 }, { 242,-2320 }, { 243,-2320 }, { 244,-2320 },

 { 245,-3091 }, { 246,-3091 }, { 247,-3091 }, { 248,-3091 }, { 249,-3091 },
 { 250,-3091 }, { 251,-3091 }, { 252,-3091 }, { 253,-3091 }, { 254,-3091 },
 { 255,-3091 }, {   0,  19 }, {   0,1454 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-5774 }, {  49,-5774 }, {  50,-5774 }, {  51,-5774 }, {  52,-5774 },
 {  53,-5774 }, {  54,-5774 }, {  55,-5774 }, {  56,-5774 }, {  57,-5774 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-5682 }, {  66,-5682 }, {  67,-5682 },
 {  68,-5682 }, {  69,-5682 }, {  70,-5682 }, {  71,-5682 }, {  72,-5682 },
 {  73,-5682 }, {  74,-5682 }, {  75,-5682 }, {  76,-5682 }, {  77,-5682 },
 {  78,-5682 }, {  79,-5682 }, {  80,-5682 }, {  81,-5682 }, {  82,-5682 },
 {  83,-5682 }, {  84,-5682 }, {  85,-5682 }, {  86,-5682 }, {  87,-5682 },

 {  88,-5682 }, {  89,-5682 }, {  90,-5682 }, {   0,  15 }, {   0,1362 },
 {   0,   0 }, {   0,   0 }, {  95,-5682 }, {   0,   0 }, {  97,-5682 },
 {  98,-5682 }, {  99,-5682 }, { 100,-5682 }, { 101,-5682 }, { 102,-5682 },
 { 103,-5682 }, { 104,-5682 }, { 105,-5682 }, { 106,-5682 }, { 107,-5682 },
 { 108,-5682 }, { 109,-5682 }, { 110,-5682 }, { 111,-5682 }, { 112,-5682 },
 { 113,-5682 }, { 114,-5682 }, { 115,-5682 }, { 116,-5682 }, { 117,-5682 },
 { 118,-5682 }, { 119,-5682 }, { 120,-5682 }, { 121,-5682 }, { 122,-5682 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {  48,-5866 }, {  49,-5866 }, {  50,-5866 },
 {  51,-5866 }, {  52,-5866 }, {  53,-5866 }, {  54,-5866 }, {  55,-5866 },
 {  56,-5866 }, {  57,-5866 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-5774 },
 {  66,-5774 }, {  67,-5774 }, {  68,-5774 }, {  69,-5774 }, {  70,-5774 },
 {  71,-5774 }, {  72,-5774 }, {  73,-5774 }, {  74,-5774 }, {  75,-5774 },
 {  76,-5774 }, {  77,-5774 }, {  78,-5774 }, {  79,-5774 }, {  80,-5774 },
 {  81,-5774 }, {  82,-5774 }, {  83,-5774 }, {  84,-5774 }, {  85,-5774 },
 {  86,-5774 }, {  87,-5774 }, {  88,-5774 }, {  89,-5774 }, {  90,-5774 },
 {   0,  38 }, {   0,1270 }, {   0,   0 }, {   0,   0 }, {  95,-5774 },

 {   0,   0 }, {  97,-5774 }, {  98,-5774 }, {  99,-5774 }, { 100,-5774 },
 { 101,-5774 }, { 102,-5774 }, { 103,-5774 }, { 104,-5774 }, { 105,-5774 },
 { 106,-5774 }, { 107,-5774 }, { 108,-5774 }, { 109,-5774 }, { 110,-5774 },
 { 111,-5774 }, { 112,-5774 }, { 113,-5774 }, { 114,-5774 }, { 115,-5774 },
 { 116,-5774 }, { 117,-5774 }, { 118,-5774 }, { 119,-5774 }, { 120,-5774 },
 { 121,-5774 }, { 122,-5774 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-5958 },
 {  49,-5958 }, {  50,-5958 }, {  51,-5958 }, {  52,-5958 }, {  53,-5958 },

 {  54,-5958 }, {  55,-5958 }, {  56,-5958 }, {  57,-5958 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-5866 }, {  66,-5866 }, {  67,-5866 }, {  68,-5866 },
 {  69,-5866 }, {  70,-5866 }, {  71,-5866 }, {  72,-5866 }, {  73,-5866 },
 {  74,-5866 }, {  75,-5866 }, {  76,-5866 }, {  77,-5866 }, {  78,-5866 },
 {  79,-5866 }, {  80,-5866 }, {  81,-5866 }, {  82,-5866 }, {  83,-5866 },
 {  84,-5866 }, {  85,-5866 }, {  86,-5866 }, {  87,-5866 }, {  88,-5866 },
 {  89,-5866 }, {  90,-5866 }, {   0,  38 }, {   0,1178 }, {   0,   0 },
 {   0,   0 }, {  95,-5866 }, {   0,   0 }, {  97,-5866 }, {  98,-5866 },
 {  99,-5866 }, { 100,-5866 }, { 101,-5866 }, { 102,-5866 }, { 103,-5866 },

 { 104,-5866 }, { 105,-5866 }, { 106,-5866 }, { 107,-5866 }, { 108,-5866 },
 { 109,-5866 }, { 110, 368 }, { 111,-5866 }, { 112,-5866 }, { 113,-5866 },
 { 114, 460 }, { 115,-5866 }, { 116,-5866 }, { 117,-5866 }, { 118,-5866 },
 { 119,-5866 }, { 120,-5866 }, { 121,-5866 }, { 122,-5866 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-6050 }, {  49,-6050 }, {  50,-6050 }, {  51,-6050 },
 {  52,-6050 }, {  53,-6050 }, {  54,-6050 }, {  55,-6050 }, {  56,-6050 },
 {  57,-6050 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-5958 }, {  66,-5958 },
 {  67,-5958 }, {  68,-5958 }, {  69,-5958 }, {  70,-5958 }, {  71,-5958 },
 {  72,-5958 }, {  73,-5958 }, {  74,-5958 }, {  75,-5958 }, {  76,-5958 },
 {  77,-5958 }, {  78,-5958 }, {  79,-5958 }, {  80,-5958 }, {  81,-5958 },
 {  82,-5958 }, {  83,-5958 }, {  84,-5958 }, {  85,-5958 }, {  86,-5958 },
 {  87,-5958 }, {  88,-5958 }, {  89,-5958 }, {  90,-5958 }, {   0,  38 },
 {   0,1086 }, {   0,   0 }, {   0,   0 }, {  95,-5958 }, {   0,   0 },
 {  97,-5958 }, {  98,-5958 }, {  99,-5958 }, { 100,-5958 }, { 101,-5958 },
 { 102,-5958 }, { 103,-5958 }, { 104,-5958 }, { 105,-5958 }, { 106,-5958 },
 { 107,-5958 }, { 108,-5958 }, { 109,-5958 }, { 110,-5958 }, { 111,-5958 },

 { 112,-5958 }, { 113,-5958 }, { 114,-5958 }, { 115,-5958 }, { 116, 460 },
 { 117,-5958 }, { 118,-5958 }, { 119,-5958 }, { 120,-5958 }, { 121,-5958 },
 { 122,-5958 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6142 }, {  49,-6142 },
 {  50,-6142 }, {  51,-6142 }, {  52,-6142 }, {  53,-6142 }, {  54,-6142 },
 {  55,-6142 }, {  56,-6142 }, {  57,-6142 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-6050 }, {  66,-6050 }, {  67,-6050 }, {  68,-6050 }, {  69,-6050 },

 {  70,-6050 }, {  71,-6050 }, {  72,-6050 }, {  73,-6050 }, {  74,-6050 },
 {  75,-6050 }, {  76,-6050 }, {  77,-6050 }, {  78,-6050 }, {  79,-6050 },
 {  80,-6050 }, {  81,-6050 }, {  82,-6050 }, {  83,-6050 }, {  84,-6050 },
 {  85,-6050 }, {  86,-6050 }, {  87,-6050 }, {  88,-6050 }, {  89,-6050 },
 {  90,-6050 }, {   0,  16 }, {   0, 994 }, {   0,   0 }, {   0,   0 },
 {  95,-6050 }, {   0,   0 }, {  97,-6050 }, {  98,-6050 }, {  99,-6050 },
 { 100,-6050 }, { 101,-6050 }, { 102,-6050 }, { 103,-6050 }, { 104,-6050 },
 { 105,-6050 }, { 106,-6050 }, { 107,-6050 }, { 108,-6050 }, { 109,-6050 },
 { 110, 460 }, { 111,-6050 }, { 112,-6050 }, { 113,-6050 }, { 114,-6050 },
 { 115,-6050 }, { 116,-6050 }, { 117,-6050 }, { 118,-6050 }, { 119,-6050 },

 { 120,-6050 }, { 121,-6050 }, { 122,-6050 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-6234 }, {  49,-6234 }, {  50,-6234 }, {  51,-6234 }, {  52,-6234 },
 {  53,-6234 }, {  54,-6234 }, {  55,-6234 }, {  56,-6234 }, {  57,-6234 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-6142 }, {  66,-6142 }, {  67,-6142 },
 {  68,-6142 }, {  69,-6142 }, {  70,-6142 }, {  71,-6142 }, {  72,-6142 },
 {  73,-6142 }, {  74,-6142 }, {  75,-6142 }, {  76,-6142 }, {  77,-6142 },

 {  78,-6142 }, {  79,-6142 }, {  80,-6142 }, {  81,-6142 }, {  82,-6142 },
 {  83,-6142 }, {  84,-6142 }, {  85,-6142 }, {  86,-6142 }, {  87,-6142 },
 {  88,-6142 }, {  89,-6142 }, {  90,-6142 }, {   0,  38 }, {   0, 902 },
 {   0,   0 }, {   0,   0 }, {  95,-6142 }, {   0,   0 }, {  97,-6142 },
 {  98,-6142 }, {  99,-6142 }, { 100,-6142 }, { 101,-6142 }, { 102,-6142 },
 { 103,-6142 }, { 104,-6142 }, { 105,-6142 }, { 106,-6142 }, { 107,-6142 },
 { 108,-6142 }, { 109,-6142 }, { 110,-6142 }, { 111,-6142 }, { 112,-6142 },
 { 113,-6142 }, { 114,-6142 }, { 115,-6142 }, { 116,-6142 }, { 117,-6142 },
 { 118,-6142 }, { 119,-6142 }, { 120,-6142 }, { 121,-6142 }, { 122,-6142 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-6326 }, {  49,-6326 }, {  50,-6326 },
 {  51,-6326 }, {  52,-6326 }, {  53,-6326 }, {  54,-6326 }, {  55,-6326 },
 {  56,-6326 }, {  57,-6326 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6234 },
 {  66,-6234 }, {  67,-6234 }, {  68,-6234 }, {  69,-6234 }, {  70,-6234 },
 {  71,-6234 }, {  72,-6234 }, {  73,-6234 }, {  74,-6234 }, {  75,-6234 },
 {  76,-6234 }, {  77,-6234 }, {  78,-6234 }, {  79,-6234 }, {  80,-6234 },
 {  81,-6234 }, {  82,-6234 }, {  83,-6234 }, {  84,-6234 }, {  85,-6234 },

 {  86,-6234 }, {  87,-6234 }, {  88,-6234 }, {  89,-6234 }, {  90,-6234 },
 {   0,  38 }, {   0, 810 }, {   0,   0 }, {   0,   0 }, {  95,-6234 },
 {   0,   0 }, {  97,-6234 }, {  98,-6234 }, {  99,-6234 }, { 100, 368 },
 { 101,-6234 }, { 102,-6234 }, { 103,-6234 }, { 104,-6234 }, { 105,-6234 },
 { 106,-6234 }, { 107,-6234 }, { 108,-6234 }, { 109,-6234 }, { 110,-6234 },
 { 111,-6234 }, { 112,-6234 }, { 113,-6234 }, { 114,-6234 }, { 115,-6234 },
 { 116,-6234 }, { 117,-6234 }, { 118,-6234 }, { 119,-6234 }, { 120,-6234 },
 { 121,-6234 }, { 122,-6234 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6418 },
 {  49,-6418 }, {  50,-6418 }, {  51,-6418 }, {  52,-6418 }, {  53,-6418 },
 {  54,-6418 }, {  55,-6418 }, {  56,-6418 }, {  57,-6418 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-6326 }, {  66,-6326 }, {  67,-6326 }, {  68,-6326 },
 {  69,-6326 }, {  70,-6326 }, {  71,-6326 }, {  72,-6326 }, {  73,-6326 },
 {  74,-6326 }, {  75,-6326 }, {  76,-6326 }, {  77,-6326 }, {  78,-6326 },
 {  79,-6326 }, {  80,-6326 }, {  81,-6326 }, {  82,-6326 }, {  83,-6326 },
 {  84,-6326 }, {  85,-6326 }, {  86,-6326 }, {  87,-6326 }, {  88,-6326 },
 {  89,-6326 }, {  90,-6326 }, {   0,  21 }, {   0, 718 }, {   0,   0 },

 {   0,   0 }, {  95,-6326 }, {   0,   0 }, {  97,-6326 }, {  98,-6326 },
 {  99,-6326 }, { 100,-6326 }, { 101,-6326 }, { 102,-6326 }, { 103,-6326 },
 { 104,-6326 }, { 105,-6326 }, { 106,-6326 }, { 107,-6326 }, { 108,-6326 },
 { 109,-6326 }, { 110, 368 }, { 111,-6326 }, { 112,-6326 }, { 113,-6326 },
 { 114,-6326 }, { 115,-6326 }, { 116,-6326 }, { 117,-6326 }, { 118,-6326 },
 { 119,-6326 }, { 120,-6326 }, { 121,-6326 }, { 122,-6326 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-6510 }, {  49,-6510 }, {  50,-6510 }, {  51,-6510 },

 {  52,-6510 }, {  53,-6510 }, {  54,-6510 }, {  55,-6510 }, {  56,-6510 },
 {  57,-6510 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6418 }, {  66,-6418 },
 {  67,-6418 }, {  68,-6418 }, {  69,-6418 }, {  70,-6418 }, {  71,-6418 },
 {  72,-6418 }, {  73,-6418 }, {  74,-6418 }, {  75,-6418 }, {  76,-6418 },
 {  77,-6418 }, {  78,-6418 }, {  79,-6418 }, {  80,-6418 }, {  81,-6418 },
 {  82,-6418 }, {  83,-6418 }, {  84,-6418 }, {  85,-6418 }, {  86,-6418 },
 {  87,-6418 }, {  88,-6418 }, {  89,-6418 }, {  90,-6418 }, {   0,  38 },
 {   0, 626 }, {   0,   0 }, {   0,   0 }, {  95,-6418 }, {   0,   0 },
 {  97,-6418 }, {  98,-6418 }, {  99,-6418 }, { 100,-6418 }, { 101,-6418 },

 { 102,-6418 }, { 103,-6418 }, { 104,-6418 }, { 105,-6418 }, { 106,-6418 },
 { 107,-6418 }, { 108,-6418 }, { 109,-6418 }, { 110,-6418 }, { 111,-6418 },
 { 112,-6418 }, { 113,-6418 }, { 114,-6418 }, { 115,-6418 }, { 116,-6418 },
 { 117,-6418 }, { 118,-6418 }, { 119,-6418 }, { 120,-6418 }, { 121,-6418 },
 { 122,-6418 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6602 }, {  49,-6602 },
 {  50,-6602 }, {  51,-6602 }, {  52,-6602 }, {  53,-6602 }, {  54,-6602 },
 {  55,-6602 }, {  56,-6602 }, {  57,-6602 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  65,-6510 }, {  66,-6510 }, {  67,-6510 }, {  68,-6510 }, {  69,-6510 },
 {  70,-6510 }, {  71,-6510 }, {  72,-6510 }, {  73,-6510 }, {  74,-6510 },
 {  75,-6510 }, {  76,-6510 }, {  77,-6510 }, {  78,-6510 }, {  79,-6510 },
 {  80,-6510 }, {  81,-6510 }, {  82,-6510 }, {  83,-6510 }, {  84,-6510 },
 {  85,-6510 }, {  86,-6510 }, {  87,-6510 }, {  88,-6510 }, {  89,-6510 },
 {  90,-6510 }, {   0,  38 }, {   0, 534 }, {   0,   0 }, {   0,   0 },
 {  95,-6510 }, {   0,   0 }, {  97,-6510 }, {  98,-6510 }, {  99,-6510 },
 { 100,-6510 }, { 101,-6510 }, { 102,-6510 }, { 103, 276 }, { 104,-6510 },
 { 105,-6510 }, { 106,-6510 }, { 107,-6510 }, { 108,-6510 }, { 109,-6510 },

 { 110,-6510 }, { 111,-6510 }, { 112,-6510 }, { 113,-6510 }, { 114,-6510 },
 { 115,-6510 }, { 116,-6510 }, { 117,-6510 }, { 118,-6510 }, { 119,-6510 },
 { 120,-6510 }, { 121,-6510 }, { 122,-6510 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {  48,-6694 }, {  49,-6694 }, {  50,-6694 }, {  51,-6694 }, {  52,-6694 },
 {  53,-6694 }, {  54,-6694 }, {  55,-6694 }, {  56,-6694 }, {  57,-6694 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  65,-6602 }, {  66,-6602 }, {  67,-6602 },

 {  68,-6602 }, {  69,-6602 }, {  70,-6602 }, {  71,-6602 }, {  72,-6602 },
 {  73,-6602 }, {  74,-6602 }, {  75,-6602 }, {  76,-6602 }, {  77,-6602 },
 {  78,-6602 }, {  79,-6602 }, {  80,-6602 }, {  81,-6602 }, {  82,-6602 },
 {  83,-6602 }, {  84,-6602 }, {  85,-6602 }, {  86,-6602 }, {  87,-6602 },
 {  88,-6602 }, {  89,-6602 }, {  90,-6602 }, {   0,  18 }, {   0, 442 },
 {   0,   0 }, {   0,   0 }, {  95,-6602 }, {   0,   0 }, {  97,-6602 },
 {  98,-6602 }, {  99,-6602 }, { 100,-6602 }, { 101,-6602 }, { 102,-6602 },
 { 103,-6602 }, { 104,-6602 }, { 105,-6602 }, { 106,-6602 }, { 107,-6602 },
 { 108,-6602 }, { 109,-6602 }, { 110,-6602 }, { 111,-6602 }, { 112,-6602 },
 { 113,-6602 }, { 114,-6602 }, { 115, 276 }, { 116,-6602 }, { 117,-6602 },

 { 118,-6602 }, { 119,-6602 }, { 120,-6602 }, { 121,-6602 }, { 122,-6602 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {  48,-6786 }, {  49,-6786 }, {  50,-6786 },
 {  51,-6786 }, {  52,-6786 }, {  53,-6786 }, {  54,-6786 }, {  55,-6786 },
 {  56,-6786 }, {  57,-6786 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6694 },
 {  66,-6694 }, {  67,-6694 }, {  68,-6694 }, {  69,-6694 }, {  70,-6694 },
 {  71,-6694 }, {  72,-6694 }, {  73,-6694 }, {  74,-6694 }, {  75,-6694 },

 {  76,-6694 }, {  77,-6694 }, {  78,-6694 }, {  79,-6694 }, {  80,-6694 },
 {  81,-6694 }, {  82,-6694 }, {  83,-6694 }, {  84,-6694 }, {  85,-6694 },
 {  86,-6694 }, {  87,-6694 }, {  88,-6694 }, {  89,-6694 }, {  90,-6694 },
 {   0,  22 }, {   0, 350 }, {   0,   0 }, {   0,   0 }, {  95,-6694 },
 {   0,   0 }, {  97,-6694 }, {  98,-6694 }, {  99,-6694 }, { 100,-6694 },
 { 101,-6694 }, { 102,-6694 }, { 103,-6694 }, { 104,-6694 }, { 105,-6694 },
 { 106,-6694 }, { 107,-6694 }, { 108,-6694 }, { 109,-6694 }, { 110,-6694 },
 { 111,-6694 }, { 112,-6694 }, { 113,-6694 }, { 114,-6694 }, { 115,-6694 },
 { 116,-6694 }, { 117,-6694 }, { 118,-6694 }, { 119,-6694 }, { 120,-6694 },
 { 121,-6694 }, { 122,-6694 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {  48,-6878 },
 {  49,-6878 }, {  50,-6878 }, {  51,-6878 }, {  52,-6878 }, {  53,-6878 },
 {  54,-6878 }, {  55,-6878 }, {  56,-6878 }, {  57,-6878 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  65,-6786 }, {  66,-6786 }, {  67,-6786 }, {  68,-6786 },
 {  69,-6786 }, {  70,-6786 }, {  71,-6786 }, {  72,-6786 }, {  73,-6786 },
 {  74,-6786 }, {  75,-6786 }, {  76,-6786 }, {  77,-6786 }, {  78,-6786 },
 {  79,-6786 }, {  80,-6786 }, {  81,-6786 }, {  82,-6786 }, {  83,-6786 },

 {  84,-6786 }, {  85,-6786 }, {  86,-6786 }, {  87,-6786 }, {  88,-6786 },
 {  89,-6786 }, {  90,-6786 }, {   0,  17 }, {   0, 258 }, {   0,   0 },
 {   0,   0 }, {  95,-6786 }, {   0,   0 }, {  97,-6786 }, {  98,-6786 },
 {  99,-6786 }, { 100,-6786 }, { 101,-6786 }, { 102,-6786 }, { 103,-6786 },
 { 104,-6786 }, { 105,-6786 }, { 106,-6786 }, { 107,-6786 }, { 108,-6786 },
 { 109,-6786 }, { 110,-6786 }, { 111,-6786 }, { 112,-6786 }, { 113,-6786 },
 { 114,-6786 }, { 115,-6786 }, { 116,-6786 }, { 117,-6786 }, { 118,-6786 },
 { 119,-6786 }, { 120,-6786 }, { 121,-6786 }, { 122,-6786 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {  48,-6970 }, {  49,-6970 }, {  50,-6970 }, {  51,-6970 },
 {  52,-6970 }, {  53,-6970 }, {  54,-6970 }, {  55,-6970 }, {  56,-6970 },
 {  57,-6970 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  65,-6878 }, {  66,-6878 },
 {  67,-6878 }, {  68,-6878 }, {  69,-6878 }, {  70,-6878 }, {  71,-6878 },
 {  72,-6878 }, {  73,-6878 }, {  74,-6878 }, {  75,-6878 }, {  76,-6878 },
 {  77,-6878 }, {  78,-6878 }, {  79,-6878 }, {  80,-6878 }, {  81,-6878 },
 {  82,-6878 }, {  83,-6878 }, {  84,-6878 }, {  85,-6878 }, {  86,-6878 },
 {  87,-6878 }, {  88,-6878 }, {  89,-6878 }, {  90,-6878 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {  95,-6878 }, {   0,   0 },
 {  97,-6878 }, {  98,-6878 }, {  99,-6878 }, { 100,-6878 }, { 101,-6878 },
 { 102,-6878 }, { 103,-6878 }, { 104,-6878 }, { 105,-6878 }, { 106,-6878 },
 { 107,-6878 }, { 108,-6878 }, { 109,-6878 }, { 110,-6878 }, { 111,-6878 },
 { 112,-6878 }, { 113,-6878 }, { 114,-6878 }, { 115,-6878 }, { 116,-6878 },
 { 117,-6878 }, { 118,-6878 }, { 119,-6878 }, { 120,-6878 }, { 121,-6878 },
 { 122,-6878 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },

 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 }, {   0,   0 },
 { 257,  42 }, {   1,   0 },    };

static const struct yy_trans_info *yy_start_state_list[11] =
    {
    &yy_transition[1],
    &yy_transition[3],
    &yy_transition[261],
    &yy_transition[519],
    &yy_transition[777],
    &yy_transition[1035],
    &yy_transition[1293],
    &yy_transition[1551],
    &yy_transition[1809],
    &yy_transition[2067],
    &yy_transition[2325],

    } ;

/* Table of booleans, true if rule could match eol. */
static const flex_int32_t yy_rule_can_match_eol[42] =
    {   0,
1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0,     };

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "beng.l"
/*=============================================================================
    Beng(c) by Alexander A Pototskiy
==============================================================================*/
/* suppresses inclusion of the non-ANSI header file unistd.h */
#define YY_NO_UNISTD_H 1
/* %option debug */
/* fast scanner table representation */
/* multithreaded, appends the scanner param to yy functions */
/* input not interactive */
/* use flex built-in support for line numbers */
/* adds an argument yylval to yylex() */
/* adds an argument yylloc to yylex() */
/* do not use yywrap() */
/* adds prefix to scanner functions */
/* to avoid C4005 warning */

#line 50 "beng.l"

#include "parser.hpp"

using namespace sonia;
using namespace sonia::lang;
using namespace sonia::lang::beng;

#include "beng.tab.hpp"
#define YY_DECL int beng_langlex(YYSTYPE * yylval_param, YYLTYPE * yylloc_param, parser_context & ctx, void* yyscanner)
using YYSTYPE = beng_lang::parser::semantic_type;
using YYLTYPE = beng_lang::parser::location_type;

#define ECHO do { \
	ctx.append_error(("%1%:%2%.%3%-%4%.%5%: error: %6%"_fmt \
		% ctx.get_resource() \
		% yylloc->begin.line % yylloc->begin.column % yylloc->end.line % yylloc->end.column % string_view{ yytext, (size_t) yyleng }).str()); } while (0)


// beng_lang::parser::error(*yylloc, string_view{ yytext, (size_t) yyleng });  while (0)

//sonia::lang::lex::undefined_lexem(yytext, (size_t) yyleng ); } while (0)

#define YY_USER_ACTION update_location(*yylloc, yytext);

#ifdef BOOST_WINDOWS
#	include <io.h>	// read();
#	define read _read
#	define fileno _fileno
#endif

#define text_view string_view{yytext, (size_t)yyleng}
#define location lex::resource_location{yylloc->begin.line, yylloc->begin.column, ctx.get_resource()}
#define variant_emplace(...) \
	try { \
		auto value = (__VA_ARGS__); \
		yylval->template emplace<decltype(value)>(std::move(value)); \
	} catch (std::exception const& ex) { \
		ctx.append_error(("%1%(%2%,%3%-%4%,%5%): error: %6%"_fmt \
			% ctx.get_resource() \
			% yylloc->begin.line % yylloc->begin.column % yylloc->end.line % yylloc->end.column % ex.what()).str()); \
	}

#line 3803 "beng.yy.cpp"
/*
NEW						"new"
FOR						"for"
VOID					"void"
AUTO                    "auto"
CONST_                  "const"
USING                   "using"
THROW                   "throw"
DELETE_                 "delete"
SIZEOF                  "sizeof"
RETURN                  "return"

PRIVATE                 "private"
TEMPLATE                "template"
NAMESPACE               "namespace"
*/
/* exclude '->', '=', '<', '//', '/*'  */
/*

ARROWAST                "->*"
LSHIFTSSIGN             "<<="
RSHIFTSSIGN             ">>="

FARROW					"~>"
PTAST                   ".*"

DBLPLUS                 "++"
DBLMINUS                "--"
LEFTSHIFT               "<<"
RIGHTSHIFT              ">>"
LE                      "<="
GE                      ">="
EQ                      "=="
NE                      "!="

AND                     "&&"
ADDASSIGN               "+="
SUBASSIGN               "-="
MULASSIGN               "*="
DIVASSIGN               "/="
MODASSIGN               "%="
BITANDASSIGN            "&="
BITORASSIGN             "|="
BITXORASSIGN            "^="

PLUS                    "+"
MINUS                   "-"
ASTERISK                "*"
SLASH                   "/"
PERCENT                 "%"
AMPERSAND               "&"
BITOR                   "|"
EXCLPT                  "!"
TILDA                   "~"
EXCL                    "^"
OPEN_BROKET             "<"
CLOSE_BROKET            ">"

DOLLAR                  "$"
QMARK                   "?"
HASHTAG					"#"
*/

#line 3867 "beng.yy.cpp"

#define INITIAL 0
#define COMMENT 1
#define LINE_COMMENT 2
#define STR 3
#define USER_LITERAL 4

#define YY_EXTRA_TYPE sonia::lang::lex::scanner_data*

/* Holds the entire state of the reentrant scanner. */
struct yyguts_t
    {

    /* User-defined. Not touched by flex. */
    YY_EXTRA_TYPE yyextra_r;

    /* The rest are the same as the globals declared in the non-reentrant scanner. */
    FILE *yyin_r, *yyout_r;
    size_t yy_buffer_stack_top; /**< index of top of stack. */
    size_t yy_buffer_stack_max; /**< capacity of stack. */
    YY_BUFFER_STATE * yy_buffer_stack; /**< Stack as an array. */
    char yy_hold_char;
    int yy_n_chars;
    int yyleng_r;
    char *yy_c_buf_p;
    int yy_init;
    int yy_start;
    int yy_did_buffer_switch_on_eof;
    int yy_start_stack_ptr;
    int yy_start_stack_depth;
    int *yy_start_stack;
    yy_state_type yy_last_accepting_state;
    char* yy_last_accepting_cpos;

    int yylineno_r;
    int yy_flex_debug_r;

    char *yytext_r;
    int yy_more_flag;
    int yy_more_len;

    YYSTYPE * yylval_r;

    YYLTYPE * yylloc_r;

    }; /* end struct yyguts_t */

static int yy_init_globals ( yyscan_t yyscanner );

    /* This must go here because YYSTYPE and YYLTYPE are included
     * from bison output in section 1.*/
    #    define yylval yyg->yylval_r
    
    #    define yylloc yyg->yylloc_r
    
int yylex_init (yyscan_t* scanner);

int yylex_init_extra ( YY_EXTRA_TYPE user_defined, yyscan_t* scanner);

/* Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience. */

int yylex_destroy ( yyscan_t yyscanner );

int yyget_debug ( yyscan_t yyscanner );

void yyset_debug ( int debug_flag , yyscan_t yyscanner );

YY_EXTRA_TYPE yyget_extra ( yyscan_t yyscanner );

void yyset_extra ( YY_EXTRA_TYPE user_defined , yyscan_t yyscanner );

FILE *yyget_in ( yyscan_t yyscanner );

void yyset_in  ( FILE * _in_str , yyscan_t yyscanner );

FILE *yyget_out ( yyscan_t yyscanner );

void yyset_out  ( FILE * _out_str , yyscan_t yyscanner );

			int yyget_leng ( yyscan_t yyscanner );

char *yyget_text ( yyscan_t yyscanner );

int yyget_lineno ( yyscan_t yyscanner );

void yyset_lineno ( int _line_number , yyscan_t yyscanner );

int yyget_column  ( yyscan_t yyscanner );

void yyset_column ( int _column_no , yyscan_t yyscanner );

YYSTYPE * yyget_lval ( yyscan_t yyscanner );

void yyset_lval ( YYSTYPE * yylval_param , yyscan_t yyscanner );

       YYLTYPE *yyget_lloc ( yyscan_t yyscanner );
    
        void yyset_lloc ( YYLTYPE * yylloc_param , yyscan_t yyscanner );
    
/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap ( yyscan_t yyscanner );
#else
extern int yywrap ( yyscan_t yyscanner );
#endif
#endif

#ifndef YY_NO_UNPUT
    
    static void yyunput ( int c, char *buf_ptr  , yyscan_t yyscanner);
    
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int , yyscan_t yyscanner);
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * , yyscan_t yyscanner);
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput ( yyscan_t yyscanner );
#else
static int input ( yyscan_t yyscanner );
#endif

#endif

    static void yy_push_state ( int _new_state , yyscan_t yyscanner);
    
    static void yy_pop_state ( yyscan_t yyscanner );
    
    static int yy_top_state ( yyscan_t yyscanner );
    
/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO do { if (fwrite( yytext, (size_t) yyleng, 1, yyout )) {} } while (0)
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	errno=0; \
	while ( (result = (int) read( fileno(yyin), buf, (yy_size_t) max_size )) < 0 ) \
	{ \
		if( errno != EINTR) \
		{ \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
			break; \
		} \
		errno=0; \
		clearerr(yyin); \
	}\
\

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg , yyscanner)
#endif

/* end tables serialization structures and prototypes */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1

extern int yylex \
               (YYSTYPE * yylval_param, YYLTYPE * yylloc_param , yyscan_t yyscanner);

#define YY_DECL int yylex \
               (YYSTYPE * yylval_param, YYLTYPE * yylloc_param , yyscan_t yyscanner)
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yylval = yylval_param;

    yylloc = yylloc_param;

	if ( !yyg->yy_init )
		{
		yyg->yy_init = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yyg->yy_start )
			yyg->yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack (yyscanner);
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner);
		}

		yy_load_buffer_state( yyscanner );
		}

	{
#line 218 "beng.l"


#line 4138 "beng.yy.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yyg->yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yyg->yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start_state_list[yyg->yy_start];
yy_match:
		{
		const struct yy_trans_info *yy_trans_info;

		YY_CHAR yy_c;

		for ( yy_c = YY_SC_TO_UI(*yy_cp);
		      (yy_trans_info = &yy_current_state[yy_c])->
		yy_verify == yy_c;
		      yy_c = YY_SC_TO_UI(*++yy_cp) )
			{
			yy_current_state += yy_trans_info->yy_nxt;

			if ( yy_current_state[-1].yy_nxt )
				{
				yyg->yy_last_accepting_state = yy_current_state;
				yyg->yy_last_accepting_cpos = yy_cp;
				}
			}
		}

yy_find_action:
		yy_act = yy_current_state[-1].yy_nxt;

		YY_DO_BEFORE_ACTION;

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = 0; yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					
    do{ yylineno++;
        yycolumn=0;
    }while(0)
;
			}

do_action:	/* This label is used only to access EOF actions. */

		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yyg->yy_hold_char;
			yy_cp = yyg->yy_last_accepting_cpos + 1;
			yy_current_state = yyg->yy_last_accepting_state;
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 220 "beng.l"
/* ignore whitespaces */
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 222 "beng.l"
{
	yy_push_state(COMMENT, yyscanner);
	yyextra->loc_stack.emplace_back(yylloc->begin.line, yylloc->begin.column);
}
	YY_BREAK

case 3:
/* rule 3 can match eol */
YY_RULE_SETUP
#line 227 "beng.l"

	YY_BREAK
case 4:
YY_RULE_SETUP
#line 228 "beng.l"
{
		yy_pop_state(yyscanner);
		yyextra->loc_stack.pop_back();
	}
	YY_BREAK

case 5:
YY_RULE_SETUP
#line 234 "beng.l"
{ yy_push_state(LINE_COMMENT, yyscanner); }
	YY_BREAK
case 6:
/* rule 6 can match eol */
YY_RULE_SETUP
#line 235 "beng.l"
{ yy_pop_state(yyscanner); }
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 237 "beng.l"
{ yyextra->str_buff_begin = yytext + 1; yy_push_state(STR, yyscanner); }
	YY_BREAK

case 8:
/* rule 8 can match eol */
YY_RULE_SETUP
#line 239 "beng.l"

	YY_BREAK
case 9:
YY_RULE_SETUP
#line 240 "beng.l"

	YY_BREAK
case 10:
YY_RULE_SETUP
#line 241 "beng.l"

	YY_BREAK
case 11:
YY_RULE_SETUP
#line 242 "beng.l"
{
		variant_emplace(string_view{yyextra->str_buff_begin, yytext});
		yy_pop_state(yyscanner);
		return (beng_lang::parser::token::STRING);
	}
	YY_BREAK


case 12:
YY_RULE_SETUP
#line 250 "beng.l"
{ return (beng_lang::parser::token::FN); }
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 251 "beng.l"
{ return (beng_lang::parser::token::LET); }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 252 "beng.l"
{ return (beng_lang::parser::token::VAR); }
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 253 "beng.l"
{ return (beng_lang::parser::token::ENUM); }
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 254 "beng.l"
{ return (beng_lang::parser::token::TYPE); }
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 255 "beng.l"
{ return (beng_lang::parser::token::EXTENDS); }
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 256 "beng.l"
{ return (beng_lang::parser::token::EXTERN); }
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 258 "beng.l"
{ return (beng_lang::parser::token::BOOL); }
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 259 "beng.l"
{ return (beng_lang::parser::token::INT); }
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 260 "beng.l"
{ return (beng_lang::parser::token::FLOAT); }
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 261 "beng.l"
{ return (beng_lang::parser::token::STRING_WORD); }
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 263 "beng.l"
{ return (beng_lang::parser::token::OPEN_BRACE); }
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 264 "beng.l"
{ return (beng_lang::parser::token::CLOSE_BRACE); }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 265 "beng.l"
{ return (beng_lang::parser::token::OPEN_PARENTHESIS); }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 266 "beng.l"
{ return (beng_lang::parser::token::CLOSE_PARENTHESIS);	}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 267 "beng.l"
{ return (beng_lang::parser::token::END_STATEMENT); }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 268 "beng.l"
{ return (beng_lang::parser::token::COMMA);	}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 269 "beng.l"
{ return (beng_lang::parser::token::COLON); }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 270 "beng.l"
{ return (beng_lang::parser::token::OPEN_SQUARE_BRACKET); }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 271 "beng.l"
{ return (beng_lang::parser::token::CLOSE_SQUARE_BRACKET); }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 272 "beng.l"
{ return (beng_lang::parser::token::ASSIGN); }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 273 "beng.l"
{ return (beng_lang::parser::token::POINT);	}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 274 "beng.l"
{ return (beng_lang::parser::token::UNDERSCORE); }
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 275 "beng.l"
{ return (beng_lang::parser::token::DBLCOLON); }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 276 "beng.l"
{ return (beng_lang::parser::token::LOGIC_OR); }
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 277 "beng.l"
{ return (beng_lang::parser::token::ARROW); }
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 279 "beng.l"
{
		variant_emplace(annotated_string_view{text_view, location});
		return (beng_lang::parser::token::IDENTIFIER);
	}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 283 "beng.l"
{
		variant_emplace(ctx.make_int(text_view));
		return (beng_lang::parser::token::INTEGER);
	}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 287 "beng.l"
{
		variant_emplace(ctx.make_numeric(text_view));
		return (beng_lang::parser::token::DECIMAL);
	}
	YY_BREAK
/*
	{FOR} { return (beng_lang::parser::token::FOR); }
	{VOID} { return (beng_lang::parser::token::VOID_); }
	{AUTO} { return (beng_lang::parser::token::AUTO); }
	{CONST_} { return (beng_lang::parser::token::CONST_); }
	{DELETE_} { return (beng_lang::parser::token::DELETE_); }
	{USING} { return (beng_lang::parser::token::USING); }
	{SIZEOF} { return (beng_lang::parser::token::SIZEOF); }
    {RETURN} { return (beng_lang::parser::token::RETURN); }
	
	{PRIVATE} { return (beng_lang::parser::token::PRIVATE); }
	{TEMPLATE} { return (beng_lang::parser::token::TEMPLATE); }
	{NAMESPACE} { return (beng_lang::parser::token::NAMESPACE); }


	
	{OPERATOR_TERM0}|{OPERATOR_TERM1}|{OPERATOR_TERM2}|{OPERATOR_TERM3} {
		variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
		return (beng_lang::parser::token::OPERATOR_TERM);
	}

	
	
    
	
    
	



	{OPEN_BROKET}			{ return (beng_lang::parser::token::OPEN_BROKET); }
	{CLOSE_BROKET}			{ return (beng_lang::parser::token::CLOSE_BROKET); }
	
	
	
	{QMARK}                 { return (beng_lang::parser::token::QMARK); }
	{HASHTAG}               { return (beng_lang::parser::token::HASHTAG); }
	*/

case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(COMMENT):
case YY_STATE_EOF(LINE_COMMENT):
case YY_STATE_EOF(STR):
case YY_STATE_EOF(USER_LITERAL):
#line 331 "beng.l"
return (beng_lang::parser::token::END);
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 333 "beng.l"
ECHO;
	YY_BREAK
#line 4482 "beng.yy.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yyg->yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yyg->yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yyg->yy_c_buf_p <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yyg->yy_c_buf_p = yyg->yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state( yyscanner );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state , yyscanner);

			yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yyg->yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yyg->yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer( yyscanner ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yyg->yy_did_buffer_switch_on_eof = 0;

				if ( yywrap( yyscanner ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yyg->yy_c_buf_p = yyg->yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yyg->yy_c_buf_p =
					yyg->yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yyg->yy_c_buf_p =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars];

				yy_current_state = yy_get_previous_state( yyscanner );

				yy_cp = yyg->yy_c_buf_p;
				yy_bp = yyg->yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
static int yy_get_next_buffer (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = yyg->yytext_ptr;
	int number_to_move, i;
	int ret_val;

	if ( yyg->yy_c_buf_p > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yyg->yy_c_buf_p - yyg->yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) (yyg->yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2) , yyscanner );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yyg->yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			yyg->yy_n_chars, num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	if ( yyg->yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  , yyscanner);
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yyg->yy_n_chars + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = yyg->yy_n_chars + number_to_move + (yyg->yy_n_chars >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size , yyscanner );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	yyg->yy_n_chars += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yyg->yytext_ptr = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

    static yy_state_type yy_get_previous_state (yyscan_t yyscanner)
{
	yy_state_type yy_current_state;
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_current_state = yy_start_state_list[yyg->yy_start];

	for ( yy_cp = yyg->yytext_ptr + YY_MORE_ADJ; yy_cp < yyg->yy_c_buf_p; ++yy_cp )
		{
		yy_current_state += yy_current_state[(*yy_cp ? YY_SC_TO_UI(*yy_cp) : 256)].yy_nxt;
		if ( yy_current_state[-1].yy_nxt )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state , yyscan_t yyscanner)
{
	int yy_is_jam;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner; /* This var may be unused depending upon options. */
	char *yy_cp = yyg->yy_c_buf_p;

	int yy_c = 256;
	const struct yy_trans_info *yy_trans_info;

	yy_trans_info = &yy_current_state[(unsigned int) yy_c];
	yy_current_state += yy_trans_info->yy_nxt;
	yy_is_jam = (yy_trans_info->yy_verify != yy_c);

	if ( ! yy_is_jam )
		{
		if ( yy_current_state[-1].yy_nxt )
			{
			yyg->yy_last_accepting_state = yy_current_state;
			yyg->yy_last_accepting_cpos = yy_cp;
			}
		}

	(void)yyg;
	return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT

    static void yyunput (int c, char * yy_bp , yyscan_t yyscanner)
{
	char *yy_cp;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    yy_cp = yyg->yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yyg->yy_hold_char;

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = yyg->yy_n_chars + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			yyg->yy_n_chars = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

    if ( c == '\n' ){
        --yylineno;
    }

	yyg->yytext_ptr = yy_bp;
	yyg->yy_hold_char = *yy_cp;
	yyg->yy_c_buf_p = yy_cp;
}

#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
    static int yyinput (yyscan_t yyscanner)
#else
    static int input  (yyscan_t yyscanner)
#endif

{
	int c;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	*yyg->yy_c_buf_p = yyg->yy_hold_char;

	if ( *yyg->yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yyg->yy_c_buf_p < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[yyg->yy_n_chars] )
			/* This was really a NUL. */
			*yyg->yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = (int) (yyg->yy_c_buf_p - yyg->yytext_ptr);
			++yyg->yy_c_buf_p;

			switch ( yy_get_next_buffer( yyscanner ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin , yyscanner);

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap( yyscanner ) )
						return 0;

					if ( ! yyg->yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput(yyscanner);
#else
					return input(yyscanner);
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yyg->yy_c_buf_p = yyg->yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yyg->yy_c_buf_p;	/* cast for 8-bit char's */
	*yyg->yy_c_buf_p = '\0';	/* preserve yytext */
	yyg->yy_hold_char = *++yyg->yy_c_buf_p;

	if ( c == '\n' )
		
    do{ yylineno++;
        yycolumn=0;
    }while(0)
;

	return c;
}
#endif	/* ifndef YY_NO_INPUT */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * @param yyscanner The scanner object.
 * @note This function does not reset the start condition to @c INITIAL .
 */
    void yyrestart  (FILE * input_file , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack (yyscanner);
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE , yyscanner);
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file , yyscanner);
	yy_load_buffer_state( yyscanner );
}

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * @param yyscanner The scanner object.
 */
    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack (yyscanner);
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state( yyscanner );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yyg->yy_did_buffer_switch_on_eof = 1;
}

static void yy_load_buffer_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	yyg->yy_n_chars = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	yyg->yytext_ptr = yyg->yy_c_buf_p = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
	yyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;
	yyg->yy_hold_char = *yyg->yy_c_buf_p;
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * @param yyscanner The scanner object.
 * @return the allocated buffer state.
 */
    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state ) , yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2) , yyscanner );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file , yyscanner);

	return b;
}

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * @param yyscanner The scanner object.
 */
    void yy_delete_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf , yyscanner );

	yyfree( (void *) b , yyscanner );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file , yyscan_t yyscanner)

{
	int oerrno = errno;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	yy_flush_buffer( b , yyscanner);

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

        b->yy_is_interactive = 0;
    
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * @param yyscanner The scanner object.
 */
    void yy_flush_buffer (YY_BUFFER_STATE  b , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state( yyscanner );
}

/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  @param yyscanner The scanner object.
 */
void yypush_buffer_state (YY_BUFFER_STATE new_buffer , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack(yyscanner);

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*yyg->yy_c_buf_p = yyg->yy_hold_char;
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = yyg->yy_c_buf_p;
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = yyg->yy_n_chars;
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		yyg->yy_buffer_stack_top++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state( yyscanner );
	yyg->yy_did_buffer_switch_on_eof = 1;
}

/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  @param yyscanner The scanner object.
 */
void yypop_buffer_state (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER , yyscanner);
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if (yyg->yy_buffer_stack_top > 0)
		--yyg->yy_buffer_stack_top;

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state( yyscanner );
		yyg->yy_did_buffer_switch_on_eof = 1;
	}
}

/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
static void yyensure_buffer_stack (yyscan_t yyscanner)
{
	yy_size_t num_to_alloc;
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

	if (!yyg->yy_buffer_stack) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset(yyg->yy_buffer_stack, 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		yyg->yy_buffer_stack_max = num_to_alloc;
		yyg->yy_buffer_stack_top = 0;
		return;
	}

	if (yyg->yy_buffer_stack_top >= (yyg->yy_buffer_stack_max) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = yyg->yy_buffer_stack_max + grow_size;
		yyg->yy_buffer_stack = (struct yy_buffer_state**)yyrealloc
								(yyg->yy_buffer_stack,
								num_to_alloc * sizeof(struct yy_buffer_state*)
								, yyscanner);
		if ( ! yyg->yy_buffer_stack )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset(yyg->yy_buffer_stack + yyg->yy_buffer_stack_max, 0, grow_size * sizeof(struct yy_buffer_state*));
		yyg->yy_buffer_stack_max = num_to_alloc;
	}
}

/** Setup the input buffer state to scan directly from a user-specified character buffer.
 * @param base the character buffer
 * @param size the size in bytes of the character buffer
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
    
	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return NULL;

	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state ) , yyscanner );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = (int) (size - 2);	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = NULL;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b , yyscanner );

	return b;
}

/** Setup the input buffer state to scan a string. The next call to yylex() will
 * scan from a @e copy of @a str.
 * @param yystr a NUL-terminated string to scan
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 * @note If you want to scan bytes that may contain NUL values, then use
 *       yy_scan_bytes() instead.
 */
YY_BUFFER_STATE yy_scan_string (const char * yystr , yyscan_t yyscanner)
{
    
	return yy_scan_bytes( yystr, (int) strlen(yystr) , yyscanner);
}

/** Setup the input buffer state to scan the given bytes. The next call to yylex() will
 * scan from a @e copy of @a bytes.
 * @param yybytes the byte buffer to scan
 * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
 * @param yyscanner The scanner object.
 * @return the newly allocated buffer state object.
 */
YY_BUFFER_STATE yy_scan_bytes  (const char * yybytes, int  _yybytes_len , yyscan_t yyscanner)
{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;
    
	/* Get memory for full buffer, including space for trailing EOB's. */
	n = (yy_size_t) (_yybytes_len + 2);
	buf = (char *) yyalloc( n , yyscanner );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < _yybytes_len; ++i )
		buf[i] = yybytes[i];

	buf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n , yyscanner);
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
}

    static void yy_push_state (int  _new_state , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( yyg->yy_start_stack_ptr >= yyg->yy_start_stack_depth )
		{
		yy_size_t new_size;

		yyg->yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = (yy_size_t) yyg->yy_start_stack_depth * sizeof( int );

		if ( ! yyg->yy_start_stack )
			yyg->yy_start_stack = (int *) yyalloc( new_size , yyscanner );

		else
			yyg->yy_start_stack = (int *) yyrealloc(
					(void *) yyg->yy_start_stack, new_size , yyscanner );

		if ( ! yyg->yy_start_stack )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	yyg->yy_start_stack[yyg->yy_start_stack_ptr++] = YY_START;

	BEGIN(_new_state);
}

    static void yy_pop_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	if ( --yyg->yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yyg->yy_start_stack[yyg->yy_start_stack_ptr]);
}

    static int yy_top_state  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	return yyg->yy_start_stack[yyg->yy_start_stack_ptr - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

static void yynoreturn yy_fatal_error (const char* msg , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
}

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = yyg->yy_hold_char; \
		yyg->yy_c_buf_p = yytext + yyless_macro_arg; \
		yyg->yy_hold_char = *yyg->yy_c_buf_p; \
		*yyg->yy_c_buf_p = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/** Get the user-defined data for this scanner.
 * @param yyscanner The scanner object.
 */
YY_EXTRA_TYPE yyget_extra  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyextra;
}

/** Get the current line number.
 * @param yyscanner The scanner object.
 */
int yyget_lineno  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yylineno;
}

/** Get the current column number.
 * @param yyscanner The scanner object.
 */
int yyget_column  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        if (! YY_CURRENT_BUFFER)
            return 0;
    
    return yycolumn;
}

/** Get the input stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_in  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyin;
}

/** Get the output stream.
 * @param yyscanner The scanner object.
 */
FILE *yyget_out  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyout;
}

/** Get the length of the current token.
 * @param yyscanner The scanner object.
 */
int yyget_leng  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yyleng;
}

/** Get the current token.
 * @param yyscanner The scanner object.
 */

char *yyget_text  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yytext;
}

/** Set the user-defined data. This data is never touched by the scanner.
 * @param user_defined The data to be associated with this scanner.
 * @param yyscanner The scanner object.
 */
void yyset_extra (YY_EXTRA_TYPE  user_defined , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyextra = user_defined ;
}

/** Set the current line number.
 * @param _line_number line number
 * @param yyscanner The scanner object.
 */
void yyset_lineno (int  _line_number , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* lineno is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "yyset_lineno called with no buffer" );
    
    yylineno = _line_number;
}

/** Set the current column.
 * @param _column_no column number
 * @param yyscanner The scanner object.
 */
void yyset_column (int  _column_no , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

        /* column is only valid if an input buffer exists. */
        if (! YY_CURRENT_BUFFER )
           YY_FATAL_ERROR( "yyset_column called with no buffer" );
    
    yycolumn = _column_no;
}

/** Set the input stream. This does not discard the current
 * input buffer.
 * @param _in_str A readable stream.
 * @param yyscanner The scanner object.
 * @see yy_switch_to_buffer
 */
void yyset_in (FILE *  _in_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyin = _in_str ;
}

void yyset_out (FILE *  _out_str , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yyout = _out_str ;
}

int yyget_debug  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yy_flex_debug;
}

void yyset_debug (int  _bdebug , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yy_flex_debug = _bdebug ;
}

/* Accessor methods for yylval and yylloc */

YYSTYPE * yyget_lval  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylval;
}

void yyset_lval (YYSTYPE *  yylval_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylval = yylval_param;
}

YYLTYPE *yyget_lloc  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    return yylloc;
}
    
void yyset_lloc (YYLTYPE *  yylloc_param , yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    yylloc = yylloc_param;
}
    
/* User-visible API */

/* yylex_init is special because it creates the scanner itself, so it is
 * the ONLY reentrant function that doesn't take the scanner as the last argument.
 * That's why we explicitly handle the declaration, instead of using our macros.
 */
int yylex_init(yyscan_t* ptr_yy_globals)
{
    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), NULL );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    return yy_init_globals ( *ptr_yy_globals );
}

/* yylex_init_extra has the same functionality as yylex_init, but follows the
 * convention of taking the scanner as the last argument. Note however, that
 * this is a *pointer* to a scanner, as it will be allocated by this call (and
 * is the reason, too, why this function also must handle its own declaration).
 * The user defined value in the first argument will be available to yyalloc in
 * the yyextra field.
 */
int yylex_init_extra( YY_EXTRA_TYPE yy_user_defined, yyscan_t* ptr_yy_globals )
{
    struct yyguts_t dummy_yyguts;

    yyset_extra (yy_user_defined, &dummy_yyguts);

    if (ptr_yy_globals == NULL){
        errno = EINVAL;
        return 1;
    }

    *ptr_yy_globals = (yyscan_t) yyalloc ( sizeof( struct yyguts_t ), &dummy_yyguts );

    if (*ptr_yy_globals == NULL){
        errno = ENOMEM;
        return 1;
    }

    /* By setting to 0xAA, we expose bugs in
    yy_init_globals. Leave at 0x00 for releases. */
    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));

    yyset_extra (yy_user_defined, *ptr_yy_globals);

    return yy_init_globals ( *ptr_yy_globals );
}

static int yy_init_globals (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
    /* Initialization is the same as for the non-reentrant scanner.
     * This function is called from yylex_destroy(), so don't allocate here.
     */

    yyg->yy_buffer_stack = NULL;
    yyg->yy_buffer_stack_top = 0;
    yyg->yy_buffer_stack_max = 0;
    yyg->yy_c_buf_p = NULL;
    yyg->yy_init = 0;
    yyg->yy_start = 0;

    yyg->yy_start_stack_ptr = 0;
    yyg->yy_start_stack_depth = 0;
    yyg->yy_start_stack =  NULL;

/* Defined in main.c */
#ifdef YY_STDINIT
    yyin = stdin;
    yyout = stdout;
#else
    yyin = NULL;
    yyout = NULL;
#endif

    /* For future reference: Set errno on error, since we are called by
     * yylex_init()
     */
    return 0;
}

/* yylex_destroy is for both reentrant and non-reentrant scanners. */
int yylex_destroy  (yyscan_t yyscanner)
{
    struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;

    /* Pop the buffer stack, destroying each element. */
	while(YY_CURRENT_BUFFER){
		yy_delete_buffer( YY_CURRENT_BUFFER , yyscanner );
		YY_CURRENT_BUFFER_LVALUE = NULL;
		yypop_buffer_state(yyscanner);
	}

	/* Destroy the stack itself. */
	yyfree(yyg->yy_buffer_stack , yyscanner);
	yyg->yy_buffer_stack = NULL;

    /* Destroy the start condition stack. */
        yyfree( yyg->yy_start_stack , yyscanner );
        yyg->yy_start_stack = NULL;

    /* Reset the globals. This is important in a non-reentrant scanner so the next time
     * yylex() is called, initialization will occur. */
    yy_init_globals( yyscanner);

    /* Destroy the main struct (reentrant only). */
    yyfree ( yyscanner , yyscanner );
    yyscanner = NULL;
    return 0;
}

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s , yyscan_t yyscanner)
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;

	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr , yyscan_t yyscanner)
{
	struct yyguts_t * yyg = (struct yyguts_t*)yyscanner;
	(void)yyg;
	free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

#define YYTABLES_NAME "yytables"

#line 333 "beng.l"


/*
	<USER_LITERAL>{
	{UNDERSCORE} { yy_pop_state(yyscanner); return (beng_lang::parser::token::UNDERSCORE); }
	{DBLCOLON} { yy_pop_state(yyscanner); return (beng_lang::parser::token::DBLCOLON); }
	.|[\xd\xa] { yy_pop_state(yyscanner); yyless(0); }
}

DECIMAL_LITERAL			{DECIMAL}"_"



<INITIAL>{DECIMAL} {
	variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
	yy_push_state(NUMERIC, yyscanner);
	return (beng_lang::parser::token::DECIMAL);
}

{DECIMAL} {
    variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
	return (beng_lang::parser::token::DECIMAL);
}

{DECIMAL_LITERAL} {
	variant_emplace(yylval, string_view{yytext, (size_t) yyleng - 1});
	return (beng_lang::parser::token::DECIMAL_LITERAL);
}

<NUMERIC>{
	{UNDERSCORE} { return (beng_lang::parser::token::UNDERSCORE); }
	{DBLCOLON} { return (beng_lang::parser::token::DBLCOLON); }
	{IDENTIFIER} {
		variant_emplace(yylval, string_view{yytext, (size_t) yyleng});
		return (beng_lang::parser::token::IDENTIFIER);
	}

	.|[\xd\xa] { yy_pop_state(yyscanner); --yytext; }
}
------------------------
	//->*
	{ARROWAST}              { return (beng_lang::parser::token::ARROWAST); }

	// ~>
	{FARROW}                { return (beng_lang::parser::token::FARROW); }

	// .*
	{PTAST}                 { return (beng_lang::parser::token::PTAST); }

	// ++
	{DBLPLUS}               { return (beng_lang::parser::token::DBLPLUS); }

	// --
	{DBLMINUS}              { return (beng_lang::parser::token::DBLMINUS); }

	// <<
	{LEFTSHIFT}             { return (beng_lang::parser::token::LEFTSHIFT); }

	// >>
    {RIGHTSHIFT}            { return (beng_lang::parser::token::RIGHTSHIFT); }

	// <=
	{LE}                    { return (beng_lang::parser::token::LE); }

	// >=
	{GE}                    { return (beng_lang::parser::token::GE); }

	// ==
	{EQ}                    { return (beng_lang::parser::token::EQ); }

	// !=
    {NE}                    { return (beng_lang::parser::token::NE); }

	

	// &&
    {AND}                   { return (beng_lang::parser::token::AND); }

	// +=
	{ADDASSIGN}             { return (beng_lang::parser::token::ADDASSIGN); }

	// -=
    {SUBASSIGN}             { return (beng_lang::parser::token::SUBASSIGN); }

	// *=
    {MULASSIGN}             { return (beng_lang::parser::token::MULASSIGN); }

	// /=
    {DIVASSIGN}             { return (beng_lang::parser::token::DIVASSIGN); }

	// %=
    {MODASSIGN}             { return (beng_lang::parser::token::MODASSIGN); }

	// <<=
	{LSHIFTSSIGN}           { return (beng_lang::parser::token::LSHIFTSSIGN); }

	// >>=
    {RSHIFTSSIGN}           { return (beng_lang::parser::token::RSHIFTSSIGN); }

	// &=
	{BITANDASSIGN}          { return (beng_lang::parser::token::BITANDASSIGN); }

	// |=
    {BITORASSIGN}           { return (beng_lang::parser::token::BITORASSIGN); }

	// ^=
    {BITXORASSIGN}          { return (beng_lang::parser::token::BITXORASSIGN); }

	// +
	{PLUS}					{ return (beng_lang::parser::token::PLUS); }

	// -
	{MINUS}					{ return (beng_lang::parser::token::MINUS);	}

	// *
	{ASTERISK}				{ return (beng_lang::parser::token::ASTERISK);	}

	// /
	{SLASH}				    { return (beng_lang::parser::token::SLASH);	}

	// %
    {PERCENT}               { return (beng_lang::parser::token::PERCENT);	}

	// &
	{AMPERSAND}				{ return (beng_lang::parser::token::AMPERSAND);	}

	// |
    {BITOR}				    { return (beng_lang::parser::token::BITOR);	}

	// ^
	{EXCL}					{ return (beng_lang::parser::token::EXCL);	}

	// !
	{EXCLPT}                { return (beng_lang::parser::token::EXCLPT); }
	
	// ~
	{TILDA}					{ return (beng_lang::parser::token::TILDA);	}

	// .
	

	// $
	{DOLLAR}                { return (beng_lang::parser::token::DOLLAR); }

	// >
	{CLOSE_BROKET}			{ return (beng_lang::parser::token::CLOSE_BROKET); }
*/
