Terminals unused in grammar

    COMMENT_BEGIN
    COMMENT_END
    OPERATOR_TERM
    "`->*`"
    "`.*`"
    "`++`"
    "`--`"
    "`<<`"
    "`>>`"
    "`<=`"
    "`>=`"
    "`+=`"
    "`-=`"
    "`*=`"
    "`/=`"
    "`%=`"
    "`<<=`"
    "`>>=`"
    "`&=`"
    "`|=`"
    "`^=`"
    "`<`"
    "`>`"
    "`/`"
    "`%`"
    "`^`"
    "`$`"
    "`#`"
    AUTO
    THROW
    SIZEOF
    LOWEST
    EXTENDS


Grammar

    0 $accept: begin "end of file"

    1 begin: statement_any "end of file"
    2      | finished-statement-any "end of file"

    3 statement_any: %empty
    4              | statement
    5              | finished-statement-any statement

    6 finished-statement-any: finished-statement
    7                       | finished-statement-any "`;`"
    8                       | finished-statement-any finished-statement
    9                       | statement_any "`;`"

   10 statement: EXTERN VAR identifier "`:`" type-expr
   11          | EXTERN "`fn`" fn-decl
   12          | INCLUDE STRING
   13          | fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   14          | generic-statement
   15          | STRUCT struct-decl

   16 let-decl: let-decl-start-with-opt-type
   17         | let-decl-start-with-opt-type "`=`" pack-expression

   18 let-decl-start: identifier
   19               | "weak modifier" identifier

   20 let-decl-start-with-opt-type: let-decl-start
   21                             | let-decl-start "`:`" type-expr

   22 infunction-statement-any: %empty
   23                         | infunction-statement
   24                         | finished-infunction-statement-any infunction-statement

   25 finished-infunction-statement-any: finished-statement
   26                                  | finished-infunction-statement-any "`;`"
   27                                  | finished-infunction-statement-any finished-statement
   28                                  | infunction-statement-any "`;`"

   29 braced-statements: "`{`" infunction-statement-set "`}`"

   30 finished-statement: "`while`" syntax-expression braced-statements
   31                   | "`while`" syntax-expression "`;`" syntax-expression braced-statements
   32                   | "`for`" syntax-expression "`in`" syntax-expression braced-statements
   33                   | "`if`" syntax-expression braced-statements
   34                   | "`if`" syntax-expression braced-statements "`else`" braced-statements
   35                   | fn-start-decl fn-decl braced-statements
   36                   | STRUCT qname braced-statements
   37                   | STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements
   38                   | ENUM enum-decl

   39 infunction-statement-set: infunction-statement-any
   40                         | finished-infunction-statement-any

   41 generic-statement: LET let-decl
   42                  | USING using-decl
   43                  | compound-expression
   44                  | syntax-expression "`=`" syntax-expression

   45 infunction-statement: generic-statement
   46                     | "`break`"
   47                     | "`continue`"
   48                     | "`return`"
   49                     | "`return`" syntax-expression

   50 identifier: IDENTIFIER

   51 internal-identifier: CONTEXT_IDENTIFIER

   52 qname: "`::`" identifier
   53      | identifier
   54      | qname "`::`" identifier

   55 fn-start-decl: "`fn`"
   56              | INLINE "`fn`"

   57 fn-name: qname
   58        | "`new`"

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`"
   60        | fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern

   62 enum-decl: qname "`{`" case-list-opt "`}`"

   63 case-list-opt: %empty
   64              | case-list

   65 case-list: case-decl
   66          | case-list "," case-decl

   67 case-decl: identifier

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`"
   69            | qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

   70 using-decl: qname "`=>`" syntax-expression
   71           | qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

   72 expression-list: syntax-expression
   73                | expression-list "," syntax-expression

   74 argument-list-opt: %empty
   75                  | argument-list

   76 argument-list: argument
   77              | argument-list "," argument

   78 argument: argument-name syntax-expression
   79         | syntax-expression

   80 argument-name: identifier "`=`"
   81              | identifier "`:`"

   82 field-list-opt: %empty
   83               | field-list

   84 field-list: field
   85           | field-list "," field

   86 field-default-value-opt: %empty
   87                        | "`=`" syntax-expression

   88 field: identifier "`:`" type-expr field-default-value-opt
   89      | identifier "`=>`" syntax-expression

   90 parameter-list-opt: %empty
   91                   | parameter-list

   92 parameter-list: parameter-decl
   93               | parameter-list "," parameter-decl

   94 internal-identifier-opt: %empty
   95                        | internal-identifier

   96 parameter-default-value-opt: %empty
   97                            | "`=`" syntax-expression

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern-mod parameter-default-value-opt
   99               | internal-identifier "`:`" pattern-mod parameter-default-value-opt
  100               | "`:`" pattern-mod parameter-default-value-opt
  101               | identifier internal-identifier parameter-default-value-opt
  102               | internal-identifier parameter-default-value-opt
  103               | "`_`" parameter-default-value-opt
  104               | internal-identifier "`...`" parameter-default-value-opt
  105               | "`...`" parameter-default-value-opt
  106               | identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt
  107               | internal-identifier "`:`" constraint-expression parameter-default-value-opt
  108               | "`:`" constraint-expression parameter-default-value-opt
  109               | constraint-expression parameter-default-value-opt

  110 constraint-expression-mod: "`~`"
  111                          | "`~`" "constexpr modifier"
  112                          | "`~`" "runctime modifier"

  113 constraint-expression: constraint-expression-mod type-expr
  114                      | constraint-expression-mod type-expr "`...`"

  115 subpatterns: "`(`" pattern-list "`)`"

  116 pattern-list: pattern-field
  117             | pattern-list "," pattern-field

  118 pattern-field-sfx: concept-expression-list-opt
  119                  | concept-expression-list-opt "`...`"
  120                  | internal-identifier concept-expression-list-opt
  121                  | internal-identifier concept-expression-list-opt "`...`"
  122                  | "`=`" pattern-sfx
  123                  | internal-identifier "`=`" pattern-sfx

  124 pattern-field: identifier pattern-field-sfx
  125              | "`?`" internal-identifier pattern-field-sfx
  126              | pattern-field-sfx
  127              | "`_`" pattern-field-sfx

  128 pattern-mod: pattern-sfx
  129            | "constexpr modifier" pattern-sfx
  130            | "runctime modifier" pattern-sfx
  131            | "typename modifier" pattern-sfx

  132 pattern-sfx: pattern
  133            | pattern "`...`"
  134            | "`...`"

  135 pattern: qname
  136        | qname subpatterns concept-expression-list-opt
  137        | internal-identifier concept-expression-list-opt
  138        | "`_`" concept-expression-list-opt
  139        | "`_`" subpatterns concept-expression-list-opt
  140        | "`{`" syntax-expression "`}`" concept-expression-list-opt
  141        | "`{`" syntax-expression "`}`" subpatterns concept-expression-list-opt
  142        | concept-expression-list

  143 concept-expression: "`@`" qname

  144 concept-expression-list-opt: %empty
  145                            | concept-expression-list

  146 concept-expression-list: concept-expression
  147                        | concept-expression-list concept-expression

  148 syntax-expression: CONTEXT_IDENTIFIER
  149                  | CT_IDENTIFIER
  150                  | syntax-expression-wo-ii

  151 syntax-expression-wo-ii: "nil"
  152                        | "true"
  153                        | "false"
  154                        | INTEGER
  155                        | DECIMAL
  156                        | DECIMAL_S
  157                        | INTEGER_INDEX
  158                        | STRING
  159                        | RESERVED_IDENTIFIER
  160                        | qname
  161                        | "`(`" "`)`"
  162                        | "`(`" "`:`" syntax-expression "`)`"
  163                        | "`(`" pack-expression "`)`"
  164                        | "`[`" expression-list "`]`"
  165                        | "`[[`" expression-list "`]]`"
  166                        | syntax-expression "`[`" syntax-expression "`]`"
  167                        | "`.`" identifier
  168                        | syntax-expression "`.`" identifier
  169                        | syntax-expression "`.`" apostrophe-expression
  170                        | syntax-expression INTEGER_INDEX
  171                        | "`!`" syntax-expression
  172                        | "`*`" syntax-expression
  173                        | syntax-expression "`+`" syntax-expression
  174                        | syntax-expression "`-`" syntax-expression
  175                        | syntax-expression "`==`" syntax-expression
  176                        | syntax-expression "`!=`" syntax-expression
  177                        | syntax-expression "`..`" syntax-expression
  178                        | syntax-expression "`&`" syntax-expression
  179                        | syntax-expression "`|`" syntax-expression
  180                        | syntax-expression "`&&`" syntax-expression
  181                        | syntax-expression "`||`" syntax-expression
  182                        | apostrophe-expression
  183                        | new-expression
  184                        | compound-expression
  185                        | lambda-expression

  186 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE"

  187 new-expression: "`new`" qname
  188               | "`new`" apostrophe-expression
  189               | "`new`" qname "`(`" argument-list-opt "`)`"
  190               | "`new`" apostrophe-expression "`(`" argument-list-opt "`)`"

  191 call-expression: qname "`(`" pack-expression-opt "`)`"
  192                | CONTEXT_IDENTIFIER "`(`" pack-expression-opt "`)`"
  193                | call-expression "`(`" pack-expression "`)`"
  194                | apostrophe-expression "`(`" pack-expression "`)`"
  195                | lambda-expression "`(`" pack-expression "`)`"

  196 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements
  197                  | fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

  198 pack-expression-opt: %empty
  199                    | pack-expression

  200 pack-expression: syntax-expression
  201                | identifier "`:`" syntax-expression
  202                | pack-expression "," syntax-expression
  203                | pack-expression "," identifier "`:`" syntax-expression

  204 compound-expression: syntax-expression "`...`"
  205                    | call-expression

  206 type-expr: qname
  207          | call-expression
  208          | CONTEXT_IDENTIFIER
  209          | "`[`" type-expr "`]`"
  210          | "`(`" "`)`"
  211          | "`(`" pack-expression "`)`"
  212          | type-expr "`[`" syntax-expression "`]`"
  213          | type-expr "`|`" type-expr
  214          | type-expr "`->`" type-expr


Terminals, with rules where they appear

    "end of file" (0) 0 1 2
    error (256)
    COMMENT_BEGIN (258)
    COMMENT_END (259)
    STRING <sonia::lang::bang::annotated_string_view> (260) 12 158
    IDENTIFIER <sonia::lang::bang::annotated_string_view> (261) 50
    CONTEXT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (262) 51 148 192 208
    RESERVED_IDENTIFIER <sonia::lang::bang::annotated_string_view> (263) 159
    CT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (264) 149
    INTEGER_INDEX <sonia::lang::bang::annotated_string_view> (265) 157 170
    INTEGER <sonia::lang::bang::annotated_integer> (266) 154
    DECIMAL <sonia::lang::bang::annotated_decimal> (267) 155
    DECIMAL_S <sonia::lang::bang::annotated_decimal> (268) 156
    OPERATOR_TERM <sonia::string_view> (269)
    "`=`" <sonia::lang::lex::resource_location> (270) 17 44 80 87 97 122 123
    "APOSTROPHE" (271) 186
    "`@`" (272) 143
    "`_`" <sonia::lang::lex::resource_location> (273) 103 127 138 139
    "`->*`" (274)
    "`->`" (275) 61 197 214
    "`=>`" (276) 13 68 69 70 71 89
    "`~>`" (277) 60
    "`.*`" (278)
    "`++`" (279)
    "`--`" (280)
    "`<<`" (281)
    "`>>`" (282)
    "`<=`" (283)
    "`>=`" (284)
    "`==`" <sonia::lang::lex::resource_location> (285) 175
    "`!=`" <sonia::lang::lex::resource_location> (286) 176
    "`&&`" <sonia::lang::lex::resource_location> (287) 180
    "`||`" <sonia::lang::lex::resource_location> (288) 181
    "`..`" <sonia::lang::lex::resource_location> (289) 177
    "`...`" <sonia::lang::lex::resource_location> (290) 104 105 114 119 121 133 134 204
    "`+=`" (291)
    "`-=`" (292)
    "`*=`" (293)
    "`/=`" (294)
    "`%=`" (295)
    "`<<=`" (296)
    "`>>=`" (297)
    "`&=`" (298)
    "`|=`" (299)
    "`^=`" (300)
    "`:`" (301) 10 21 81 88 98 99 100 106 107 108 162 201 203
    "`::`" (302) 52 54
    "`(`" <sonia::lang::lex::resource_location> (303) 13 37 59 60 61 68 69 71 115 161 162 163 189 190 191 192 193 194 195 196 197 210 211
    "`)`" (304) 13 37 59 60 61 68 69 71 115 161 162 163 189 190 191 192 193 194 195 196 197 210 211
    "`{`" <sonia::lang::lex::resource_location> (305) 29 62 140 141
    "`}`" (306) 29 62 140 141
    "`[`" <sonia::lang::lex::resource_location> (307) 164 166 209 212
    "`]`" (308) 164 166 209 212
    "`[[`" <sonia::lang::lex::resource_location> (309) 165
    "`]]`" (310) 165
    "`<`" (311)
    "`>`" (312)
    "`;`" (313) 7 9 26 28 31
    "`.`" <sonia::lang::lex::resource_location> (314) 167 168 169
    "`+`" <sonia::lang::lex::resource_location> (315) 173
    "`-`" <sonia::lang::lex::resource_location> (316) 174
    "`*`" <sonia::lang::lex::resource_location> (317) 172
    "`/`" (318)
    "`%`" (319)
    "`&`" <sonia::lang::lex::resource_location> (320) 178
    "`|`" <sonia::lang::lex::resource_location> (321) 179 213
    "`!`" <sonia::lang::lex::resource_location> (322) 171
    "`~`" (323) 110 111 112
    "`^`" (324)
    "," (325) 66 73 77 85 93 117 202 203
    "`$`" (326)
    "`?`" <sonia::lang::lex::resource_location> (327) 125
    "`#`" (328)
    LET (329) 41
    VAR (330) 10
    EXTERN (331) 10 11
    "`new`" <sonia::lang::lex::resource_location> (332) 58 187 188 189 190
    "`while`" (333) 30 31
    "`for`" (334) 32
    "`in`" (335) 32
    "`if`" (336) 33 34
    "`else`" (337) 34
    "`continue`" <sonia::lang::lex::resource_location> (338) 47
    "`break`" <sonia::lang::lex::resource_location> (339) 46
    "`return`" <sonia::lang::lex::resource_location> (340) 48 49
    AUTO (341)
    USING (342) 42
    THROW (343)
    SIZEOF (344)
    LOWEST (345)
    DEREF (346)
    INCLUDE (347) 12
    INLINE (348) 56
    "`fn`" <sonia::lang::lex::resource_location> (349) 11 55 56
    ENUM (350) 38
    STRUCT (351) 15 36 37
    EXTENDS (352)
    "weak modifier" (353) 19
    "typename modifier" (354) 131
    "constexpr modifier" (355) 111 129
    "runctime modifier" (356) 112 130
    "nil" <annotated_nil> (357) 151
    "true" <annotated_bool> (358) 152
    "false" <annotated_bool> (359) 153


Nonterminals, with rules where they appear

    $accept (105)
        on left: 0
    begin (106)
        on left: 1 2
        on right: 0
    statement_any <managed_statement_list> (107)
        on left: 3 4 5
        on right: 1 9
    finished-statement-any <managed_statement_list> (108)
        on left: 6 7 8 9
        on right: 2 5 7 8
    statement <statement> (109)
        on left: 10 11 12 13 14 15
        on right: 4 5
    let-decl <let_statement> (110)
        on left: 16 17
        on right: 41
    let-decl-start <let_statement> (111)
        on left: 18 19
        on right: 20 21
    let-decl-start-with-opt-type <let_statement> (112)
        on left: 20 21
        on right: 16 17
    infunction-statement-any <managed_statement_list> (113)
        on left: 22 23 24
        on right: 28 39
    finished-infunction-statement-any <managed_statement_list> (114)
        on left: 25 26 27 28
        on right: 24 26 27 40
    braced-statements <managed_statement_list> (115)
        on left: 29
        on right: 30 31 32 33 34 35 36 37 196 197
    finished-statement <finished_statement_type> (116)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 6 8 25 27
    infunction-statement-set <managed_statement_list> (117)
        on left: 39 40
        on right: 29
    generic-statement <generic_statement_type> (118)
        on left: 41 42 43 44
        on right: 14 45
    infunction-statement <statement> (119)
        on left: 45 46 47 48 49
        on right: 23 24
    identifier <sonia::lang::bang::annotated_identifier> (120)
        on left: 50
        on right: 10 18 19 52 53 54 67 80 81 88 89 98 101 106 124 167 168 201 203
    internal-identifier <sonia::lang::bang::context_identifier> (121)
        on left: 51
        on right: 95 99 101 102 104 107 120 121 123 125 137
    qname <sonia::lang::bang::annotated_qname> (122)
        on left: 52 53 54
        on right: 36 37 54 57 62 68 69 70 71 135 136 143 160 187 189 191 206
    fn-start-decl <fn_kind> (123)
        on left: 55 56
        on right: 13 35 196 197
    fn-name <sonia::lang::bang::annotated_qname> (124)
        on left: 57 58
        on right: 13 59 60 61
    fn-decl <fn_pure_t> (125)
        on left: 59 60 61
        on right: 11 35
    enum-decl <enum_decl> (126)
        on left: 62
        on right: 38
    case-list-opt <std::vector<sonia::lang::bang::identifier>> (127)
        on left: 63 64
        on right: 62
    case-list <std::vector<sonia::lang::bang::identifier>> (128)
        on left: 65 66
        on right: 64 66
    case-decl <sonia::lang::bang::identifier> (129)
        on left: 67
        on right: 65 66
    struct-decl <struct_decl> (130)
        on left: 68 69
        on right: 15
    using-decl <using_decl> (131)
        on left: 70 71
        on right: 42
    expression-list <expression_list_t> (132)
        on left: 72 73
        on right: 73 164 165
    argument-list-opt <named_expression_list_t> (133)
        on left: 74 75
        on right: 189 190
    argument-list <named_expression_list_t> (134)
        on left: 76 77
        on right: 75 77
    argument <named_expression_t> (135)
        on left: 78 79
        on right: 76 77
    argument-name <sonia::lang::bang::annotated_identifier> (136)
        on left: 80 81
        on right: 78
    field-list-opt <field_list_t> (137)
        on left: 82 83
        on right: 68 69
    field-list <field_list_t> (138)
        on left: 84 85
        on right: 83 85
    field-default-value-opt <sonia::optional<syntax_expression_t>> (139)
        on left: 86 87
        on right: 88
    field <field_t> (140)
        on left: 88 89
        on right: 84 85
    parameter-list-opt <parameter_list_t> (141)
        on left: 90 91
        on right: 13 37 59 60 61 69 71 196 197
    parameter-list <parameter_list_t> (142)
        on left: 92 93
        on right: 91 93
    internal-identifier-opt <sonia::lang::bang::context_identifier> (143)
        on left: 94 95
        on right: 98 106
    parameter-default-value-opt <sonia::optional<syntax_expression_t>> (144)
        on left: 96 97
        on right: 98 99 100 101 102 103 104 105 106 107 108 109
    parameter-decl <parameter_t> (145)
        on left: 98 99 100 101 102 103 104 105 106 107 108 109
        on right: 92 93
    constraint-expression-mod <parameter_constraint_modifier_t> (146)
        on left: 110 111 112
        on right: 113 114
    constraint-expression <std::pair<syntax_expression_t, parameter_constraint_modifier_t>> (147)
        on left: 113 114
        on right: 106 107 108 109
    subpatterns <pattern_list_t> (148)
        on left: 115
        on right: 136 139 141
    pattern-list <pattern_list_t> (149)
        on left: 116 117
        on right: 115 117
    pattern-field-sfx <pattern_t::field> (150)
        on left: 118 119 120 121 122 123
        on right: 124 125 126 127
    pattern-field <pattern_t::field> (151)
        on left: 124 125 126 127
        on right: 116 117
    pattern-mod <std::pair<pattern_t, parameter_constraint_modifier_t>> (152)
        on left: 128 129 130 131
        on right: 98 99 100
    pattern-sfx <std::pair<pattern_t, parameter_constraint_modifier_t>> (153)
        on left: 132 133 134
        on right: 122 123 128 129 130 131
    pattern <pattern_t> (154)
        on left: 135 136 137 138 139 140 141 142
        on right: 61 132 133
    concept-expression <syntax_expression_t> (155)
        on left: 143
        on right: 146 147
    concept-expression-list-opt <concept_expression_list_t> (156)
        on left: 144 145
        on right: 118 119 120 121 136 137 138 139 140 141
    concept-expression-list <concept_expression_list_t> (157)
        on left: 146 147
        on right: 142 145 147
    syntax-expression <syntax_expression_t> (158)
        on left: 148 149 150
        on right: 13 30 31 32 33 34 44 49 70 71 72 73 78 79 87 89 97 140 141 162 166 168 169 170 171 172 173 174 175 176 177 178 179 180 181 186 200 201 202 203 204 212
    syntax-expression-wo-ii <syntax_expression_t> (159)
        on left: 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185
        on right: 150
    apostrophe-expression <syntax_expression_t> (160)
        on left: 186
        on right: 169 182 188 190 194
    new-expression <syntax_expression_t> (161)
        on left: 187 188 189 190
        on right: 183
    call-expression <syntax_expression_t> (162)
        on left: 191 192 193 194 195
        on right: 193 205 207
    lambda-expression <syntax_expression_t> (163)
        on left: 196 197
        on right: 185 195
    pack-expression-opt <named_expression_list_t> (164)
        on left: 198 199
        on right: 191 192
    pack-expression <named_expression_list_t> (165)
        on left: 200 201 202 203
        on right: 17 163 193 194 195 199 202 203 211
    compound-expression <syntax_expression_t> (166)
        on left: 204 205
        on right: 43 184
    type-expr <syntax_expression_t> (167)
        on left: 206 207 208 209 210 211 212 213 214
        on right: 10 21 60 88 113 114 197 209 212 213 214


State 0

    0 $accept: . begin "end of file"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 3 (statement_any)

    begin                    go to state 33
    statement_any            go to state 34
    finished-statement-any   go to state 35
    statement                go to state 36
    finished-statement       go to state 37
    generic-statement        go to state 38
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 41
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 1

  158 syntax-expression-wo-ii: STRING .

    $default  reduce using rule 158 (syntax-expression-wo-ii)


State 2

   50 identifier: IDENTIFIER .

    $default  reduce using rule 50 (identifier)


State 3

  148 syntax-expression: CONTEXT_IDENTIFIER .
  192 call-expression: CONTEXT_IDENTIFIER . "`(`" pack-expression-opt "`)`"

    "`(`"  shift, and go to state 49

    $default  reduce using rule 148 (syntax-expression)


State 4

  159 syntax-expression-wo-ii: RESERVED_IDENTIFIER .

    $default  reduce using rule 159 (syntax-expression-wo-ii)


State 5

  149 syntax-expression: CT_IDENTIFIER .

    $default  reduce using rule 149 (syntax-expression)


State 6

  157 syntax-expression-wo-ii: INTEGER_INDEX .

    $default  reduce using rule 157 (syntax-expression-wo-ii)


State 7

  154 syntax-expression-wo-ii: INTEGER .

    $default  reduce using rule 154 (syntax-expression-wo-ii)


State 8

  155 syntax-expression-wo-ii: DECIMAL .

    $default  reduce using rule 155 (syntax-expression-wo-ii)


State 9

  156 syntax-expression-wo-ii: DECIMAL_S .

    $default  reduce using rule 156 (syntax-expression-wo-ii)


State 10

  186 apostrophe-expression: "APOSTROPHE" . syntax-expression "APOSTROPHE"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 51
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 11

   52 qname: "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 53


State 12

  161 syntax-expression-wo-ii: "`(`" . "`)`"
  162                        | "`(`" . "`:`" syntax-expression "`)`"
  163                        | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`:`"                shift, and go to state 54
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`)`"                shift, and go to state 55
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 58
    compound-expression      go to state 52


State 13

  164 syntax-expression-wo-ii: "`[`" . expression-list "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    expression-list          go to state 59
    syntax-expression        go to state 60
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 14

  165 syntax-expression-wo-ii: "`[[`" . expression-list "`]]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    expression-list          go to state 61
    syntax-expression        go to state 60
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 15

  167 syntax-expression-wo-ii: "`.`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 62


State 16

  172 syntax-expression-wo-ii: "`*`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 63
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 17

  171 syntax-expression-wo-ii: "`!`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 64
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 18

   41 generic-statement: LET . let-decl

    IDENTIFIER       shift, and go to state 2
    "weak modifier"  shift, and go to state 65

    let-decl                      go to state 66
    let-decl-start                go to state 67
    let-decl-start-with-opt-type  go to state 68
    identifier                    go to state 69


State 19

   10 statement: EXTERN . VAR identifier "`:`" type-expr
   11          | EXTERN . "`fn`" fn-decl

    VAR     shift, and go to state 70
    "`fn`"  shift, and go to state 71


State 20

  187 new-expression: "`new`" . qname
  188               | "`new`" . apostrophe-expression
  189               | "`new`" . qname "`(`" argument-list-opt "`)`"
  190               | "`new`" . apostrophe-expression "`(`" argument-list-opt "`)`"

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10
    "`::`"        shift, and go to state 11

    identifier             go to state 39
    qname                  go to state 72
    apostrophe-expression  go to state 73


State 21

   30 finished-statement: "`while`" . syntax-expression braced-statements
   31                   | "`while`" . syntax-expression "`;`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 74
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 22

   32 finished-statement: "`for`" . syntax-expression "`in`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 75
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 23

   33 finished-statement: "`if`" . syntax-expression braced-statements
   34                   | "`if`" . syntax-expression braced-statements "`else`" braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 76
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 24

   42 generic-statement: USING . using-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 77
    using-decl  go to state 78


State 25

   12 statement: INCLUDE . STRING

    STRING  shift, and go to state 79


State 26

   56 fn-start-decl: INLINE . "`fn`"

    "`fn`"  shift, and go to state 80


State 27

   55 fn-start-decl: "`fn`" .

    $default  reduce using rule 55 (fn-start-decl)


State 28

   38 finished-statement: ENUM . enum-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 81
    enum-decl   go to state 82


State 29

   15 statement: STRUCT . struct-decl
   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier   go to state 39
    qname        go to state 83
    struct-decl  go to state 84


State 30

  151 syntax-expression-wo-ii: "nil" .

    $default  reduce using rule 151 (syntax-expression-wo-ii)


State 31

  152 syntax-expression-wo-ii: "true" .

    $default  reduce using rule 152 (syntax-expression-wo-ii)


State 32

  153 syntax-expression-wo-ii: "false" .

    $default  reduce using rule 153 (syntax-expression-wo-ii)


State 33

    0 $accept: begin . "end of file"

    "end of file"  shift, and go to state 85


State 34

    1 begin: statement_any . "end of file"
    9 finished-statement-any: statement_any . "`;`"

    "end of file"  shift, and go to state 86
    "`;`"          shift, and go to state 87


State 35

    2 begin: finished-statement-any . "end of file"
    5 statement_any: finished-statement-any . statement
    7 finished-statement-any: finished-statement-any . "`;`"
    8                       | finished-statement-any . finished-statement

    "end of file"        shift, and go to state 88
    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 89
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    statement                go to state 90
    finished-statement       go to state 91
    generic-statement        go to state 38
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 41
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 36

    4 statement_any: statement .

    $default  reduce using rule 4 (statement_any)


State 37

    6 finished-statement-any: finished-statement .

    $default  reduce using rule 6 (finished-statement-any)


State 38

   14 statement: generic-statement .

    $default  reduce using rule 14 (statement)


State 39

   53 qname: identifier .

    $default  reduce using rule 53 (qname)


State 40

   54 qname: qname . "`::`" identifier
  160 syntax-expression-wo-ii: qname .
  191 call-expression: qname . "`(`" pack-expression-opt "`)`"

    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 93

    $default  reduce using rule 160 (syntax-expression-wo-ii)


State 41

   13 statement: fn-start-decl . fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   35 finished-statement: fn-start-decl . fn-decl braced-statements
  196 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  197                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 94
    "`new`"     shift, and go to state 95

    identifier  go to state 39
    qname       go to state 96
    fn-name     go to state 97
    fn-decl     go to state 98


State 42

   44 generic-statement: syntax-expression . "`=`" syntax-expression
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`=`"          shift, and go to state 100
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 43

  150 syntax-expression: syntax-expression-wo-ii .

    $default  reduce using rule 150 (syntax-expression)


State 44

  182 syntax-expression-wo-ii: apostrophe-expression .
  194 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 113

    $default  reduce using rule 182 (syntax-expression-wo-ii)


State 45

  183 syntax-expression-wo-ii: new-expression .

    $default  reduce using rule 183 (syntax-expression-wo-ii)


State 46

  193 call-expression: call-expression . "`(`" pack-expression "`)`"
  205 compound-expression: call-expression .

    "`(`"  shift, and go to state 114

    $default  reduce using rule 205 (compound-expression)


State 47

  185 syntax-expression-wo-ii: lambda-expression .
  195 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 115

    $default  reduce using rule 185 (syntax-expression-wo-ii)


State 48

   43 generic-statement: compound-expression .
  184 syntax-expression-wo-ii: compound-expression .

    "end of file"  reduce using rule 43 (generic-statement)
    "`}`"          reduce using rule 43 (generic-statement)
    "`;`"          reduce using rule 43 (generic-statement)
    $default       reduce using rule 184 (syntax-expression-wo-ii)


State 49

  192 call-expression: CONTEXT_IDENTIFIER "`(`" . pack-expression-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 198 (pack-expression-opt)

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression-opt      go to state 116
    pack-expression          go to state 117
    compound-expression      go to state 52


State 50

  196 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  197                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    "`(`"  shift, and go to state 94


State 51

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  186 apostrophe-expression: "APOSTROPHE" syntax-expression . "APOSTROPHE"
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "APOSTROPHE"   shift, and go to state 118
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 52

  184 syntax-expression-wo-ii: compound-expression .

    $default  reduce using rule 184 (syntax-expression-wo-ii)


State 53

   52 qname: "`::`" identifier .

    $default  reduce using rule 52 (qname)


State 54

  162 syntax-expression-wo-ii: "`(`" "`:`" . syntax-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 119
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 55

  161 syntax-expression-wo-ii: "`(`" "`)`" .

    $default  reduce using rule 161 (syntax-expression-wo-ii)


State 56

   53 qname: identifier .
  201 pack-expression: identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 120

    $default  reduce using rule 53 (qname)


State 57

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  200 pack-expression: syntax-expression .
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 200 (pack-expression)


State 58

  163 syntax-expression-wo-ii: "`(`" pack-expression . "`)`"
  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 121
    ","    shift, and go to state 122


State 59

   73 expression-list: expression-list . "," syntax-expression
  164 syntax-expression-wo-ii: "`[`" expression-list . "`]`"

    "`]`"  shift, and go to state 123
    ","    shift, and go to state 124


State 60

   72 expression-list: syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 72 (expression-list)


State 61

   73 expression-list: expression-list . "," syntax-expression
  165 syntax-expression-wo-ii: "`[[`" expression-list . "`]]`"

    "`]]`"  shift, and go to state 125
    ","     shift, and go to state 124


State 62

  167 syntax-expression-wo-ii: "`.`" identifier .

    $default  reduce using rule 167 (syntax-expression-wo-ii)


State 63

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  172                        | "`*`" syntax-expression .
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 172 (syntax-expression-wo-ii)


State 64

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  171                        | "`!`" syntax-expression .
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 171 (syntax-expression-wo-ii)


State 65

   19 let-decl-start: "weak modifier" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 126


State 66

   41 generic-statement: LET let-decl .

    $default  reduce using rule 41 (generic-statement)


State 67

   20 let-decl-start-with-opt-type: let-decl-start .
   21                             | let-decl-start . "`:`" type-expr

    "`:`"  shift, and go to state 127

    $default  reduce using rule 20 (let-decl-start-with-opt-type)


State 68

   16 let-decl: let-decl-start-with-opt-type .
   17         | let-decl-start-with-opt-type . "`=`" pack-expression

    "`=`"  shift, and go to state 128

    $default  reduce using rule 16 (let-decl)


State 69

   18 let-decl-start: identifier .

    $default  reduce using rule 18 (let-decl-start)


State 70

   10 statement: EXTERN VAR . identifier "`:`" type-expr

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 129


State 71

   11 statement: EXTERN "`fn`" . fn-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`new`"     shift, and go to state 95

    identifier  go to state 39
    qname       go to state 96
    fn-name     go to state 130
    fn-decl     go to state 131


State 72

   54 qname: qname . "`::`" identifier
  187 new-expression: "`new`" qname .
  189               | "`new`" qname . "`(`" argument-list-opt "`)`"

    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 132

    $default  reduce using rule 187 (new-expression)


State 73

  188 new-expression: "`new`" apostrophe-expression .
  190               | "`new`" apostrophe-expression . "`(`" argument-list-opt "`)`"

    "`(`"  shift, and go to state 133

    $default  reduce using rule 188 (new-expression)


State 74

   30 finished-statement: "`while`" syntax-expression . braced-statements
   31                   | "`while`" syntax-expression . "`;`" syntax-expression braced-statements
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 134
    "`[`"          shift, and go to state 107
    "`;`"          shift, and go to state 135
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 136


State 75

   32 finished-statement: "`for`" syntax-expression . "`in`" syntax-expression braced-statements
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112
    "`in`"         shift, and go to state 137


State 76

   33 finished-statement: "`if`" syntax-expression . braced-statements
   34                   | "`if`" syntax-expression . braced-statements "`else`" braced-statements
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 134
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 138


State 77

   54 qname: qname . "`::`" identifier
   70 using-decl: qname . "`=>`" syntax-expression
   71           | qname . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

    "`=>`"  shift, and go to state 139
    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 140


State 78

   42 generic-statement: USING using-decl .

    $default  reduce using rule 42 (generic-statement)


State 79

   12 statement: INCLUDE STRING .

    $default  reduce using rule 12 (statement)


State 80

   56 fn-start-decl: INLINE "`fn`" .

    $default  reduce using rule 56 (fn-start-decl)


State 81

   54 qname: qname . "`::`" identifier
   62 enum-decl: qname . "`{`" case-list-opt "`}`"

    "`::`"  shift, and go to state 92
    "`{`"   shift, and go to state 141


State 82

   38 finished-statement: ENUM enum-decl .

    $default  reduce using rule 38 (finished-statement)


State 83

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier
   68 struct-decl: qname . "`=>`" "`(`" field-list-opt "`)`"
   69            | qname . "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 142
    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 143
    "`{`"   shift, and go to state 134

    braced-statements  go to state 144


State 84

   15 statement: STRUCT struct-decl .

    $default  reduce using rule 15 (statement)


State 85

    0 $accept: begin "end of file" .

    $default  accept


State 86

    1 begin: statement_any "end of file" .

    $default  reduce using rule 1 (begin)


State 87

    9 finished-statement-any: statement_any "`;`" .

    $default  reduce using rule 9 (finished-statement-any)


State 88

    2 begin: finished-statement-any "end of file" .

    $default  reduce using rule 2 (begin)


State 89

    7 finished-statement-any: finished-statement-any "`;`" .

    $default  reduce using rule 7 (finished-statement-any)


State 90

    5 statement_any: finished-statement-any statement .

    $default  reduce using rule 5 (statement_any)


State 91

    8 finished-statement-any: finished-statement-any finished-statement .

    $default  reduce using rule 8 (finished-statement-any)


State 92

   54 qname: qname "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 145


State 93

  191 call-expression: qname "`(`" . pack-expression-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 198 (pack-expression-opt)

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression-opt      go to state 146
    pack-expression          go to state 117
    compound-expression      go to state 52


State 94

  196 lambda-expression: fn-start-decl "`(`" . parameter-list-opt "`)`" braced-statements
  197                  | fn-start-decl "`(`" . parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-list-opt         go to state 154
    parameter-list             go to state 155
    parameter-decl             go to state 156
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 95

   58 fn-name: "`new`" .

    $default  reduce using rule 58 (fn-name)


State 96

   54 qname: qname . "`::`" identifier
   57 fn-name: qname .

    "`::`"  shift, and go to state 92

    $default  reduce using rule 57 (fn-name)


State 97

   13 statement: fn-start-decl fn-name . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 159


State 98

   35 finished-statement: fn-start-decl fn-decl . braced-statements

    "`{`"  shift, and go to state 134

    braced-statements  go to state 160


State 99

  170 syntax-expression-wo-ii: syntax-expression INTEGER_INDEX .

    $default  reduce using rule 170 (syntax-expression-wo-ii)


State 100

   44 generic-statement: syntax-expression "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 161
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 101

  175 syntax-expression-wo-ii: syntax-expression "`==`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 162
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 102

  176 syntax-expression-wo-ii: syntax-expression "`!=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 163
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 103

  180 syntax-expression-wo-ii: syntax-expression "`&&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 164
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 104

  181 syntax-expression-wo-ii: syntax-expression "`||`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 165
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 105

  177 syntax-expression-wo-ii: syntax-expression "`..`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 166
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 106

  204 compound-expression: syntax-expression "`...`" .

    $default  reduce using rule 204 (compound-expression)


State 107

  166 syntax-expression-wo-ii: syntax-expression "`[`" . syntax-expression "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 167
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 108

  168 syntax-expression-wo-ii: syntax-expression "`.`" . identifier
  169                        | syntax-expression "`.`" . apostrophe-expression

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10

    identifier             go to state 168
    apostrophe-expression  go to state 169


State 109

  173 syntax-expression-wo-ii: syntax-expression "`+`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 170
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 110

  174 syntax-expression-wo-ii: syntax-expression "`-`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 171
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 111

  178 syntax-expression-wo-ii: syntax-expression "`&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 172
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 112

  179 syntax-expression-wo-ii: syntax-expression "`|`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 173
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 113

  194 call-expression: apostrophe-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 174
    compound-expression      go to state 52


State 114

  193 call-expression: call-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 175
    compound-expression      go to state 52


State 115

  195 call-expression: lambda-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 176
    compound-expression      go to state 52


State 116

  192 call-expression: CONTEXT_IDENTIFIER "`(`" pack-expression-opt . "`)`"

    "`)`"  shift, and go to state 177


State 117

  199 pack-expression-opt: pack-expression .
  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 122

    $default  reduce using rule 199 (pack-expression-opt)


State 118

  186 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE" .

    $default  reduce using rule 186 (apostrophe-expression)


State 119

  162 syntax-expression-wo-ii: "`(`" "`:`" syntax-expression . "`)`"
  166                        | syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`)`"          shift, and go to state 178
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 120

  201 pack-expression: identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 179
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 121

  163 syntax-expression-wo-ii: "`(`" pack-expression "`)`" .

    $default  reduce using rule 163 (syntax-expression-wo-ii)


State 122

  202 pack-expression: pack-expression "," . syntax-expression
  203                | pack-expression "," . identifier "`:`" syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 180
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 181
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 123

  164 syntax-expression-wo-ii: "`[`" expression-list "`]`" .

    $default  reduce using rule 164 (syntax-expression-wo-ii)


State 124

   73 expression-list: expression-list "," . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 182
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 125

  165 syntax-expression-wo-ii: "`[[`" expression-list "`]]`" .

    $default  reduce using rule 165 (syntax-expression-wo-ii)


State 126

   19 let-decl-start: "weak modifier" identifier .

    $default  reduce using rule 19 (let-decl-start)


State 127

   21 let-decl-start-with-opt-type: let-decl-start "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 190


State 128

   17 let-decl: let-decl-start-with-opt-type "`=`" . pack-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 191
    compound-expression      go to state 52


State 129

   10 statement: EXTERN VAR identifier . "`:`" type-expr

    "`:`"  shift, and go to state 192


State 130

   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 193


State 131

   11 statement: EXTERN "`fn`" fn-decl .

    $default  reduce using rule 11 (statement)


State 132

  189 new-expression: "`new`" qname "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 194
    qname                    go to state 40
    fn-start-decl            go to state 50
    argument-list-opt        go to state 195
    argument-list            go to state 196
    argument                 go to state 197
    argument-name            go to state 198
    syntax-expression        go to state 199
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 133

  190 new-expression: "`new`" apostrophe-expression "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 194
    qname                    go to state 40
    fn-start-decl            go to state 50
    argument-list-opt        go to state 200
    argument-list            go to state 196
    argument                 go to state 197
    argument-name            go to state 198
    syntax-expression        go to state 199
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 134

   29 braced-statements: "`{`" . infunction-statement-set "`}`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 201
    "`break`"            shift, and go to state 202
    "`return`"           shift, and go to state 203
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 204
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 22 (infunction-statement-any)

    infunction-statement-any           go to state 205
    finished-infunction-statement-any  go to state 206
    finished-statement                 go to state 207
    infunction-statement-set           go to state 208
    generic-statement                  go to state 209
    infunction-statement               go to state 210
    identifier                         go to state 39
    qname                              go to state 40
    fn-start-decl                      go to state 211
    syntax-expression                  go to state 42
    syntax-expression-wo-ii            go to state 43
    apostrophe-expression              go to state 44
    new-expression                     go to state 45
    call-expression                    go to state 46
    lambda-expression                  go to state 47
    compound-expression                go to state 48


State 135

   31 finished-statement: "`while`" syntax-expression "`;`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 212
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 136

   30 finished-statement: "`while`" syntax-expression braced-statements .

    $default  reduce using rule 30 (finished-statement)


State 137

   32 finished-statement: "`for`" syntax-expression "`in`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 213
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 138

   33 finished-statement: "`if`" syntax-expression braced-statements .
   34                   | "`if`" syntax-expression braced-statements . "`else`" braced-statements

    "`else`"  shift, and go to state 214

    $default  reduce using rule 33 (finished-statement)


State 139

   70 using-decl: qname "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 215
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 140

   71 using-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-list-opt         go to state 216
    parameter-list             go to state 155
    parameter-decl             go to state 156
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 141

   62 enum-decl: qname "`{`" . case-list-opt "`}`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 63 (case-list-opt)

    identifier     go to state 217
    case-list-opt  go to state 218
    case-list      go to state 219
    case-decl      go to state 220


State 142

   68 struct-decl: qname "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 221


State 143

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements
   69 struct-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-list-opt         go to state 222
    parameter-list             go to state 155
    parameter-decl             go to state 156
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 144

   36 finished-statement: STRUCT qname braced-statements .

    $default  reduce using rule 36 (finished-statement)


State 145

   54 qname: qname "`::`" identifier .

    $default  reduce using rule 54 (qname)


State 146

  191 call-expression: qname "`(`" pack-expression-opt . "`)`"

    "`)`"  shift, and go to state 223


State 147

   51 internal-identifier: CONTEXT_IDENTIFIER .

    $default  reduce using rule 51 (internal-identifier)


State 148

  103 parameter-decl: "`_`" . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 225


State 149

  105 parameter-decl: "`...`" . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 226


State 150

  100 parameter-decl: "`:`" . pattern-mod parameter-default-value-opt
  108               | "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 147
    "`@`"                 shift, and go to state 227
    "`_`"                 shift, and go to state 228
    "`...`"               shift, and go to state 229
    "`::`"                shift, and go to state 11
    "`{`"                 shift, and go to state 230
    "`~`"                 shift, and go to state 151
    "typename modifier"   shift, and go to state 231
    "constexpr modifier"  shift, and go to state 232
    "runctime modifier"   shift, and go to state 233

    identifier                 go to state 39
    internal-identifier        go to state 234
    qname                      go to state 235
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 236
    pattern-mod                go to state 237
    pattern-sfx                go to state 238
    pattern                    go to state 239
    concept-expression         go to state 240
    concept-expression-list    go to state 241


State 151

  110 constraint-expression-mod: "`~`" .
  111                          | "`~`" . "constexpr modifier"
  112                          | "`~`" . "runctime modifier"

    "constexpr modifier"  shift, and go to state 242
    "runctime modifier"   shift, and go to state 243

    $default  reduce using rule 110 (constraint-expression-mod)


State 152

   98 parameter-decl: identifier . internal-identifier-opt "`:`" pattern-mod parameter-default-value-opt
  101               | identifier . internal-identifier parameter-default-value-opt
  106               | identifier . internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt

    CONTEXT_IDENTIFIER  shift, and go to state 147

    $default  reduce using rule 94 (internal-identifier-opt)

    internal-identifier      go to state 244
    internal-identifier-opt  go to state 245


State 153

   99 parameter-decl: internal-identifier . "`:`" pattern-mod parameter-default-value-opt
  102               | internal-identifier . parameter-default-value-opt
  104               | internal-identifier . "`...`" parameter-default-value-opt
  107               | internal-identifier . "`:`" constraint-expression parameter-default-value-opt

    "`=`"    shift, and go to state 224
    "`...`"  shift, and go to state 246
    "`:`"    shift, and go to state 247

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 248


State 154

  196 lambda-expression: fn-start-decl "`(`" parameter-list-opt . "`)`" braced-statements
  197                  | fn-start-decl "`(`" parameter-list-opt . "`)`" "`->`" type-expr braced-statements

    "`)`"  shift, and go to state 249


State 155

   91 parameter-list-opt: parameter-list .
   93 parameter-list: parameter-list . "," parameter-decl

    ","  shift, and go to state 250

    $default  reduce using rule 91 (parameter-list-opt)


State 156

   92 parameter-list: parameter-decl .

    $default  reduce using rule 92 (parameter-list)


State 157

  113 constraint-expression: constraint-expression-mod . type-expr
  114                      | constraint-expression-mod . type-expr "`...`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 251


State 158

  109 parameter-decl: constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 252


State 159

   13 statement: fn-start-decl fn-name "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-list-opt         go to state 253
    parameter-list             go to state 155
    parameter-decl             go to state 156
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 160

   35 finished-statement: fn-start-decl fn-decl braced-statements .

    $default  reduce using rule 35 (finished-statement)


State 161

   44 generic-statement: syntax-expression "`=`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 44 (generic-statement)


State 162

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  175                        | syntax-expression "`==`" syntax-expression .
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 175 (syntax-expression-wo-ii)


State 163

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  176                        | syntax-expression "`!=`" syntax-expression .
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 176 (syntax-expression-wo-ii)


State 164

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  180                        | syntax-expression "`&&`" syntax-expression .
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 180 (syntax-expression-wo-ii)


State 165

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  181                        | syntax-expression "`||`" syntax-expression .
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 181 (syntax-expression-wo-ii)


State 166

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  177                        | syntax-expression "`..`" syntax-expression .
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 177 (syntax-expression-wo-ii)


State 167

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  166                        | syntax-expression "`[`" syntax-expression . "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`]`"          shift, and go to state 254
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 168

  168 syntax-expression-wo-ii: syntax-expression "`.`" identifier .

    $default  reduce using rule 168 (syntax-expression-wo-ii)


State 169

  169 syntax-expression-wo-ii: syntax-expression "`.`" apostrophe-expression .

    $default  reduce using rule 169 (syntax-expression-wo-ii)


State 170

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  173                        | syntax-expression "`+`" syntax-expression .
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 173 (syntax-expression-wo-ii)


State 171

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  174                        | syntax-expression "`-`" syntax-expression .
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 174 (syntax-expression-wo-ii)


State 172

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  178                        | syntax-expression "`&`" syntax-expression .
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 178 (syntax-expression-wo-ii)


State 173

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  179                        | syntax-expression "`|`" syntax-expression .
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111

    $default  reduce using rule 179 (syntax-expression-wo-ii)


State 174

  194 call-expression: apostrophe-expression "`(`" pack-expression . "`)`"
  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 255
    ","    shift, and go to state 122


State 175

  193 call-expression: call-expression "`(`" pack-expression . "`)`"
  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 256
    ","    shift, and go to state 122


State 176

  195 call-expression: lambda-expression "`(`" pack-expression . "`)`"
  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 257
    ","    shift, and go to state 122


State 177

  192 call-expression: CONTEXT_IDENTIFIER "`(`" pack-expression-opt "`)`" .

    $default  reduce using rule 192 (call-expression)


State 178

  162 syntax-expression-wo-ii: "`(`" "`:`" syntax-expression "`)`" .

    $default  reduce using rule 162 (syntax-expression-wo-ii)


State 179

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  201 pack-expression: identifier "`:`" syntax-expression .
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 201 (pack-expression)


State 180

   53 qname: identifier .
  203 pack-expression: pack-expression "," identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 258

    $default  reduce using rule 53 (qname)


State 181

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  202 pack-expression: pack-expression "," syntax-expression .
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 202 (pack-expression)


State 182

   73 expression-list: expression-list "," syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 73 (expression-list)


State 183

  192 call-expression: CONTEXT_IDENTIFIER . "`(`" pack-expression-opt "`)`"
  208 type-expr: CONTEXT_IDENTIFIER .

    "`(`"  shift, and go to state 49

    $default  reduce using rule 208 (type-expr)


State 184

  210 type-expr: "`(`" . "`)`"
  211          | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`)`"                shift, and go to state 259
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 56
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 260
    compound-expression      go to state 52


State 185

  209 type-expr: "`[`" . type-expr "`]`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 261


State 186

   54 qname: qname . "`::`" identifier
  191 call-expression: qname . "`(`" pack-expression-opt "`)`"
  206 type-expr: qname .

    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 93

    $default  reduce using rule 206 (type-expr)


State 187

  194 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 113


State 188

  193 call-expression: call-expression . "`(`" pack-expression "`)`"
  207 type-expr: call-expression .

    "`(`"  shift, and go to state 114

    $default  reduce using rule 207 (type-expr)


State 189

  195 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 115


State 190

   21 let-decl-start-with-opt-type: let-decl-start "`:`" type-expr .
  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 262
    "`[`"   shift, and go to state 263
    "`|`"   shift, and go to state 264

    $default  reduce using rule 21 (let-decl-start-with-opt-type)


State 191

   17 let-decl: let-decl-start-with-opt-type "`=`" pack-expression .
  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 122

    $default  reduce using rule 17 (let-decl)


State 192

   10 statement: EXTERN VAR identifier "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 265


State 193

   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-list-opt         go to state 266
    parameter-list             go to state 155
    parameter-decl             go to state 156
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 194

   53 qname: identifier .
   80 argument-name: identifier . "`=`"
   81              | identifier . "`:`"

    "`=`"  shift, and go to state 267
    "`:`"  shift, and go to state 268

    $default  reduce using rule 53 (qname)


State 195

  189 new-expression: "`new`" qname "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 269


State 196

   75 argument-list-opt: argument-list .
   77 argument-list: argument-list . "," argument

    ","  shift, and go to state 270

    $default  reduce using rule 75 (argument-list-opt)


State 197

   76 argument-list: argument .

    $default  reduce using rule 76 (argument-list)


State 198

   78 argument: argument-name . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 271
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 199

   79 argument: syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 79 (argument)


State 200

  190 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 272


State 201

   47 infunction-statement: "`continue`" .

    $default  reduce using rule 47 (infunction-statement)


State 202

   46 infunction-statement: "`break`" .

    $default  reduce using rule 46 (infunction-statement)


State 203

   48 infunction-statement: "`return`" .
   49                     | "`return`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 48 (infunction-statement)

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 273
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 204

   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 274


State 205

   28 finished-infunction-statement-any: infunction-statement-any . "`;`"
   39 infunction-statement-set: infunction-statement-any .

    "`;`"  shift, and go to state 275

    $default  reduce using rule 39 (infunction-statement-set)


State 206

   24 infunction-statement-any: finished-infunction-statement-any . infunction-statement
   26 finished-infunction-statement-any: finished-infunction-statement-any . "`;`"
   27                                  | finished-infunction-statement-any . finished-statement
   40 infunction-statement-set: finished-infunction-statement-any .

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 276
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 201
    "`break`"            shift, and go to state 202
    "`return`"           shift, and go to state 203
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 204
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 40 (infunction-statement-set)

    finished-statement       go to state 277
    generic-statement        go to state 209
    infunction-statement     go to state 278
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 211
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 207

   25 finished-infunction-statement-any: finished-statement .

    $default  reduce using rule 25 (finished-infunction-statement-any)


State 208

   29 braced-statements: "`{`" infunction-statement-set . "`}`"

    "`}`"  shift, and go to state 279


State 209

   45 infunction-statement: generic-statement .

    $default  reduce using rule 45 (infunction-statement)


State 210

   23 infunction-statement-any: infunction-statement .

    $default  reduce using rule 23 (infunction-statement-any)


State 211

   35 finished-statement: fn-start-decl . fn-decl braced-statements
  196 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  197                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 94
    "`new`"     shift, and go to state 95

    identifier  go to state 39
    qname       go to state 96
    fn-name     go to state 130
    fn-decl     go to state 98


State 212

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression . braced-statements
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 134
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 280


State 213

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression . braced-statements
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 134
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 281


State 214

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" . braced-statements

    "`{`"  shift, and go to state 134

    braced-statements  go to state 282


State 215

   70 using-decl: qname "`=>`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 70 (using-decl)


State 216

   71 using-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression

    "`)`"  shift, and go to state 283


State 217

   67 case-decl: identifier .

    $default  reduce using rule 67 (case-decl)


State 218

   62 enum-decl: qname "`{`" case-list-opt . "`}`"

    "`}`"  shift, and go to state 284


State 219

   64 case-list-opt: case-list .
   66 case-list: case-list . "," case-decl

    ","  shift, and go to state 285

    $default  reduce using rule 64 (case-list-opt)


State 220

   65 case-list: case-decl .

    $default  reduce using rule 65 (case-list)


State 221

   68 struct-decl: qname "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 286
    field-list-opt  go to state 287
    field-list      go to state 288
    field           go to state 289


State 222

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`)`"  shift, and go to state 290


State 223

  191 call-expression: qname "`(`" pack-expression-opt "`)`" .

    $default  reduce using rule 191 (call-expression)


State 224

   97 parameter-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 291
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 225

  103 parameter-decl: "`_`" parameter-default-value-opt .

    $default  reduce using rule 103 (parameter-decl)


State 226

  105 parameter-decl: "`...`" parameter-default-value-opt .

    $default  reduce using rule 105 (parameter-decl)


State 227

  143 concept-expression: "`@`" . qname

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 292


State 228

  138 pattern: "`_`" . concept-expression-list-opt
  139        | "`_`" . subpatterns concept-expression-list-opt

    "`@`"  shift, and go to state 227
    "`(`"  shift, and go to state 293

    $default  reduce using rule 144 (concept-expression-list-opt)

    subpatterns                  go to state 294
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 295
    concept-expression-list      go to state 296


State 229

  134 pattern-sfx: "`...`" .

    $default  reduce using rule 134 (pattern-sfx)


State 230

  140 pattern: "`{`" . syntax-expression "`}`" concept-expression-list-opt
  141        | "`{`" . syntax-expression "`}`" subpatterns concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 297
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 231

  131 pattern-mod: "typename modifier" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 228
    "`...`"             shift, and go to state 229
    "`::`"              shift, and go to state 11
    "`{`"               shift, and go to state 230

    identifier               go to state 39
    internal-identifier      go to state 234
    qname                    go to state 235
    pattern-sfx              go to state 298
    pattern                  go to state 239
    concept-expression       go to state 240
    concept-expression-list  go to state 241


State 232

  129 pattern-mod: "constexpr modifier" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 228
    "`...`"             shift, and go to state 229
    "`::`"              shift, and go to state 11
    "`{`"               shift, and go to state 230

    identifier               go to state 39
    internal-identifier      go to state 234
    qname                    go to state 235
    pattern-sfx              go to state 299
    pattern                  go to state 239
    concept-expression       go to state 240
    concept-expression-list  go to state 241


State 233

  130 pattern-mod: "runctime modifier" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 228
    "`...`"             shift, and go to state 229
    "`::`"              shift, and go to state 11
    "`{`"               shift, and go to state 230

    identifier               go to state 39
    internal-identifier      go to state 234
    qname                    go to state 235
    pattern-sfx              go to state 300
    pattern                  go to state 239
    concept-expression       go to state 240
    concept-expression-list  go to state 241


State 234

  137 pattern: internal-identifier . concept-expression-list-opt

    "`@`"  shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    concept-expression           go to state 240
    concept-expression-list-opt  go to state 301
    concept-expression-list      go to state 296


State 235

   54 qname: qname . "`::`" identifier
  135 pattern: qname .
  136        | qname . subpatterns concept-expression-list-opt

    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 293

    $default  reduce using rule 135 (pattern)

    subpatterns  go to state 302


State 236

  108 parameter-decl: "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 303


State 237

  100 parameter-decl: "`:`" pattern-mod . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 304


State 238

  128 pattern-mod: pattern-sfx .

    $default  reduce using rule 128 (pattern-mod)


State 239

  132 pattern-sfx: pattern .
  133            | pattern . "`...`"

    "`...`"  shift, and go to state 305

    $default  reduce using rule 132 (pattern-sfx)


State 240

  146 concept-expression-list: concept-expression .

    $default  reduce using rule 146 (concept-expression-list)


State 241

  142 pattern: concept-expression-list .
  147 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 227

    $default  reduce using rule 142 (pattern)

    concept-expression  go to state 306


State 242

  111 constraint-expression-mod: "`~`" "constexpr modifier" .

    $default  reduce using rule 111 (constraint-expression-mod)


State 243

  112 constraint-expression-mod: "`~`" "runctime modifier" .

    $default  reduce using rule 112 (constraint-expression-mod)


State 244

   95 internal-identifier-opt: internal-identifier .
  101 parameter-decl: identifier internal-identifier . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    "`:`"     reduce using rule 95 (internal-identifier-opt)
    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 307


State 245

   98 parameter-decl: identifier internal-identifier-opt . "`:`" pattern-mod parameter-default-value-opt
  106               | identifier internal-identifier-opt . "`:`" constraint-expression parameter-default-value-opt

    "`:`"  shift, and go to state 308


State 246

  104 parameter-decl: internal-identifier "`...`" . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 309


State 247

   99 parameter-decl: internal-identifier "`:`" . pattern-mod parameter-default-value-opt
  107               | internal-identifier "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 147
    "`@`"                 shift, and go to state 227
    "`_`"                 shift, and go to state 228
    "`...`"               shift, and go to state 229
    "`::`"                shift, and go to state 11
    "`{`"                 shift, and go to state 230
    "`~`"                 shift, and go to state 151
    "typename modifier"   shift, and go to state 231
    "constexpr modifier"  shift, and go to state 232
    "runctime modifier"   shift, and go to state 233

    identifier                 go to state 39
    internal-identifier        go to state 234
    qname                      go to state 235
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 310
    pattern-mod                go to state 311
    pattern-sfx                go to state 238
    pattern                    go to state 239
    concept-expression         go to state 240
    concept-expression-list    go to state 241


State 248

  102 parameter-decl: internal-identifier parameter-default-value-opt .

    $default  reduce using rule 102 (parameter-decl)


State 249

  196 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" . braced-statements
  197                  | fn-start-decl "`(`" parameter-list-opt "`)`" . "`->`" type-expr braced-statements

    "`->`"  shift, and go to state 312
    "`{`"   shift, and go to state 134

    braced-statements  go to state 313


State 250

   93 parameter-list: parameter-list "," . parameter-decl

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-decl             go to state 314
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 251

  113 constraint-expression: constraint-expression-mod type-expr .
  114                      | constraint-expression-mod type-expr . "`...`"
  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`->`"   shift, and go to state 262
    "`...`"  shift, and go to state 315
    "`[`"    shift, and go to state 263
    "`|`"    shift, and go to state 264

    $default  reduce using rule 113 (constraint-expression)


State 252

  109 parameter-decl: constraint-expression parameter-default-value-opt .

    $default  reduce using rule 109 (parameter-decl)


State 253

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 316


State 254

  166 syntax-expression-wo-ii: syntax-expression "`[`" syntax-expression "`]`" .

    $default  reduce using rule 166 (syntax-expression-wo-ii)


State 255

  194 call-expression: apostrophe-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 194 (call-expression)


State 256

  193 call-expression: call-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 193 (call-expression)


State 257

  195 call-expression: lambda-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 195 (call-expression)


State 258

  203 pack-expression: pack-expression "," identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 317
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 259

  210 type-expr: "`(`" "`)`" .

    $default  reduce using rule 210 (type-expr)


State 260

  202 pack-expression: pack-expression . "," syntax-expression
  203                | pack-expression . "," identifier "`:`" syntax-expression
  211 type-expr: "`(`" pack-expression . "`)`"

    "`)`"  shift, and go to state 318
    ","    shift, and go to state 122


State 261

  209 type-expr: "`[`" type-expr . "`]`"
  212          | type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 262
    "`[`"   shift, and go to state 263
    "`]`"   shift, and go to state 319
    "`|`"   shift, and go to state 264


State 262

  214 type-expr: type-expr "`->`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 320


State 263

  212 type-expr: type-expr "`[`" . syntax-expression "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 321
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 264

  213 type-expr: type-expr "`|`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 322


State 265

   10 statement: EXTERN VAR identifier "`:`" type-expr .
  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 262
    "`[`"   shift, and go to state 263
    "`|`"   shift, and go to state 264

    $default  reduce using rule 10 (statement)


State 266

   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 323


State 267

   80 argument-name: identifier "`=`" .

    $default  reduce using rule 80 (argument-name)


State 268

   81 argument-name: identifier "`:`" .

    $default  reduce using rule 81 (argument-name)


State 269

  189 new-expression: "`new`" qname "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 189 (new-expression)


State 270

   77 argument-list: argument-list "," . argument

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 194
    qname                    go to state 40
    fn-start-decl            go to state 50
    argument                 go to state 324
    argument-name            go to state 198
    syntax-expression        go to state 199
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 271

   78 argument: argument-name syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 78 (argument)


State 272

  190 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 190 (new-expression)


State 273

   49 infunction-statement: "`return`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 49 (infunction-statement)


State 274

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier

    "`::`"  shift, and go to state 92
    "`(`"   shift, and go to state 325
    "`{`"   shift, and go to state 134

    braced-statements  go to state 144


State 275

   28 finished-infunction-statement-any: infunction-statement-any "`;`" .

    $default  reduce using rule 28 (finished-infunction-statement-any)


State 276

   26 finished-infunction-statement-any: finished-infunction-statement-any "`;`" .

    $default  reduce using rule 26 (finished-infunction-statement-any)


State 277

   27 finished-infunction-statement-any: finished-infunction-statement-any finished-statement .

    $default  reduce using rule 27 (finished-infunction-statement-any)


State 278

   24 infunction-statement-any: finished-infunction-statement-any infunction-statement .

    $default  reduce using rule 24 (infunction-statement-any)


State 279

   29 braced-statements: "`{`" infunction-statement-set "`}`" .

    $default  reduce using rule 29 (braced-statements)


State 280

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression braced-statements .

    $default  reduce using rule 31 (finished-statement)


State 281

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression braced-statements .

    $default  reduce using rule 32 (finished-statement)


State 282

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" braced-statements .

    $default  reduce using rule 34 (finished-statement)


State 283

   71 using-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression

    "`=>`"  shift, and go to state 326


State 284

   62 enum-decl: qname "`{`" case-list-opt "`}`" .

    $default  reduce using rule 62 (enum-decl)


State 285

   66 case-list: case-list "," . case-decl

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 217
    case-decl   go to state 327


State 286

   88 field: identifier . "`:`" type-expr field-default-value-opt
   89      | identifier . "`=>`" syntax-expression

    "`=>`"  shift, and go to state 328
    "`:`"   shift, and go to state 329


State 287

   68 struct-decl: qname "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 330


State 288

   83 field-list-opt: field-list .
   85 field-list: field-list . "," field

    ","  shift, and go to state 331

    $default  reduce using rule 83 (field-list-opt)


State 289

   84 field-list: field .

    $default  reduce using rule 84 (field-list)


State 290

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 332
    "`{`"   shift, and go to state 134

    braced-statements  go to state 333


State 291

   97 parameter-default-value-opt: "`=`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 97 (parameter-default-value-opt)


State 292

   54 qname: qname . "`::`" identifier
  143 concept-expression: "`@`" qname .

    "`::`"  shift, and go to state 92

    $default  reduce using rule 143 (concept-expression)


State 293

  115 subpatterns: "`(`" . pattern-list "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`=`"               shift, and go to state 334
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 335
    "`?`"               shift, and go to state 336

    $default  reduce using rule 144 (concept-expression-list-opt)

    identifier                   go to state 337
    internal-identifier          go to state 338
    pattern-list                 go to state 339
    pattern-field-sfx            go to state 340
    pattern-field                go to state 341
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 342
    concept-expression-list      go to state 296


State 294

  139 pattern: "`_`" subpatterns . concept-expression-list-opt

    "`@`"  shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    concept-expression           go to state 240
    concept-expression-list-opt  go to state 343
    concept-expression-list      go to state 296


State 295

  138 pattern: "`_`" concept-expression-list-opt .

    $default  reduce using rule 138 (pattern)


State 296

  145 concept-expression-list-opt: concept-expression-list .
  147 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 227

    $default  reduce using rule 145 (concept-expression-list-opt)

    concept-expression  go to state 306


State 297

  140 pattern: "`{`" syntax-expression . "`}`" concept-expression-list-opt
  141        | "`{`" syntax-expression . "`}`" subpatterns concept-expression-list-opt
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`}`"          shift, and go to state 344
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 298

  131 pattern-mod: "typename modifier" pattern-sfx .

    $default  reduce using rule 131 (pattern-mod)


State 299

  129 pattern-mod: "constexpr modifier" pattern-sfx .

    $default  reduce using rule 129 (pattern-mod)


State 300

  130 pattern-mod: "runctime modifier" pattern-sfx .

    $default  reduce using rule 130 (pattern-mod)


State 301

  137 pattern: internal-identifier concept-expression-list-opt .

    $default  reduce using rule 137 (pattern)


State 302

  136 pattern: qname subpatterns . concept-expression-list-opt

    "`@`"  shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    concept-expression           go to state 240
    concept-expression-list-opt  go to state 345
    concept-expression-list      go to state 296


State 303

  108 parameter-decl: "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 108 (parameter-decl)


State 304

  100 parameter-decl: "`:`" pattern-mod parameter-default-value-opt .

    $default  reduce using rule 100 (parameter-decl)


State 305

  133 pattern-sfx: pattern "`...`" .

    $default  reduce using rule 133 (pattern-sfx)


State 306

  147 concept-expression-list: concept-expression-list concept-expression .

    $default  reduce using rule 147 (concept-expression-list)


State 307

  101 parameter-decl: identifier internal-identifier parameter-default-value-opt .

    $default  reduce using rule 101 (parameter-decl)


State 308

   98 parameter-decl: identifier internal-identifier-opt "`:`" . pattern-mod parameter-default-value-opt
  106               | identifier internal-identifier-opt "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 147
    "`@`"                 shift, and go to state 227
    "`_`"                 shift, and go to state 228
    "`...`"               shift, and go to state 229
    "`::`"                shift, and go to state 11
    "`{`"                 shift, and go to state 230
    "`~`"                 shift, and go to state 151
    "typename modifier"   shift, and go to state 231
    "constexpr modifier"  shift, and go to state 232
    "runctime modifier"   shift, and go to state 233

    identifier                 go to state 39
    internal-identifier        go to state 234
    qname                      go to state 235
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 346
    pattern-mod                go to state 347
    pattern-sfx                go to state 238
    pattern                    go to state 239
    concept-expression         go to state 240
    concept-expression-list    go to state 241


State 309

  104 parameter-decl: internal-identifier "`...`" parameter-default-value-opt .

    $default  reduce using rule 104 (parameter-decl)


State 310

  107 parameter-decl: internal-identifier "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 348


State 311

   99 parameter-decl: internal-identifier "`:`" pattern-mod . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 349


State 312

  197 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" . type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 350


State 313

  196 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 196 (lambda-expression)


State 314

   93 parameter-list: parameter-list "," parameter-decl .

    $default  reduce using rule 93 (parameter-list)


State 315

  114 constraint-expression: constraint-expression-mod type-expr "`...`" .

    $default  reduce using rule 114 (constraint-expression)


State 316

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 351
    "`=>`"  shift, and go to state 352
    "`~>`"  shift, and go to state 353

    $default  reduce using rule 59 (fn-decl)


State 317

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  203 pack-expression: pack-expression "," identifier "`:`" syntax-expression .
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 203 (pack-expression)


State 318

  211 type-expr: "`(`" pack-expression "`)`" .

    $default  reduce using rule 211 (type-expr)


State 319

  209 type-expr: "`[`" type-expr "`]`" .

    $default  reduce using rule 209 (type-expr)


State 320

  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr
  214          | type-expr "`->`" type-expr .

    $default  reduce using rule 214 (type-expr)


State 321

  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"
  212 type-expr: type-expr "`[`" syntax-expression . "`]`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`]`"          shift, and go to state 354
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 322

  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  213          | type-expr "`|`" type-expr .
  214          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 262
    "`[`"   shift, and go to state 263

    $default  reduce using rule 213 (type-expr)


State 323

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 351
    "`~>`"  shift, and go to state 353

    $default  reduce using rule 59 (fn-decl)


State 324

   77 argument-list: argument-list "," argument .

    $default  reduce using rule 77 (argument-list)


State 325

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`_`"               shift, and go to state 148
    "`...`"             shift, and go to state 149
    "`:`"               shift, and go to state 150
    "`~`"               shift, and go to state 151

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 152
    internal-identifier        go to state 153
    parameter-list-opt         go to state 355
    parameter-list             go to state 155
    parameter-decl             go to state 156
    constraint-expression-mod  go to state 157
    constraint-expression      go to state 158


State 326

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 356
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 327

   66 case-list: case-list "," case-decl .

    $default  reduce using rule 66 (case-list)


State 328

   89 field: identifier "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 357
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 329

   88 field: identifier "`:`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 358


State 330

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 68 (struct-decl)


State 331

   85 field-list: field-list "," . field

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 286
    field       go to state 359


State 332

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 360


State 333

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 37 (finished-statement)


State 334

  122 pattern-field-sfx: "`=`" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 228
    "`...`"             shift, and go to state 229
    "`::`"              shift, and go to state 11
    "`{`"               shift, and go to state 230

    identifier               go to state 39
    internal-identifier      go to state 234
    qname                    go to state 235
    pattern-sfx              go to state 361
    pattern                  go to state 239
    concept-expression       go to state 240
    concept-expression-list  go to state 241


State 335

  127 pattern-field: "`_`" . pattern-field-sfx

    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`=`"               shift, and go to state 334
    "`@`"               shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    internal-identifier          go to state 338
    pattern-field-sfx            go to state 362
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 342
    concept-expression-list      go to state 296


State 336

  125 pattern-field: "`?`" . internal-identifier pattern-field-sfx

    CONTEXT_IDENTIFIER  shift, and go to state 147

    internal-identifier  go to state 363


State 337

  124 pattern-field: identifier . pattern-field-sfx

    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`=`"               shift, and go to state 334
    "`@`"               shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    internal-identifier          go to state 338
    pattern-field-sfx            go to state 364
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 342
    concept-expression-list      go to state 296


State 338

  120 pattern-field-sfx: internal-identifier . concept-expression-list-opt
  121                  | internal-identifier . concept-expression-list-opt "`...`"
  123                  | internal-identifier . "`=`" pattern-sfx

    "`=`"  shift, and go to state 365
    "`@`"  shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    concept-expression           go to state 240
    concept-expression-list-opt  go to state 366
    concept-expression-list      go to state 296


State 339

  115 subpatterns: "`(`" pattern-list . "`)`"
  117 pattern-list: pattern-list . "," pattern-field

    "`)`"  shift, and go to state 367
    ","    shift, and go to state 368


State 340

  126 pattern-field: pattern-field-sfx .

    $default  reduce using rule 126 (pattern-field)


State 341

  116 pattern-list: pattern-field .

    $default  reduce using rule 116 (pattern-list)


State 342

  118 pattern-field-sfx: concept-expression-list-opt .
  119                  | concept-expression-list-opt . "`...`"

    "`...`"  shift, and go to state 369

    $default  reduce using rule 118 (pattern-field-sfx)


State 343

  139 pattern: "`_`" subpatterns concept-expression-list-opt .

    $default  reduce using rule 139 (pattern)


State 344

  140 pattern: "`{`" syntax-expression "`}`" . concept-expression-list-opt
  141        | "`{`" syntax-expression "`}`" . subpatterns concept-expression-list-opt

    "`@`"  shift, and go to state 227
    "`(`"  shift, and go to state 293

    $default  reduce using rule 144 (concept-expression-list-opt)

    subpatterns                  go to state 370
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 371
    concept-expression-list      go to state 296


State 345

  136 pattern: qname subpatterns concept-expression-list-opt .

    $default  reduce using rule 136 (pattern)


State 346

  106 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 372


State 347

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern-mod . parameter-default-value-opt

    "`=`"  shift, and go to state 224

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 373


State 348

  107 parameter-decl: internal-identifier "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 107 (parameter-decl)


State 349

   99 parameter-decl: internal-identifier "`:`" pattern-mod parameter-default-value-opt .

    $default  reduce using rule 99 (parameter-decl)


State 350

  197 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr . braced-statements
  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 262
    "`{`"   shift, and go to state 134
    "`[`"   shift, and go to state 263
    "`|`"   shift, and go to state 264

    braced-statements  go to state 374


State 351

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 228
    "`::`"              shift, and go to state 11
    "`{`"               shift, and go to state 230

    identifier               go to state 39
    internal-identifier      go to state 234
    qname                    go to state 235
    pattern                  go to state 375
    concept-expression       go to state 240
    concept-expression-list  go to state 241


State 352

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 376
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 353

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 183
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 184
    "`[`"               shift, and go to state 185
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 186
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 187
    call-expression        go to state 188
    lambda-expression      go to state 189
    type-expr              go to state 377


State 354

  212 type-expr: type-expr "`[`" syntax-expression "`]`" .

    $default  reduce using rule 212 (type-expr)


State 355

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements

    "`)`"  shift, and go to state 378


State 356

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 71 (using-decl)


State 357

   89 field: identifier "`=>`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 89 (field)


State 358

   88 field: identifier "`:`" type-expr . field-default-value-opt
  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 379
    "`->`"  shift, and go to state 262
    "`[`"   shift, and go to state 263
    "`|`"   shift, and go to state 264

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 380


State 359

   85 field-list: field-list "," field .

    $default  reduce using rule 85 (field-list)


State 360

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 286
    field-list-opt  go to state 381
    field-list      go to state 288
    field           go to state 289


State 361

  122 pattern-field-sfx: "`=`" pattern-sfx .

    $default  reduce using rule 122 (pattern-field-sfx)


State 362

  127 pattern-field: "`_`" pattern-field-sfx .

    $default  reduce using rule 127 (pattern-field)


State 363

  125 pattern-field: "`?`" internal-identifier . pattern-field-sfx

    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`=`"               shift, and go to state 334
    "`@`"               shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    internal-identifier          go to state 338
    pattern-field-sfx            go to state 382
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 342
    concept-expression-list      go to state 296


State 364

  124 pattern-field: identifier pattern-field-sfx .

    $default  reduce using rule 124 (pattern-field)


State 365

  123 pattern-field-sfx: internal-identifier "`=`" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 228
    "`...`"             shift, and go to state 229
    "`::`"              shift, and go to state 11
    "`{`"               shift, and go to state 230

    identifier               go to state 39
    internal-identifier      go to state 234
    qname                    go to state 235
    pattern-sfx              go to state 383
    pattern                  go to state 239
    concept-expression       go to state 240
    concept-expression-list  go to state 241


State 366

  120 pattern-field-sfx: internal-identifier concept-expression-list-opt .
  121                  | internal-identifier concept-expression-list-opt . "`...`"

    "`...`"  shift, and go to state 384

    $default  reduce using rule 120 (pattern-field-sfx)


State 367

  115 subpatterns: "`(`" pattern-list "`)`" .

    $default  reduce using rule 115 (subpatterns)


State 368

  117 pattern-list: pattern-list "," . pattern-field

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 147
    "`=`"               shift, and go to state 334
    "`@`"               shift, and go to state 227
    "`_`"               shift, and go to state 335
    "`?`"               shift, and go to state 336

    $default  reduce using rule 144 (concept-expression-list-opt)

    identifier                   go to state 337
    internal-identifier          go to state 338
    pattern-field-sfx            go to state 340
    pattern-field                go to state 385
    concept-expression           go to state 240
    concept-expression-list-opt  go to state 342
    concept-expression-list      go to state 296


State 369

  119 pattern-field-sfx: concept-expression-list-opt "`...`" .

    $default  reduce using rule 119 (pattern-field-sfx)


State 370

  141 pattern: "`{`" syntax-expression "`}`" subpatterns . concept-expression-list-opt

    "`@`"  shift, and go to state 227

    $default  reduce using rule 144 (concept-expression-list-opt)

    concept-expression           go to state 240
    concept-expression-list-opt  go to state 386
    concept-expression-list      go to state 296


State 371

  140 pattern: "`{`" syntax-expression "`}`" concept-expression-list-opt .

    $default  reduce using rule 140 (pattern)


State 372

  106 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 106 (parameter-decl)


State 373

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern-mod parameter-default-value-opt .

    $default  reduce using rule 98 (parameter-decl)


State 374

  197 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements .

    $default  reduce using rule 197 (lambda-expression)


State 375

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern .

    $default  reduce using rule 61 (fn-decl)


State 376

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 13 (statement)


State 377

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr .
  212 type-expr: type-expr . "`[`" syntax-expression "`]`"
  213          | type-expr . "`|`" type-expr
  214          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 262
    "`[`"   shift, and go to state 263
    "`|`"   shift, and go to state 264

    $default  reduce using rule 60 (fn-decl)


State 378

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements

    "`{`"  shift, and go to state 134

    braced-statements  go to state 333


State 379

   87 field-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 50
    syntax-expression        go to state 387
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 52


State 380

   88 field: identifier "`:`" type-expr field-default-value-opt .

    $default  reduce using rule 88 (field)


State 381

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 388


State 382

  125 pattern-field: "`?`" internal-identifier pattern-field-sfx .

    $default  reduce using rule 125 (pattern-field)


State 383

  123 pattern-field-sfx: internal-identifier "`=`" pattern-sfx .

    $default  reduce using rule 123 (pattern-field-sfx)


State 384

  121 pattern-field-sfx: internal-identifier concept-expression-list-opt "`...`" .

    $default  reduce using rule 121 (pattern-field-sfx)


State 385

  117 pattern-list: pattern-list "," pattern-field .

    $default  reduce using rule 117 (pattern-list)


State 386

  141 pattern: "`{`" syntax-expression "`}`" subpatterns concept-expression-list-opt .

    $default  reduce using rule 141 (pattern)


State 387

   87 field-default-value-opt: "`=`" syntax-expression .
  166 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  168                        | syntax-expression . "`.`" identifier
  169                        | syntax-expression . "`.`" apostrophe-expression
  170                        | syntax-expression . INTEGER_INDEX
  173                        | syntax-expression . "`+`" syntax-expression
  174                        | syntax-expression . "`-`" syntax-expression
  175                        | syntax-expression . "`==`" syntax-expression
  176                        | syntax-expression . "`!=`" syntax-expression
  177                        | syntax-expression . "`..`" syntax-expression
  178                        | syntax-expression . "`&`" syntax-expression
  179                        | syntax-expression . "`|`" syntax-expression
  180                        | syntax-expression . "`&&`" syntax-expression
  181                        | syntax-expression . "`||`" syntax-expression
  204 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 99
    "`==`"         shift, and go to state 101
    "`!=`"         shift, and go to state 102
    "`&&`"         shift, and go to state 103
    "`||`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 87 (field-default-value-opt)


State 388

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 69 (struct-decl)
