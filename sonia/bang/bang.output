Terminals unused in grammar

    COMMENT_BEGIN
    COMMENT_END
    OPERATOR_TERM
    "`->*`"
    "`.*`"
    "`++`"
    "`--`"
    "`<<`"
    "`>>`"
    "`<=`"
    "`>=`"
    "`+=`"
    "`-=`"
    "`*=`"
    "`/=`"
    "`%=`"
    "`<<=`"
    "`>>=`"
    "`&=`"
    "`|=`"
    "`^=`"
    "`<`"
    "`>`"
    "`/`"
    "`%`"
    "`^`"
    "`$`"
    "`?`"
    "`#`"
    AUTO
    THROW
    SIZEOF
    LOWEST
    EXTENDS


Grammar

    0 $accept: begin "end of file"

    1 begin: statement_any "end of file"
    2      | finished-statement-any "end of file"

    3 statement_any: %empty
    4              | statement
    5              | finished-statement-any statement

    6 finished-statement-any: finished-statement
    7                       | finished-statement-any "`;`"
    8                       | finished-statement-any finished-statement
    9                       | statement_any "`;`"

   10 statement: EXTERN VAR identifier "`:`" type-expr
   11          | EXTERN "`fn`" fn-decl
   12          | INCLUDE STRING
   13          | fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   14          | generic-statement
   15          | STRUCT struct-decl

   16 let-decl: let-decl-start-with-opt-type
   17         | let-decl-start-with-opt-type "`=`" pack-expression

   18 let-decl-start: identifier
   19               | "weak modifier" identifier

   20 let-decl-start-with-opt-type: let-decl-start
   21                             | let-decl-start "`:`" type-expr

   22 infunction-statement-any: %empty
   23                         | infunction-statement
   24                         | finished-infunction-statement-any infunction-statement

   25 finished-infunction-statement-any: finished-statement
   26                                  | finished-infunction-statement-any "`;`"
   27                                  | finished-infunction-statement-any finished-statement
   28                                  | infunction-statement-any "`;`"

   29 braced-statements: "`{`" infunction-statement-set "`}`"

   30 finished-statement: "`while`" syntax-expression braced-statements
   31                   | "`while`" syntax-expression "`;`" syntax-expression braced-statements
   32                   | "`for`" syntax-expression "`in`" syntax-expression braced-statements
   33                   | "`if`" syntax-expression braced-statements
   34                   | "`if`" syntax-expression braced-statements "`else`" braced-statements
   35                   | fn-start-decl fn-decl braced-statements
   36                   | STRUCT qname braced-statements
   37                   | STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements
   38                   | ENUM enum-decl

   39 infunction-statement-set: infunction-statement-any
   40                         | finished-infunction-statement-any

   41 generic-statement: LET let-decl
   42                  | USING using-decl
   43                  | compound-expression
   44                  | syntax-expression "`=`" syntax-expression

   45 infunction-statement: generic-statement
   46                     | "`break`"
   47                     | "`continue`"
   48                     | "`return`"
   49                     | "`return`" syntax-expression

   50 identifier: IDENTIFIER

   51 internal-identifier: CONTEXT_IDENTIFIER

   52 qname: "`::`" identifier
   53      | identifier
   54      | qname "`::`" identifier

   55 fn-start-decl: "`fn`"
   56              | INLINE "`fn`"

   57 fn-name: qname
   58        | "`new`"

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`"
   60        | fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern

   62 enum-decl: qname "`{`" case-list-opt "`}`"

   63 case-list-opt: %empty
   64              | case-list

   65 case-list: case-decl
   66          | case-list "," case-decl

   67 case-decl: identifier

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`"
   69            | qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

   70 using-decl: qname "`=>`" syntax-expression
   71           | qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

   72 expression-list: syntax-expression
   73                | expression-list "," syntax-expression

   74 argument-list-opt: %empty
   75                  | argument-list

   76 argument-list: argument
   77              | argument-list "," argument

   78 argument: argument-name syntax-expression
   79         | syntax-expression

   80 argument-name: identifier "`=`"
   81              | identifier "`:`"

   82 field-list-opt: %empty
   83               | field-list

   84 field-list: field
   85           | field-list "," field

   86 field-default-value-opt: %empty
   87                        | "`=`" syntax-expression

   88 field: identifier "`:`" type-expr field-default-value-opt
   89      | identifier "`=>`" type-expr field-default-value-opt

   90 parameter-list-opt: %empty
   91                   | parameter-list

   92 parameter-list: parameter-decl
   93               | parameter-list "," parameter-decl

   94 internal-identifier-opt: %empty
   95                        | internal-identifier

   96 parameter-default-value-opt: %empty
   97                            | "`=`" syntax-expression

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern parameter-default-value-opt
   99               | internal-identifier "`:`" pattern parameter-default-value-opt
  100               | pattern parameter-default-value-opt
  101               | identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt
  102               | internal-identifier "`:`" constraint-expression parameter-default-value-opt
  103               | constraint-expression parameter-default-value-opt

  104 constraint-expression-mod: "`~`"
  105                          | "`~`" "constexpr modifier"
  106                          | "`~`" "runctime modifier"

  107 constraint-expression: constraint-expression-mod type-expr
  108                      | constraint-expression-mod type-expr "`...`"

  109 subpatterns-opt: %empty
  110                | subpatterns

  111 subpatterns: "`(`" pattern-list "`)`"

  112 pattern-list: pattern-field
  113             | pattern-list "," pattern-field

  114 pattern-field: pattern
  115              | "`_`" "`:`" pattern
  116              | identifier "`:`" pattern
  117              | internal-identifier "`:`" pattern
  118              | "`(`" syntax-expression "`)`" "`:`" pattern

  119 pattern: qname subpatterns-opt concept-expression-list-opt
  120        | qname subpatterns-opt "`...`" concept-expression-list-opt
  121        | internal-identifier concept-expression-list-opt
  122        | internal-identifier "`...`" concept-expression-list-opt
  123        | "`_`" subpatterns concept-expression-list-opt
  124        | "`(`" syntax-expression "`)`" concept-expression-list-opt
  125        | "`(`" syntax-expression "`)`" "`...`" concept-expression-list-opt
  126        | "`_`" concept-expression-list-opt
  127        | concept-expression-list
  128        | "`_`" "`...`" concept-expression-list-opt
  129        | "`...`" concept-expression-list-opt

  130 concept-expression: "`@`" qname

  131 concept-expression-list-opt: %empty
  132                            | concept-expression-list

  133 concept-expression-list: concept-expression
  134                        | concept-expression-list concept-expression

  135 syntax-expression: CONTEXT_IDENTIFIER
  136                  | CT_IDENTIFIER
  137                  | syntax-expression-wo-ii

  138 syntax-expression-wo-ii: "nil"
  139                        | "true"
  140                        | "false"
  141                        | INTEGER
  142                        | DECIMAL
  143                        | DECIMAL_S
  144                        | INTEGER_INDEX
  145                        | STRING
  146                        | RESERVED_IDENTIFIER
  147                        | qname
  148                        | "`(`" pack-expression "`)`"
  149                        | "`[`" expression-list "`]`"
  150                        | "`[[`" expression-list "`]]`"
  151                        | syntax-expression "`[`" syntax-expression "`]`"
  152                        | "`.`" identifier
  153                        | syntax-expression "`.`" identifier
  154                        | syntax-expression "`.`" apostrophe-expression
  155                        | syntax-expression INTEGER_INDEX
  156                        | "`!`" syntax-expression
  157                        | "`*`" syntax-expression
  158                        | syntax-expression "`+`" syntax-expression
  159                        | syntax-expression "`-`" syntax-expression
  160                        | syntax-expression "`==`" syntax-expression
  161                        | syntax-expression "`!=`" syntax-expression
  162                        | syntax-expression "`..`" syntax-expression
  163                        | syntax-expression "`&`" syntax-expression
  164                        | syntax-expression "`|`" syntax-expression
  165                        | syntax-expression "`&&`" syntax-expression
  166                        | syntax-expression "`||`" syntax-expression
  167                        | apostrophe-expression
  168                        | new-expression
  169                        | compound-expression
  170                        | lambda-expression

  171 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE"

  172 new-expression: "`new`" qname
  173               | "`new`" apostrophe-expression
  174               | "`new`" qname "`(`" argument-list-opt "`)`"
  175               | "`new`" apostrophe-expression "`(`" argument-list-opt "`)`"

  176 call-expression: qname "`(`" pack-expression "`)`"
  177                | call-expression "`(`" pack-expression "`)`"
  178                | apostrophe-expression "`(`" pack-expression "`)`"
  179                | lambda-expression "`(`" pack-expression "`)`"

  180 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements
  181                  | fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

  182 pack-expression: syntax-expression
  183                | identifier "`:`" syntax-expression
  184                | pack-expression "," syntax-expression
  185                | pack-expression "," identifier "`:`" syntax-expression

  186 compound-expression: syntax-expression "`...`"
  187                    | call-expression

  188 type-expr: qname
  189          | call-expression
  190          | CONTEXT_IDENTIFIER
  191          | "`[`" type-expr "`]`"
  192          | "`(`" "`)`"
  193          | "`(`" pack-expression "`)`"
  194          | type-expr "`[`" INTEGER "`]`"
  195          | type-expr "`|`" type-expr
  196          | type-expr "`->`" type-expr


Terminals, with rules where they appear

    "end of file" (0) 0 1 2
    error (256)
    COMMENT_BEGIN (258)
    COMMENT_END (259)
    STRING <sonia::lang::bang::annotated_string_view> (260) 12 145
    IDENTIFIER <sonia::lang::bang::annotated_string_view> (261) 50
    CONTEXT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (262) 51 135 190
    RESERVED_IDENTIFIER <sonia::lang::bang::annotated_string_view> (263) 146
    CT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (264) 136
    INTEGER_INDEX <sonia::lang::bang::annotated_string_view> (265) 144 155
    INTEGER <sonia::lang::bang::annotated_integer> (266) 141 194
    DECIMAL <sonia::lang::bang::annotated_decimal> (267) 142
    DECIMAL_S <sonia::lang::bang::annotated_decimal> (268) 143
    OPERATOR_TERM <sonia::string_view> (269)
    "`=`" <sonia::lang::lex::resource_location> (270) 17 44 80 87 97
    "APOSTROPHE" (271) 171
    "`@`" (272) 130
    "`_`" <sonia::lang::lex::resource_location> (273) 115 123 126 128
    "`->*`" (274)
    "`->`" (275) 61 181 196
    "`=>`" (276) 13 68 69 70 71 89
    "`~>`" (277) 60
    "`.*`" (278)
    "`++`" (279)
    "`--`" (280)
    "`<<`" (281)
    "`>>`" (282)
    "`<=`" (283)
    "`>=`" (284)
    "`==`" <sonia::lang::lex::resource_location> (285) 160
    "`!=`" <sonia::lang::lex::resource_location> (286) 161
    "`&&`" <sonia::lang::lex::resource_location> (287) 165
    "`||`" <sonia::lang::lex::resource_location> (288) 166
    "`..`" <sonia::lang::lex::resource_location> (289) 162
    "`...`" <sonia::lang::lex::resource_location> (290) 108 120 122 125 128 129 186
    "`+=`" (291)
    "`-=`" (292)
    "`*=`" (293)
    "`/=`" (294)
    "`%=`" (295)
    "`<<=`" (296)
    "`>>=`" (297)
    "`&=`" (298)
    "`|=`" (299)
    "`^=`" (300)
    "`:`" (301) 10 21 81 88 98 99 101 102 115 116 117 118 183 185
    "`::`" (302) 52 54
    "`(`" <sonia::lang::lex::resource_location> (303) 13 37 59 60 61 68 69 71 111 118 124 125 148 174 175 176 177 178 179 180 181 192 193
    "`)`" (304) 13 37 59 60 61 68 69 71 111 118 124 125 148 174 175 176 177 178 179 180 181 192 193
    "`{`" <sonia::lang::lex::resource_location> (305) 29 62
    "`}`" (306) 29 62
    "`[`" <sonia::lang::lex::resource_location> (307) 149 151 191 194
    "`]`" (308) 149 151 191 194
    "`[[`" <sonia::lang::lex::resource_location> (309) 150
    "`]]`" (310) 150
    "`<`" (311)
    "`>`" (312)
    "`;`" (313) 7 9 26 28 31
    "`.`" <sonia::lang::lex::resource_location> (314) 152 153 154
    "`+`" <sonia::lang::lex::resource_location> (315) 158
    "`-`" <sonia::lang::lex::resource_location> (316) 159
    "`*`" <sonia::lang::lex::resource_location> (317) 157
    "`/`" (318)
    "`%`" (319)
    "`&`" <sonia::lang::lex::resource_location> (320) 163
    "`|`" <sonia::lang::lex::resource_location> (321) 164 195
    "`!`" <sonia::lang::lex::resource_location> (322) 156
    "`~`" (323) 104 105 106
    "`^`" (324)
    "," (325) 66 73 77 85 93 113 184 185
    "`$`" (326)
    "`?`" (327)
    "`#`" (328)
    LET (329) 41
    VAR (330) 10
    EXTERN (331) 10 11
    "`new`" <sonia::lang::lex::resource_location> (332) 58 172 173 174 175
    "`while`" (333) 30 31
    "`for`" (334) 32
    "`in`" (335) 32
    "`if`" (336) 33 34
    "`else`" (337) 34
    "`continue`" <sonia::lang::lex::resource_location> (338) 47
    "`break`" <sonia::lang::lex::resource_location> (339) 46
    "`return`" <sonia::lang::lex::resource_location> (340) 48 49
    AUTO (341)
    USING (342) 42
    THROW (343)
    SIZEOF (344)
    LOWEST (345)
    DEREF (346)
    INCLUDE (347) 12
    INLINE (348) 56
    "`fn`" <sonia::lang::lex::resource_location> (349) 11 55 56
    ENUM (350) 38
    STRUCT (351) 15 36 37
    EXTENDS (352)
    "weak modifier" (353) 19
    "constexpr modifier" (354) 105
    "runctime modifier" (355) 106
    "nil" <annotated_nil> (356) 138
    "true" <annotated_bool> (357) 139
    "false" <annotated_bool> (358) 140


Nonterminals, with rules where they appear

    $accept (104)
        on left: 0
    begin (105)
        on left: 1 2
        on right: 0
    statement_any <managed_statement_list> (106)
        on left: 3 4 5
        on right: 1 9
    finished-statement-any <managed_statement_list> (107)
        on left: 6 7 8 9
        on right: 2 5 7 8
    statement <statement> (108)
        on left: 10 11 12 13 14 15
        on right: 4 5
    let-decl <let_statement> (109)
        on left: 16 17
        on right: 41
    let-decl-start <let_statement> (110)
        on left: 18 19
        on right: 20 21
    let-decl-start-with-opt-type <let_statement> (111)
        on left: 20 21
        on right: 16 17
    infunction-statement-any <managed_statement_list> (112)
        on left: 22 23 24
        on right: 28 39
    finished-infunction-statement-any <managed_statement_list> (113)
        on left: 25 26 27 28
        on right: 24 26 27 40
    braced-statements <managed_statement_list> (114)
        on left: 29
        on right: 30 31 32 33 34 35 36 37 180 181
    finished-statement <finished_statement_type> (115)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 6 8 25 27
    infunction-statement-set <managed_statement_list> (116)
        on left: 39 40
        on right: 29
    generic-statement <generic_statement_type> (117)
        on left: 41 42 43 44
        on right: 14 45
    infunction-statement <statement> (118)
        on left: 45 46 47 48 49
        on right: 23 24
    identifier <sonia::lang::bang::annotated_identifier> (119)
        on left: 50
        on right: 10 18 19 52 53 54 67 80 81 88 89 98 101 116 152 153 183 185
    internal-identifier <sonia::lang::bang::annotated_identifier> (120)
        on left: 51
        on right: 95 99 102 117 121 122
    qname <sonia::lang::bang::annotated_qname> (121)
        on left: 52 53 54
        on right: 36 37 54 57 62 68 69 70 71 119 120 130 147 172 174 176 188
    fn-start-decl <fn_kind> (122)
        on left: 55 56
        on right: 13 35 180 181
    fn-name <sonia::lang::bang::annotated_qname> (123)
        on left: 57 58
        on right: 13 59 60 61
    fn-decl <fn_pure_t> (124)
        on left: 59 60 61
        on right: 11 35
    enum-decl <enum_decl> (125)
        on left: 62
        on right: 38
    case-list-opt <std::vector<sonia::lang::bang::identifier>> (126)
        on left: 63 64
        on right: 62
    case-list <std::vector<sonia::lang::bang::identifier>> (127)
        on left: 65 66
        on right: 64 66
    case-decl <sonia::lang::bang::identifier> (128)
        on left: 67
        on right: 65 66
    struct-decl <struct_decl> (129)
        on left: 68 69
        on right: 15
    using-decl <using_decl> (130)
        on left: 70 71
        on right: 42
    expression-list <expression_list_t> (131)
        on left: 72 73
        on right: 73 149 150
    argument-list-opt <named_expression_list_t> (132)
        on left: 74 75
        on right: 174 175
    argument-list <named_expression_list_t> (133)
        on left: 76 77
        on right: 75 77
    argument <named_expression_t> (134)
        on left: 78 79
        on right: 76 77
    argument-name <sonia::lang::bang::annotated_identifier> (135)
        on left: 80 81
        on right: 78
    field-list-opt <field_list_t> (136)
        on left: 82 83
        on right: 68 69
    field-list <field_list_t> (137)
        on left: 84 85
        on right: 83 85
    field-default-value-opt <sonia::optional<syntax_expression_t>> (138)
        on left: 86 87
        on right: 88 89
    field <field_t> (139)
        on left: 88 89
        on right: 84 85
    parameter-list-opt <parameter_list_t> (140)
        on left: 90 91
        on right: 13 37 59 60 61 69 71 180 181
    parameter-list <parameter_list_t> (141)
        on left: 92 93
        on right: 91 93
    internal-identifier-opt <sonia::lang::bang::annotated_identifier> (142)
        on left: 94 95
        on right: 98 101
    parameter-default-value-opt <sonia::optional<syntax_expression_t>> (143)
        on left: 96 97
        on right: 98 99 100 101 102 103
    parameter-decl <parameter_t> (144)
        on left: 98 99 100 101 102 103
        on right: 92 93
    constraint-expression-mod <parameter_constraint_modifier_t> (145)
        on left: 104 105 106
        on right: 107 108
    constraint-expression <constraint_expression_t> (146)
        on left: 107 108
        on right: 101 102 103
    subpatterns-opt <pattern_list_t> (147)
        on left: 109 110
        on right: 119 120
    subpatterns <pattern_list_t> (148)
        on left: 111
        on right: 110 123
    pattern-list <pattern_list_t> (149)
        on left: 112 113
        on right: 111 113
    pattern-field <pattern_t::field> (150)
        on left: 114 115 116 117 118
        on right: 112 113
    pattern <pattern_t> (151)
        on left: 119 120 121 122 123 124 125 126 127 128 129
        on right: 61 98 99 100 114 115 116 117 118
    concept-expression <syntax_expression_t> (152)
        on left: 130
        on right: 133 134
    concept-expression-list-opt <concept_expression_list_t> (153)
        on left: 131 132
        on right: 119 120 121 122 123 124 125 126 128 129
    concept-expression-list <concept_expression_list_t> (154)
        on left: 133 134
        on right: 127 132 134
    syntax-expression <syntax_expression_t> (155)
        on left: 135 136 137
        on right: 13 30 31 32 33 34 44 49 70 71 72 73 78 79 87 97 118 124 125 151 153 154 155 156 157 158 159 160 161 162 163 164 165 166 171 182 183 184 185 186
    syntax-expression-wo-ii <syntax_expression_t> (156)
        on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170
        on right: 137
    apostrophe-expression <syntax_expression_t> (157)
        on left: 171
        on right: 154 167 173 175 178
    new-expression <syntax_expression_t> (158)
        on left: 172 173 174 175
        on right: 168
    call-expression <syntax_expression_t> (159)
        on left: 176 177 178 179
        on right: 177 187 189
    lambda-expression <syntax_expression_t> (160)
        on left: 180 181
        on right: 170 179
    pack-expression <named_expression_list_t> (161)
        on left: 182 183 184 185
        on right: 17 148 176 177 178 179 184 185 193
    compound-expression <syntax_expression_t> (162)
        on left: 186 187
        on right: 43 169
    type-expr <syntax_expression_t> (163)
        on left: 188 189 190 191 192 193 194 195 196
        on right: 10 21 60 88 89 107 108 181 191 194 195 196


State 0

    0 $accept: . begin "end of file"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 3 (statement_any)

    begin                    go to state 33
    statement_any            go to state 34
    finished-statement-any   go to state 35
    statement                go to state 36
    finished-statement       go to state 37
    generic-statement        go to state 38
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 41
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 1

  145 syntax-expression-wo-ii: STRING .

    $default  reduce using rule 145 (syntax-expression-wo-ii)


State 2

   50 identifier: IDENTIFIER .

    $default  reduce using rule 50 (identifier)


State 3

  135 syntax-expression: CONTEXT_IDENTIFIER .

    $default  reduce using rule 135 (syntax-expression)


State 4

  146 syntax-expression-wo-ii: RESERVED_IDENTIFIER .

    $default  reduce using rule 146 (syntax-expression-wo-ii)


State 5

  136 syntax-expression: CT_IDENTIFIER .

    $default  reduce using rule 136 (syntax-expression)


State 6

  144 syntax-expression-wo-ii: INTEGER_INDEX .

    $default  reduce using rule 144 (syntax-expression-wo-ii)


State 7

  141 syntax-expression-wo-ii: INTEGER .

    $default  reduce using rule 141 (syntax-expression-wo-ii)


State 8

  142 syntax-expression-wo-ii: DECIMAL .

    $default  reduce using rule 142 (syntax-expression-wo-ii)


State 9

  143 syntax-expression-wo-ii: DECIMAL_S .

    $default  reduce using rule 143 (syntax-expression-wo-ii)


State 10

  171 apostrophe-expression: "APOSTROPHE" . syntax-expression "APOSTROPHE"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 50
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 11

   52 qname: "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 52


State 12

  148 syntax-expression-wo-ii: "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 55
    compound-expression      go to state 51


State 13

  149 syntax-expression-wo-ii: "`[`" . expression-list "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    expression-list          go to state 56
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 14

  150 syntax-expression-wo-ii: "`[[`" . expression-list "`]]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    expression-list          go to state 58
    syntax-expression        go to state 57
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 15

  152 syntax-expression-wo-ii: "`.`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 59


State 16

  157 syntax-expression-wo-ii: "`*`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 60
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 17

  156 syntax-expression-wo-ii: "`!`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 61
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 18

   41 generic-statement: LET . let-decl

    IDENTIFIER       shift, and go to state 2
    "weak modifier"  shift, and go to state 62

    let-decl                      go to state 63
    let-decl-start                go to state 64
    let-decl-start-with-opt-type  go to state 65
    identifier                    go to state 66


State 19

   10 statement: EXTERN . VAR identifier "`:`" type-expr
   11          | EXTERN . "`fn`" fn-decl

    VAR     shift, and go to state 67
    "`fn`"  shift, and go to state 68


State 20

  172 new-expression: "`new`" . qname
  173               | "`new`" . apostrophe-expression
  174               | "`new`" . qname "`(`" argument-list-opt "`)`"
  175               | "`new`" . apostrophe-expression "`(`" argument-list-opt "`)`"

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10
    "`::`"        shift, and go to state 11

    identifier             go to state 39
    qname                  go to state 69
    apostrophe-expression  go to state 70


State 21

   30 finished-statement: "`while`" . syntax-expression braced-statements
   31                   | "`while`" . syntax-expression "`;`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 71
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 22

   32 finished-statement: "`for`" . syntax-expression "`in`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 72
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 23

   33 finished-statement: "`if`" . syntax-expression braced-statements
   34                   | "`if`" . syntax-expression braced-statements "`else`" braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 73
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 24

   42 generic-statement: USING . using-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 74
    using-decl  go to state 75


State 25

   12 statement: INCLUDE . STRING

    STRING  shift, and go to state 76


State 26

   56 fn-start-decl: INLINE . "`fn`"

    "`fn`"  shift, and go to state 77


State 27

   55 fn-start-decl: "`fn`" .

    $default  reduce using rule 55 (fn-start-decl)


State 28

   38 finished-statement: ENUM . enum-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 78
    enum-decl   go to state 79


State 29

   15 statement: STRUCT . struct-decl
   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier   go to state 39
    qname        go to state 80
    struct-decl  go to state 81


State 30

  138 syntax-expression-wo-ii: "nil" .

    $default  reduce using rule 138 (syntax-expression-wo-ii)


State 31

  139 syntax-expression-wo-ii: "true" .

    $default  reduce using rule 139 (syntax-expression-wo-ii)


State 32

  140 syntax-expression-wo-ii: "false" .

    $default  reduce using rule 140 (syntax-expression-wo-ii)


State 33

    0 $accept: begin . "end of file"

    "end of file"  shift, and go to state 82


State 34

    1 begin: statement_any . "end of file"
    9 finished-statement-any: statement_any . "`;`"

    "end of file"  shift, and go to state 83
    "`;`"          shift, and go to state 84


State 35

    2 begin: finished-statement-any . "end of file"
    5 statement_any: finished-statement-any . statement
    7 finished-statement-any: finished-statement-any . "`;`"
    8                       | finished-statement-any . finished-statement

    "end of file"        shift, and go to state 85
    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 86
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    statement                go to state 87
    finished-statement       go to state 88
    generic-statement        go to state 38
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 41
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 36

    4 statement_any: statement .

    $default  reduce using rule 4 (statement_any)


State 37

    6 finished-statement-any: finished-statement .

    $default  reduce using rule 6 (finished-statement-any)


State 38

   14 statement: generic-statement .

    $default  reduce using rule 14 (statement)


State 39

   53 qname: identifier .

    $default  reduce using rule 53 (qname)


State 40

   54 qname: qname . "`::`" identifier
  147 syntax-expression-wo-ii: qname .
  176 call-expression: qname . "`(`" pack-expression "`)`"

    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 90

    $default  reduce using rule 147 (syntax-expression-wo-ii)


State 41

   13 statement: fn-start-decl . fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   35 finished-statement: fn-start-decl . fn-decl braced-statements
  180 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  181                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 91
    "`new`"     shift, and go to state 92

    identifier  go to state 39
    qname       go to state 93
    fn-name     go to state 94
    fn-decl     go to state 95


State 42

   44 generic-statement: syntax-expression . "`=`" syntax-expression
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`=`"          shift, and go to state 97
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109


State 43

  137 syntax-expression: syntax-expression-wo-ii .

    $default  reduce using rule 137 (syntax-expression)


State 44

  167 syntax-expression-wo-ii: apostrophe-expression .
  178 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 110

    $default  reduce using rule 167 (syntax-expression-wo-ii)


State 45

  168 syntax-expression-wo-ii: new-expression .

    $default  reduce using rule 168 (syntax-expression-wo-ii)


State 46

  177 call-expression: call-expression . "`(`" pack-expression "`)`"
  187 compound-expression: call-expression .

    "`(`"  shift, and go to state 111

    $default  reduce using rule 187 (compound-expression)


State 47

  170 syntax-expression-wo-ii: lambda-expression .
  179 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 112

    $default  reduce using rule 170 (syntax-expression-wo-ii)


State 48

   43 generic-statement: compound-expression .
  169 syntax-expression-wo-ii: compound-expression .

    "end of file"  reduce using rule 43 (generic-statement)
    "`}`"          reduce using rule 43 (generic-statement)
    "`;`"          reduce using rule 43 (generic-statement)
    $default       reduce using rule 169 (syntax-expression-wo-ii)


State 49

  180 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  181                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    "`(`"  shift, and go to state 91


State 50

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  171 apostrophe-expression: "APOSTROPHE" syntax-expression . "APOSTROPHE"
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "APOSTROPHE"   shift, and go to state 113
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109


State 51

  169 syntax-expression-wo-ii: compound-expression .

    $default  reduce using rule 169 (syntax-expression-wo-ii)


State 52

   52 qname: "`::`" identifier .

    $default  reduce using rule 52 (qname)


State 53

   53 qname: identifier .
  183 pack-expression: identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 114

    $default  reduce using rule 53 (qname)


State 54

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  182 pack-expression: syntax-expression .
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 182 (pack-expression)


State 55

  148 syntax-expression-wo-ii: "`(`" pack-expression . "`)`"
  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 115
    ","    shift, and go to state 116


State 56

   73 expression-list: expression-list . "," syntax-expression
  149 syntax-expression-wo-ii: "`[`" expression-list . "`]`"

    "`]`"  shift, and go to state 117
    ","    shift, and go to state 118


State 57

   72 expression-list: syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 72 (expression-list)


State 58

   73 expression-list: expression-list . "," syntax-expression
  150 syntax-expression-wo-ii: "`[[`" expression-list . "`]]`"

    "`]]`"  shift, and go to state 119
    ","     shift, and go to state 118


State 59

  152 syntax-expression-wo-ii: "`.`" identifier .

    $default  reduce using rule 152 (syntax-expression-wo-ii)


State 60

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  157                        | "`*`" syntax-expression .
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105

    $default  reduce using rule 157 (syntax-expression-wo-ii)


State 61

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  156                        | "`!`" syntax-expression .
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105

    $default  reduce using rule 156 (syntax-expression-wo-ii)


State 62

   19 let-decl-start: "weak modifier" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 120


State 63

   41 generic-statement: LET let-decl .

    $default  reduce using rule 41 (generic-statement)


State 64

   20 let-decl-start-with-opt-type: let-decl-start .
   21                             | let-decl-start . "`:`" type-expr

    "`:`"  shift, and go to state 121

    $default  reduce using rule 20 (let-decl-start-with-opt-type)


State 65

   16 let-decl: let-decl-start-with-opt-type .
   17         | let-decl-start-with-opt-type . "`=`" pack-expression

    "`=`"  shift, and go to state 122

    $default  reduce using rule 16 (let-decl)


State 66

   18 let-decl-start: identifier .

    $default  reduce using rule 18 (let-decl-start)


State 67

   10 statement: EXTERN VAR . identifier "`:`" type-expr

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 123


State 68

   11 statement: EXTERN "`fn`" . fn-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`new`"     shift, and go to state 92

    identifier  go to state 39
    qname       go to state 93
    fn-name     go to state 124
    fn-decl     go to state 125


State 69

   54 qname: qname . "`::`" identifier
  172 new-expression: "`new`" qname .
  174               | "`new`" qname . "`(`" argument-list-opt "`)`"

    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 126

    $default  reduce using rule 172 (new-expression)


State 70

  173 new-expression: "`new`" apostrophe-expression .
  175               | "`new`" apostrophe-expression . "`(`" argument-list-opt "`)`"

    "`(`"  shift, and go to state 127

    $default  reduce using rule 173 (new-expression)


State 71

   30 finished-statement: "`while`" syntax-expression . braced-statements
   31                   | "`while`" syntax-expression . "`;`" syntax-expression braced-statements
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 104
    "`;`"          shift, and go to state 129
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    braced-statements  go to state 130


State 72

   32 finished-statement: "`for`" syntax-expression . "`in`" syntax-expression braced-statements
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109
    "`in`"         shift, and go to state 131


State 73

   33 finished-statement: "`if`" syntax-expression . braced-statements
   34                   | "`if`" syntax-expression . braced-statements "`else`" braced-statements
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    braced-statements  go to state 132


State 74

   54 qname: qname . "`::`" identifier
   70 using-decl: qname . "`=>`" syntax-expression
   71           | qname . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

    "`=>`"  shift, and go to state 133
    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 134


State 75

   42 generic-statement: USING using-decl .

    $default  reduce using rule 42 (generic-statement)


State 76

   12 statement: INCLUDE STRING .

    $default  reduce using rule 12 (statement)


State 77

   56 fn-start-decl: INLINE "`fn`" .

    $default  reduce using rule 56 (fn-start-decl)


State 78

   54 qname: qname . "`::`" identifier
   62 enum-decl: qname . "`{`" case-list-opt "`}`"

    "`::`"  shift, and go to state 89
    "`{`"   shift, and go to state 135


State 79

   38 finished-statement: ENUM enum-decl .

    $default  reduce using rule 38 (finished-statement)


State 80

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier
   68 struct-decl: qname . "`=>`" "`(`" field-list-opt "`)`"
   69            | qname . "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 136
    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 137
    "`{`"   shift, and go to state 128

    braced-statements  go to state 138


State 81

   15 statement: STRUCT struct-decl .

    $default  reduce using rule 15 (statement)


State 82

    0 $accept: begin "end of file" .

    $default  accept


State 83

    1 begin: statement_any "end of file" .

    $default  reduce using rule 1 (begin)


State 84

    9 finished-statement-any: statement_any "`;`" .

    $default  reduce using rule 9 (finished-statement-any)


State 85

    2 begin: finished-statement-any "end of file" .

    $default  reduce using rule 2 (begin)


State 86

    7 finished-statement-any: finished-statement-any "`;`" .

    $default  reduce using rule 7 (finished-statement-any)


State 87

    5 statement_any: finished-statement-any statement .

    $default  reduce using rule 5 (statement_any)


State 88

    8 finished-statement-any: finished-statement-any finished-statement .

    $default  reduce using rule 8 (finished-statement-any)


State 89

   54 qname: qname "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 139


State 90

  176 call-expression: qname "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 140
    compound-expression      go to state 51


State 91

  180 lambda-expression: fn-start-decl "`(`" . parameter-list-opt "`)`" braced-statements
  181                  | fn-start-decl "`(`" . parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-list-opt         go to state 150
    parameter-list             go to state 151
    parameter-decl             go to state 152
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 92

   58 fn-name: "`new`" .

    $default  reduce using rule 58 (fn-name)


State 93

   54 qname: qname . "`::`" identifier
   57 fn-name: qname .

    "`::`"  shift, and go to state 89

    $default  reduce using rule 57 (fn-name)


State 94

   13 statement: fn-start-decl fn-name . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 158


State 95

   35 finished-statement: fn-start-decl fn-decl . braced-statements

    "`{`"  shift, and go to state 128

    braced-statements  go to state 159


State 96

  155 syntax-expression-wo-ii: syntax-expression INTEGER_INDEX .

    $default  reduce using rule 155 (syntax-expression-wo-ii)


State 97

   44 generic-statement: syntax-expression "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 160
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 98

  160 syntax-expression-wo-ii: syntax-expression "`==`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 161
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 99

  161 syntax-expression-wo-ii: syntax-expression "`!=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 162
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 100

  165 syntax-expression-wo-ii: syntax-expression "`&&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 163
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 101

  166 syntax-expression-wo-ii: syntax-expression "`||`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 164
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 102

  162 syntax-expression-wo-ii: syntax-expression "`..`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 165
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 103

  186 compound-expression: syntax-expression "`...`" .

    $default  reduce using rule 186 (compound-expression)


State 104

  151 syntax-expression-wo-ii: syntax-expression "`[`" . syntax-expression "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 166
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 105

  153 syntax-expression-wo-ii: syntax-expression "`.`" . identifier
  154                        | syntax-expression "`.`" . apostrophe-expression

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10

    identifier             go to state 167
    apostrophe-expression  go to state 168


State 106

  158 syntax-expression-wo-ii: syntax-expression "`+`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 169
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 107

  159 syntax-expression-wo-ii: syntax-expression "`-`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 170
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 108

  163 syntax-expression-wo-ii: syntax-expression "`&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 171
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 109

  164 syntax-expression-wo-ii: syntax-expression "`|`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 172
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 110

  178 call-expression: apostrophe-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 173
    compound-expression      go to state 51


State 111

  177 call-expression: call-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 174
    compound-expression      go to state 51


State 112

  179 call-expression: lambda-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 175
    compound-expression      go to state 51


State 113

  171 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE" .

    $default  reduce using rule 171 (apostrophe-expression)


State 114

  183 pack-expression: identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 176
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 115

  148 syntax-expression-wo-ii: "`(`" pack-expression "`)`" .

    $default  reduce using rule 148 (syntax-expression-wo-ii)


State 116

  184 pack-expression: pack-expression "," . syntax-expression
  185                | pack-expression "," . identifier "`:`" syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 177
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 178
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 117

  149 syntax-expression-wo-ii: "`[`" expression-list "`]`" .

    $default  reduce using rule 149 (syntax-expression-wo-ii)


State 118

   73 expression-list: expression-list "," . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 179
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 119

  150 syntax-expression-wo-ii: "`[[`" expression-list "`]]`" .

    $default  reduce using rule 150 (syntax-expression-wo-ii)


State 120

   19 let-decl-start: "weak modifier" identifier .

    $default  reduce using rule 19 (let-decl-start)


State 121

   21 let-decl-start-with-opt-type: let-decl-start "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 187


State 122

   17 let-decl: let-decl-start-with-opt-type "`=`" . pack-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 188
    compound-expression      go to state 51


State 123

   10 statement: EXTERN VAR identifier . "`:`" type-expr

    "`:`"  shift, and go to state 189


State 124

   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 190


State 125

   11 statement: EXTERN "`fn`" fn-decl .

    $default  reduce using rule 11 (statement)


State 126

  174 new-expression: "`new`" qname "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 191
    qname                    go to state 40
    fn-start-decl            go to state 49
    argument-list-opt        go to state 192
    argument-list            go to state 193
    argument                 go to state 194
    argument-name            go to state 195
    syntax-expression        go to state 196
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 127

  175 new-expression: "`new`" apostrophe-expression "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 191
    qname                    go to state 40
    fn-start-decl            go to state 49
    argument-list-opt        go to state 197
    argument-list            go to state 193
    argument                 go to state 194
    argument-name            go to state 195
    syntax-expression        go to state 196
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 128

   29 braced-statements: "`{`" . infunction-statement-set "`}`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 198
    "`break`"            shift, and go to state 199
    "`return`"           shift, and go to state 200
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 201
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 22 (infunction-statement-any)

    infunction-statement-any           go to state 202
    finished-infunction-statement-any  go to state 203
    finished-statement                 go to state 204
    infunction-statement-set           go to state 205
    generic-statement                  go to state 206
    infunction-statement               go to state 207
    identifier                         go to state 39
    qname                              go to state 40
    fn-start-decl                      go to state 208
    syntax-expression                  go to state 42
    syntax-expression-wo-ii            go to state 43
    apostrophe-expression              go to state 44
    new-expression                     go to state 45
    call-expression                    go to state 46
    lambda-expression                  go to state 47
    compound-expression                go to state 48


State 129

   31 finished-statement: "`while`" syntax-expression "`;`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 209
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 130

   30 finished-statement: "`while`" syntax-expression braced-statements .

    $default  reduce using rule 30 (finished-statement)


State 131

   32 finished-statement: "`for`" syntax-expression "`in`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 210
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 132

   33 finished-statement: "`if`" syntax-expression braced-statements .
   34                   | "`if`" syntax-expression braced-statements . "`else`" braced-statements

    "`else`"  shift, and go to state 211

    $default  reduce using rule 33 (finished-statement)


State 133

   70 using-decl: qname "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 212
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 134

   71 using-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-list-opt         go to state 213
    parameter-list             go to state 151
    parameter-decl             go to state 152
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 135

   62 enum-decl: qname "`{`" . case-list-opt "`}`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 63 (case-list-opt)

    identifier     go to state 214
    case-list-opt  go to state 215
    case-list      go to state 216
    case-decl      go to state 217


State 136

   68 struct-decl: qname "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 218


State 137

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements
   69 struct-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-list-opt         go to state 219
    parameter-list             go to state 151
    parameter-decl             go to state 152
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 138

   36 finished-statement: STRUCT qname braced-statements .

    $default  reduce using rule 36 (finished-statement)


State 139

   54 qname: qname "`::`" identifier .

    $default  reduce using rule 54 (qname)


State 140

  176 call-expression: qname "`(`" pack-expression . "`)`"
  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 220
    ","    shift, and go to state 116


State 141

   51 internal-identifier: CONTEXT_IDENTIFIER .

    $default  reduce using rule 51 (internal-identifier)


State 142

  130 concept-expression: "`@`" . qname

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 221


State 143

  123 pattern: "`_`" . subpatterns concept-expression-list-opt
  126        | "`_`" . concept-expression-list-opt
  128        | "`_`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 222
    "`(`"    shift, and go to state 223

    $default  reduce using rule 131 (concept-expression-list-opt)

    subpatterns                  go to state 224
    concept-expression           go to state 156
    concept-expression-list-opt  go to state 225
    concept-expression-list      go to state 226


State 144

  129 pattern: "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 142

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 227
    concept-expression-list      go to state 226


State 145

  124 pattern: "`(`" . syntax-expression "`)`" concept-expression-list-opt
  125        | "`(`" . syntax-expression "`)`" "`...`" concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 228
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 146

  104 constraint-expression-mod: "`~`" .
  105                          | "`~`" . "constexpr modifier"
  106                          | "`~`" . "runctime modifier"

    "constexpr modifier"  shift, and go to state 229
    "runctime modifier"   shift, and go to state 230

    $default  reduce using rule 104 (constraint-expression-mod)


State 147

   53 qname: identifier .
   98 parameter-decl: identifier . internal-identifier-opt "`:`" pattern parameter-default-value-opt
  101               | identifier . internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt

    CONTEXT_IDENTIFIER  shift, and go to state 141

    "`:`"     reduce using rule 94 (internal-identifier-opt)
    $default  reduce using rule 53 (qname)

    internal-identifier      go to state 231
    internal-identifier-opt  go to state 232


State 148

   99 parameter-decl: internal-identifier . "`:`" pattern parameter-default-value-opt
  102               | internal-identifier . "`:`" constraint-expression parameter-default-value-opt
  121 pattern: internal-identifier . concept-expression-list-opt
  122        | internal-identifier . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 233
    "`:`"    shift, and go to state 234

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 235
    concept-expression-list      go to state 226


State 149

   54 qname: qname . "`::`" identifier
  119 pattern: qname . subpatterns-opt concept-expression-list-opt
  120        | qname . subpatterns-opt "`...`" concept-expression-list-opt

    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 223

    $default  reduce using rule 109 (subpatterns-opt)

    subpatterns-opt  go to state 236
    subpatterns      go to state 237


State 150

  180 lambda-expression: fn-start-decl "`(`" parameter-list-opt . "`)`" braced-statements
  181                  | fn-start-decl "`(`" parameter-list-opt . "`)`" "`->`" type-expr braced-statements

    "`)`"  shift, and go to state 238


State 151

   91 parameter-list-opt: parameter-list .
   93 parameter-list: parameter-list . "," parameter-decl

    ","  shift, and go to state 239

    $default  reduce using rule 91 (parameter-list-opt)


State 152

   92 parameter-list: parameter-decl .

    $default  reduce using rule 92 (parameter-list)


State 153

  107 constraint-expression: constraint-expression-mod . type-expr
  108                      | constraint-expression-mod . type-expr "`...`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 240


State 154

  103 parameter-decl: constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 241

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 242


State 155

  100 parameter-decl: pattern . parameter-default-value-opt

    "`=`"  shift, and go to state 241

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 243


State 156

  133 concept-expression-list: concept-expression .

    $default  reduce using rule 133 (concept-expression-list)


State 157

  127 pattern: concept-expression-list .
  134 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 142

    $default  reduce using rule 127 (pattern)

    concept-expression  go to state 244


State 158

   13 statement: fn-start-decl fn-name "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-list-opt         go to state 245
    parameter-list             go to state 151
    parameter-decl             go to state 152
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 159

   35 finished-statement: fn-start-decl fn-decl braced-statements .

    $default  reduce using rule 35 (finished-statement)


State 160

   44 generic-statement: syntax-expression "`=`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 44 (generic-statement)


State 161

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  160                        | syntax-expression "`==`" syntax-expression .
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`..`"         shift, and go to state 102
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107

    $default  reduce using rule 160 (syntax-expression-wo-ii)


State 162

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  161                        | syntax-expression "`!=`" syntax-expression .
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`..`"         shift, and go to state 102
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107

    $default  reduce using rule 161 (syntax-expression-wo-ii)


State 163

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  165                        | syntax-expression "`&&`" syntax-expression .
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`..`"         shift, and go to state 102
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 165 (syntax-expression-wo-ii)


State 164

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  166                        | syntax-expression "`||`" syntax-expression .
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`..`"         shift, and go to state 102
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 166 (syntax-expression-wo-ii)


State 165

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  162                        | syntax-expression "`..`" syntax-expression .
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107

    $default  reduce using rule 162 (syntax-expression-wo-ii)


State 166

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  151                        | syntax-expression "`[`" syntax-expression . "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`]`"          shift, and go to state 246
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109


State 167

  153 syntax-expression-wo-ii: syntax-expression "`.`" identifier .

    $default  reduce using rule 153 (syntax-expression-wo-ii)


State 168

  154 syntax-expression-wo-ii: syntax-expression "`.`" apostrophe-expression .

    $default  reduce using rule 154 (syntax-expression-wo-ii)


State 169

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  158                        | syntax-expression "`+`" syntax-expression .
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105

    $default  reduce using rule 158 (syntax-expression-wo-ii)


State 170

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  159                        | syntax-expression "`-`" syntax-expression .
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105

    $default  reduce using rule 159 (syntax-expression-wo-ii)


State 171

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  163                        | syntax-expression "`&`" syntax-expression .
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`..`"         shift, and go to state 102
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107

    $default  reduce using rule 163 (syntax-expression-wo-ii)


State 172

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  164                        | syntax-expression "`|`" syntax-expression .
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`..`"         shift, and go to state 102
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108

    $default  reduce using rule 164 (syntax-expression-wo-ii)


State 173

  178 call-expression: apostrophe-expression "`(`" pack-expression . "`)`"
  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 247
    ","    shift, and go to state 116


State 174

  177 call-expression: call-expression "`(`" pack-expression . "`)`"
  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 248
    ","    shift, and go to state 116


State 175

  179 call-expression: lambda-expression "`(`" pack-expression . "`)`"
  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 249
    ","    shift, and go to state 116


State 176

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  183 pack-expression: identifier "`:`" syntax-expression .
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 183 (pack-expression)


State 177

   53 qname: identifier .
  185 pack-expression: pack-expression "," identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 250

    $default  reduce using rule 53 (qname)


State 178

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  184 pack-expression: pack-expression "," syntax-expression .
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 184 (pack-expression)


State 179

   73 expression-list: expression-list "," syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 73 (expression-list)


State 180

  190 type-expr: CONTEXT_IDENTIFIER .

    $default  reduce using rule 190 (type-expr)


State 181

  192 type-expr: "`(`" . "`)`"
  193          | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`)`"                shift, and go to state 251
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 53
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 252
    compound-expression      go to state 51


State 182

  191 type-expr: "`[`" . type-expr "`]`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 253


State 183

   54 qname: qname . "`::`" identifier
  176 call-expression: qname . "`(`" pack-expression "`)`"
  188 type-expr: qname .

    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 90

    $default  reduce using rule 188 (type-expr)


State 184

  178 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 110


State 185

  177 call-expression: call-expression . "`(`" pack-expression "`)`"
  189 type-expr: call-expression .

    "`(`"  shift, and go to state 111

    $default  reduce using rule 189 (type-expr)


State 186

  179 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 112


State 187

   21 let-decl-start-with-opt-type: let-decl-start "`:`" type-expr .
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255
    "`|`"   shift, and go to state 256

    $default  reduce using rule 21 (let-decl-start-with-opt-type)


State 188

   17 let-decl: let-decl-start-with-opt-type "`=`" pack-expression .
  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 116

    $default  reduce using rule 17 (let-decl)


State 189

   10 statement: EXTERN VAR identifier "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 257


State 190

   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-list-opt         go to state 258
    parameter-list             go to state 151
    parameter-decl             go to state 152
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 191

   53 qname: identifier .
   80 argument-name: identifier . "`=`"
   81              | identifier . "`:`"

    "`=`"  shift, and go to state 259
    "`:`"  shift, and go to state 260

    $default  reduce using rule 53 (qname)


State 192

  174 new-expression: "`new`" qname "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 261


State 193

   75 argument-list-opt: argument-list .
   77 argument-list: argument-list . "," argument

    ","  shift, and go to state 262

    $default  reduce using rule 75 (argument-list-opt)


State 194

   76 argument-list: argument .

    $default  reduce using rule 76 (argument-list)


State 195

   78 argument: argument-name . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 263
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 196

   79 argument: syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 79 (argument)


State 197

  175 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 264


State 198

   47 infunction-statement: "`continue`" .

    $default  reduce using rule 47 (infunction-statement)


State 199

   46 infunction-statement: "`break`" .

    $default  reduce using rule 46 (infunction-statement)


State 200

   48 infunction-statement: "`return`" .
   49                     | "`return`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 48 (infunction-statement)

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 265
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 201

   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 266


State 202

   28 finished-infunction-statement-any: infunction-statement-any . "`;`"
   39 infunction-statement-set: infunction-statement-any .

    "`;`"  shift, and go to state 267

    $default  reduce using rule 39 (infunction-statement-set)


State 203

   24 infunction-statement-any: finished-infunction-statement-any . infunction-statement
   26 finished-infunction-statement-any: finished-infunction-statement-any . "`;`"
   27                                  | finished-infunction-statement-any . finished-statement
   40 infunction-statement-set: finished-infunction-statement-any .

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 268
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 198
    "`break`"            shift, and go to state 199
    "`return`"           shift, and go to state 200
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 201
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 40 (infunction-statement-set)

    finished-statement       go to state 269
    generic-statement        go to state 206
    infunction-statement     go to state 270
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 208
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 204

   25 finished-infunction-statement-any: finished-statement .

    $default  reduce using rule 25 (finished-infunction-statement-any)


State 205

   29 braced-statements: "`{`" infunction-statement-set . "`}`"

    "`}`"  shift, and go to state 271


State 206

   45 infunction-statement: generic-statement .

    $default  reduce using rule 45 (infunction-statement)


State 207

   23 infunction-statement-any: infunction-statement .

    $default  reduce using rule 23 (infunction-statement-any)


State 208

   35 finished-statement: fn-start-decl . fn-decl braced-statements
  180 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  181                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 91
    "`new`"     shift, and go to state 92

    identifier  go to state 39
    qname       go to state 93
    fn-name     go to state 124
    fn-decl     go to state 95


State 209

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression . braced-statements
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    braced-statements  go to state 272


State 210

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression . braced-statements
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    braced-statements  go to state 273


State 211

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" . braced-statements

    "`{`"  shift, and go to state 128

    braced-statements  go to state 274


State 212

   70 using-decl: qname "`=>`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 70 (using-decl)


State 213

   71 using-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression

    "`)`"  shift, and go to state 275


State 214

   67 case-decl: identifier .

    $default  reduce using rule 67 (case-decl)


State 215

   62 enum-decl: qname "`{`" case-list-opt . "`}`"

    "`}`"  shift, and go to state 276


State 216

   64 case-list-opt: case-list .
   66 case-list: case-list . "," case-decl

    ","  shift, and go to state 277

    $default  reduce using rule 64 (case-list-opt)


State 217

   65 case-list: case-decl .

    $default  reduce using rule 65 (case-list)


State 218

   68 struct-decl: qname "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 278
    field-list-opt  go to state 279
    field-list      go to state 280
    field           go to state 281


State 219

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`)`"  shift, and go to state 282


State 220

  176 call-expression: qname "`(`" pack-expression "`)`" .

    $default  reduce using rule 176 (call-expression)


State 221

   54 qname: qname . "`::`" identifier
  130 concept-expression: "`@`" qname .

    "`::`"  shift, and go to state 89

    $default  reduce using rule 130 (concept-expression)


State 222

  128 pattern: "`_`" "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 142

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 283
    concept-expression-list      go to state 226


State 223

  111 subpatterns: "`(`" . pattern-list "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 284
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 285

    identifier               go to state 286
    internal-identifier      go to state 287
    qname                    go to state 149
    pattern-list             go to state 288
    pattern-field            go to state 289
    pattern                  go to state 290
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 224

  123 pattern: "`_`" subpatterns . concept-expression-list-opt

    "`@`"  shift, and go to state 142

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 291
    concept-expression-list      go to state 226


State 225

  126 pattern: "`_`" concept-expression-list-opt .

    $default  reduce using rule 126 (pattern)


State 226

  132 concept-expression-list-opt: concept-expression-list .
  134 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 142

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression  go to state 244


State 227

  129 pattern: "`...`" concept-expression-list-opt .

    $default  reduce using rule 129 (pattern)


State 228

  124 pattern: "`(`" syntax-expression . "`)`" concept-expression-list-opt
  125        | "`(`" syntax-expression . "`)`" "`...`" concept-expression-list-opt
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`)`"          shift, and go to state 292
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109


State 229

  105 constraint-expression-mod: "`~`" "constexpr modifier" .

    $default  reduce using rule 105 (constraint-expression-mod)


State 230

  106 constraint-expression-mod: "`~`" "runctime modifier" .

    $default  reduce using rule 106 (constraint-expression-mod)


State 231

   95 internal-identifier-opt: internal-identifier .

    $default  reduce using rule 95 (internal-identifier-opt)


State 232

   98 parameter-decl: identifier internal-identifier-opt . "`:`" pattern parameter-default-value-opt
  101               | identifier internal-identifier-opt . "`:`" constraint-expression parameter-default-value-opt

    "`:`"  shift, and go to state 293


State 233

  122 pattern: internal-identifier "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 142

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 294
    concept-expression-list      go to state 226


State 234

   99 parameter-decl: internal-identifier "`:`" . pattern parameter-default-value-opt
  102               | internal-identifier "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    identifier                 go to state 39
    internal-identifier        go to state 295
    qname                      go to state 149
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 296
    pattern                    go to state 297
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 235

  121 pattern: internal-identifier concept-expression-list-opt .

    $default  reduce using rule 121 (pattern)


State 236

  119 pattern: qname subpatterns-opt . concept-expression-list-opt
  120        | qname subpatterns-opt . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 298

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 299
    concept-expression-list      go to state 226


State 237

  110 subpatterns-opt: subpatterns .

    $default  reduce using rule 110 (subpatterns-opt)


State 238

  180 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" . braced-statements
  181                  | fn-start-decl "`(`" parameter-list-opt "`)`" . "`->`" type-expr braced-statements

    "`->`"  shift, and go to state 300
    "`{`"   shift, and go to state 128

    braced-statements  go to state 301


State 239

   93 parameter-list: parameter-list "," . parameter-decl

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-decl             go to state 302
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 240

  107 constraint-expression: constraint-expression-mod type-expr .
  108                      | constraint-expression-mod type-expr . "`...`"
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`->`"   shift, and go to state 254
    "`...`"  shift, and go to state 303
    "`[`"    shift, and go to state 255
    "`|`"    shift, and go to state 256

    $default  reduce using rule 107 (constraint-expression)


State 241

   97 parameter-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 304
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 242

  103 parameter-decl: constraint-expression parameter-default-value-opt .

    $default  reduce using rule 103 (parameter-decl)


State 243

  100 parameter-decl: pattern parameter-default-value-opt .

    $default  reduce using rule 100 (parameter-decl)


State 244

  134 concept-expression-list: concept-expression-list concept-expression .

    $default  reduce using rule 134 (concept-expression-list)


State 245

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 305


State 246

  151 syntax-expression-wo-ii: syntax-expression "`[`" syntax-expression "`]`" .

    $default  reduce using rule 151 (syntax-expression-wo-ii)


State 247

  178 call-expression: apostrophe-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 178 (call-expression)


State 248

  177 call-expression: call-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 177 (call-expression)


State 249

  179 call-expression: lambda-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 179 (call-expression)


State 250

  185 pack-expression: pack-expression "," identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 306
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 251

  192 type-expr: "`(`" "`)`" .

    $default  reduce using rule 192 (type-expr)


State 252

  184 pack-expression: pack-expression . "," syntax-expression
  185                | pack-expression . "," identifier "`:`" syntax-expression
  193 type-expr: "`(`" pack-expression . "`)`"

    "`)`"  shift, and go to state 307
    ","    shift, and go to state 116


State 253

  191 type-expr: "`[`" type-expr . "`]`"
  194          | type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255
    "`]`"   shift, and go to state 308
    "`|`"   shift, and go to state 256


State 254

  196 type-expr: type-expr "`->`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 309


State 255

  194 type-expr: type-expr "`[`" . INTEGER "`]`"

    INTEGER  shift, and go to state 310


State 256

  195 type-expr: type-expr "`|`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 311


State 257

   10 statement: EXTERN VAR identifier "`:`" type-expr .
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255
    "`|`"   shift, and go to state 256

    $default  reduce using rule 10 (statement)


State 258

   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 312


State 259

   80 argument-name: identifier "`=`" .

    $default  reduce using rule 80 (argument-name)


State 260

   81 argument-name: identifier "`:`" .

    $default  reduce using rule 81 (argument-name)


State 261

  174 new-expression: "`new`" qname "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 174 (new-expression)


State 262

   77 argument-list: argument-list "," . argument

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 191
    qname                    go to state 40
    fn-start-decl            go to state 49
    argument                 go to state 313
    argument-name            go to state 195
    syntax-expression        go to state 196
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 263

   78 argument: argument-name syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 78 (argument)


State 264

  175 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 175 (new-expression)


State 265

   49 infunction-statement: "`return`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 49 (infunction-statement)


State 266

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier

    "`::`"  shift, and go to state 89
    "`(`"   shift, and go to state 314
    "`{`"   shift, and go to state 128

    braced-statements  go to state 138


State 267

   28 finished-infunction-statement-any: infunction-statement-any "`;`" .

    $default  reduce using rule 28 (finished-infunction-statement-any)


State 268

   26 finished-infunction-statement-any: finished-infunction-statement-any "`;`" .

    $default  reduce using rule 26 (finished-infunction-statement-any)


State 269

   27 finished-infunction-statement-any: finished-infunction-statement-any finished-statement .

    $default  reduce using rule 27 (finished-infunction-statement-any)


State 270

   24 infunction-statement-any: finished-infunction-statement-any infunction-statement .

    $default  reduce using rule 24 (infunction-statement-any)


State 271

   29 braced-statements: "`{`" infunction-statement-set "`}`" .

    $default  reduce using rule 29 (braced-statements)


State 272

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression braced-statements .

    $default  reduce using rule 31 (finished-statement)


State 273

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression braced-statements .

    $default  reduce using rule 32 (finished-statement)


State 274

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" braced-statements .

    $default  reduce using rule 34 (finished-statement)


State 275

   71 using-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression

    "`=>`"  shift, and go to state 315


State 276

   62 enum-decl: qname "`{`" case-list-opt "`}`" .

    $default  reduce using rule 62 (enum-decl)


State 277

   66 case-list: case-list "," . case-decl

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 214
    case-decl   go to state 316


State 278

   88 field: identifier . "`:`" type-expr field-default-value-opt
   89      | identifier . "`=>`" type-expr field-default-value-opt

    "`=>`"  shift, and go to state 317
    "`:`"   shift, and go to state 318


State 279

   68 struct-decl: qname "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 319


State 280

   83 field-list-opt: field-list .
   85 field-list: field-list . "," field

    ","  shift, and go to state 320

    $default  reduce using rule 83 (field-list-opt)


State 281

   84 field-list: field .

    $default  reduce using rule 84 (field-list)


State 282

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 321
    "`{`"   shift, and go to state 128

    braced-statements  go to state 322


State 283

  128 pattern: "`_`" "`...`" concept-expression-list-opt .

    $default  reduce using rule 128 (pattern)


State 284

  115 pattern-field: "`_`" . "`:`" pattern
  123 pattern: "`_`" . subpatterns concept-expression-list-opt
  126        | "`_`" . concept-expression-list-opt
  128        | "`_`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 222
    "`:`"    shift, and go to state 323
    "`(`"    shift, and go to state 223

    $default  reduce using rule 131 (concept-expression-list-opt)

    subpatterns                  go to state 224
    concept-expression           go to state 156
    concept-expression-list-opt  go to state 225
    concept-expression-list      go to state 226


State 285

  118 pattern-field: "`(`" . syntax-expression "`)`" "`:`" pattern
  124 pattern: "`(`" . syntax-expression "`)`" concept-expression-list-opt
  125        | "`(`" . syntax-expression "`)`" "`...`" concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 324
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 286

   53 qname: identifier .
  116 pattern-field: identifier . "`:`" pattern

    "`:`"  shift, and go to state 325

    $default  reduce using rule 53 (qname)


State 287

  117 pattern-field: internal-identifier . "`:`" pattern
  121 pattern: internal-identifier . concept-expression-list-opt
  122        | internal-identifier . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 233
    "`:`"    shift, and go to state 326

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 235
    concept-expression-list      go to state 226


State 288

  111 subpatterns: "`(`" pattern-list . "`)`"
  113 pattern-list: pattern-list . "," pattern-field

    "`)`"  shift, and go to state 327
    ","    shift, and go to state 328


State 289

  112 pattern-list: pattern-field .

    $default  reduce using rule 112 (pattern-list)


State 290

  114 pattern-field: pattern .

    $default  reduce using rule 114 (pattern-field)


State 291

  123 pattern: "`_`" subpatterns concept-expression-list-opt .

    $default  reduce using rule 123 (pattern)


State 292

  124 pattern: "`(`" syntax-expression "`)`" . concept-expression-list-opt
  125        | "`(`" syntax-expression "`)`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 329

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 330
    concept-expression-list      go to state 226


State 293

   98 parameter-decl: identifier internal-identifier-opt "`:`" . pattern parameter-default-value-opt
  101               | identifier internal-identifier-opt "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    identifier                 go to state 39
    internal-identifier        go to state 295
    qname                      go to state 149
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 331
    pattern                    go to state 332
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 294

  122 pattern: internal-identifier "`...`" concept-expression-list-opt .

    $default  reduce using rule 122 (pattern)


State 295

  121 pattern: internal-identifier . concept-expression-list-opt
  122        | internal-identifier . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 233

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 235
    concept-expression-list      go to state 226


State 296

  102 parameter-decl: internal-identifier "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 241

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 333


State 297

   99 parameter-decl: internal-identifier "`:`" pattern . parameter-default-value-opt

    "`=`"  shift, and go to state 241

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 334


State 298

  120 pattern: qname subpatterns-opt "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 142

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 335
    concept-expression-list      go to state 226


State 299

  119 pattern: qname subpatterns-opt concept-expression-list-opt .

    $default  reduce using rule 119 (pattern)


State 300

  181 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" . type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 336


State 301

  180 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 180 (lambda-expression)


State 302

   93 parameter-list: parameter-list "," parameter-decl .

    $default  reduce using rule 93 (parameter-list)


State 303

  108 constraint-expression: constraint-expression-mod type-expr "`...`" .

    $default  reduce using rule 108 (constraint-expression)


State 304

   97 parameter-default-value-opt: "`=`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 97 (parameter-default-value-opt)


State 305

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 337
    "`=>`"  shift, and go to state 338
    "`~>`"  shift, and go to state 339

    $default  reduce using rule 59 (fn-decl)


State 306

  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  185 pack-expression: pack-expression "," identifier "`:`" syntax-expression .
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 185 (pack-expression)


State 307

  193 type-expr: "`(`" pack-expression "`)`" .

    $default  reduce using rule 193 (type-expr)


State 308

  191 type-expr: "`[`" type-expr "`]`" .

    $default  reduce using rule 191 (type-expr)


State 309

  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr
  196          | type-expr "`->`" type-expr .

    $default  reduce using rule 196 (type-expr)


State 310

  194 type-expr: type-expr "`[`" INTEGER . "`]`"

    "`]`"  shift, and go to state 340


State 311

  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  195          | type-expr "`|`" type-expr .
  196          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255

    $default  reduce using rule 195 (type-expr)


State 312

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 337
    "`~>`"  shift, and go to state 339

    $default  reduce using rule 59 (fn-decl)


State 313

   77 argument-list: argument-list "," argument .

    $default  reduce using rule 77 (argument-list)


State 314

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145
    "`~`"               shift, and go to state 146

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 147
    internal-identifier        go to state 148
    qname                      go to state 149
    parameter-list-opt         go to state 341
    parameter-list             go to state 151
    parameter-decl             go to state 152
    constraint-expression-mod  go to state 153
    constraint-expression      go to state 154
    pattern                    go to state 155
    concept-expression         go to state 156
    concept-expression-list    go to state 157


State 315

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 342
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 316

   66 case-list: case-list "," case-decl .

    $default  reduce using rule 66 (case-list)


State 317

   89 field: identifier "`=>`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 343


State 318

   88 field: identifier "`:`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 344


State 319

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 68 (struct-decl)


State 320

   85 field-list: field-list "," . field

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 278
    field       go to state 345


State 321

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 346


State 322

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 37 (finished-statement)


State 323

  115 pattern-field: "`_`" "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145

    identifier               go to state 39
    internal-identifier      go to state 295
    qname                    go to state 149
    pattern                  go to state 347
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 324

  118 pattern-field: "`(`" syntax-expression . "`)`" "`:`" pattern
  124 pattern: "`(`" syntax-expression . "`)`" concept-expression-list-opt
  125        | "`(`" syntax-expression . "`)`" "`...`" concept-expression-list-opt
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`)`"          shift, and go to state 348
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109


State 325

  116 pattern-field: identifier "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145

    identifier               go to state 39
    internal-identifier      go to state 295
    qname                    go to state 149
    pattern                  go to state 349
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 326

  117 pattern-field: internal-identifier "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145

    identifier               go to state 39
    internal-identifier      go to state 295
    qname                    go to state 149
    pattern                  go to state 350
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 327

  111 subpatterns: "`(`" pattern-list "`)`" .

    $default  reduce using rule 111 (subpatterns)


State 328

  113 pattern-list: pattern-list "," . pattern-field

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 284
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 285

    identifier               go to state 286
    internal-identifier      go to state 287
    qname                    go to state 149
    pattern-field            go to state 351
    pattern                  go to state 290
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 329

  125 pattern: "`(`" syntax-expression "`)`" "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 142

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 352
    concept-expression-list      go to state 226


State 330

  124 pattern: "`(`" syntax-expression "`)`" concept-expression-list-opt .

    $default  reduce using rule 124 (pattern)


State 331

  101 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 241

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 353


State 332

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern . parameter-default-value-opt

    "`=`"  shift, and go to state 241

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 354


State 333

  102 parameter-decl: internal-identifier "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 102 (parameter-decl)


State 334

   99 parameter-decl: internal-identifier "`:`" pattern parameter-default-value-opt .

    $default  reduce using rule 99 (parameter-decl)


State 335

  120 pattern: qname subpatterns-opt "`...`" concept-expression-list-opt .

    $default  reduce using rule 120 (pattern)


State 336

  181 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr . braced-statements
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 254
    "`{`"   shift, and go to state 128
    "`[`"   shift, and go to state 255
    "`|`"   shift, and go to state 256

    braced-statements  go to state 355


State 337

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145

    identifier               go to state 39
    internal-identifier      go to state 295
    qname                    go to state 149
    pattern                  go to state 356
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 338

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 357
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 339

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 180
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 181
    "`[`"               shift, and go to state 182
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 183
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 184
    call-expression        go to state 185
    lambda-expression      go to state 186
    type-expr              go to state 358


State 340

  194 type-expr: type-expr "`[`" INTEGER "`]`" .

    $default  reduce using rule 194 (type-expr)


State 341

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements

    "`)`"  shift, and go to state 359


State 342

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 71 (using-decl)


State 343

   89 field: identifier "`=>`" type-expr . field-default-value-opt
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 360
    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255
    "`|`"   shift, and go to state 256

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 361


State 344

   88 field: identifier "`:`" type-expr . field-default-value-opt
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 360
    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255
    "`|`"   shift, and go to state 256

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 362


State 345

   85 field-list: field-list "," field .

    $default  reduce using rule 85 (field-list)


State 346

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 278
    field-list-opt  go to state 363
    field-list      go to state 280
    field           go to state 281


State 347

  115 pattern-field: "`_`" "`:`" pattern .

    $default  reduce using rule 115 (pattern-field)


State 348

  118 pattern-field: "`(`" syntax-expression "`)`" . "`:`" pattern
  124 pattern: "`(`" syntax-expression "`)`" . concept-expression-list-opt
  125        | "`(`" syntax-expression "`)`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 142
    "`...`"  shift, and go to state 329
    "`:`"    shift, and go to state 364

    $default  reduce using rule 131 (concept-expression-list-opt)

    concept-expression           go to state 156
    concept-expression-list-opt  go to state 330
    concept-expression-list      go to state 226


State 349

  116 pattern-field: identifier "`:`" pattern .

    $default  reduce using rule 116 (pattern-field)


State 350

  117 pattern-field: internal-identifier "`:`" pattern .

    $default  reduce using rule 117 (pattern-field)


State 351

  113 pattern-list: pattern-list "," pattern-field .

    $default  reduce using rule 113 (pattern-list)


State 352

  125 pattern: "`(`" syntax-expression "`)`" "`...`" concept-expression-list-opt .

    $default  reduce using rule 125 (pattern)


State 353

  101 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 101 (parameter-decl)


State 354

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern parameter-default-value-opt .

    $default  reduce using rule 98 (parameter-decl)


State 355

  181 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements .

    $default  reduce using rule 181 (lambda-expression)


State 356

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern .

    $default  reduce using rule 61 (fn-decl)


State 357

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 13 (statement)


State 358

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr .
  194 type-expr: type-expr . "`[`" INTEGER "`]`"
  195          | type-expr . "`|`" type-expr
  196          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 254
    "`[`"   shift, and go to state 255
    "`|`"   shift, and go to state 256

    $default  reduce using rule 60 (fn-decl)


State 359

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements

    "`{`"  shift, and go to state 128

    braced-statements  go to state 322


State 360

   87 field-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 365
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 361

   89 field: identifier "`=>`" type-expr field-default-value-opt .

    $default  reduce using rule 89 (field)


State 362

   88 field: identifier "`:`" type-expr field-default-value-opt .

    $default  reduce using rule 88 (field)


State 363

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 366


State 364

  118 pattern-field: "`(`" syntax-expression "`)`" "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 141
    "`@`"               shift, and go to state 142
    "`_`"               shift, and go to state 143
    "`...`"             shift, and go to state 144
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 145

    identifier               go to state 39
    internal-identifier      go to state 295
    qname                    go to state 149
    pattern                  go to state 367
    concept-expression       go to state 156
    concept-expression-list  go to state 157


State 365

   87 field-default-value-opt: "`=`" syntax-expression .
  151 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  153                        | syntax-expression . "`.`" identifier
  154                        | syntax-expression . "`.`" apostrophe-expression
  155                        | syntax-expression . INTEGER_INDEX
  158                        | syntax-expression . "`+`" syntax-expression
  159                        | syntax-expression . "`-`" syntax-expression
  160                        | syntax-expression . "`==`" syntax-expression
  161                        | syntax-expression . "`!=`" syntax-expression
  162                        | syntax-expression . "`..`" syntax-expression
  163                        | syntax-expression . "`&`" syntax-expression
  164                        | syntax-expression . "`|`" syntax-expression
  165                        | syntax-expression . "`&&`" syntax-expression
  166                        | syntax-expression . "`||`" syntax-expression
  186 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 96
    "`==`"         shift, and go to state 98
    "`!=`"         shift, and go to state 99
    "`&&`"         shift, and go to state 100
    "`||`"         shift, and go to state 101
    "`..`"         shift, and go to state 102
    "`...`"        shift, and go to state 103
    "`[`"          shift, and go to state 104
    "`.`"          shift, and go to state 105
    "`+`"          shift, and go to state 106
    "`-`"          shift, and go to state 107
    "`&`"          shift, and go to state 108
    "`|`"          shift, and go to state 109

    $default  reduce using rule 87 (field-default-value-opt)


State 366

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 69 (struct-decl)


State 367

  118 pattern-field: "`(`" syntax-expression "`)`" "`:`" pattern .

    $default  reduce using rule 118 (pattern-field)
