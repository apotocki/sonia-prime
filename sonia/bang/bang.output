Terminals unused in grammar

    COMMENT_BEGIN
    COMMENT_END
    OPERATOR_TERM
    "`->*`"
    "`~>`"
    "`.*`"
    "`++`"
    "`--`"
    "`<<`"
    "`>>`"
    "`<=`"
    "`>=`"
    "`&&`"
    "`||`"
    "`+=`"
    "`-=`"
    "`*=`"
    "`/=`"
    "`%=`"
    "`<<=`"
    "`>>=`"
    "`&=`"
    "`|=`"
    "`^=`"
    "`<`"
    "`>`"
    "`/`"
    "`%`"
    "`~`"
    "`^`"
    "`$`"
    "`?`"
    "`#`"
    AUTO
    THROW
    SIZEOF
    LOWEST
    EXTENDS
    TYPENAME


Grammar

    0 $accept: begin "end of file"

    1 begin: statement_any "end of file"
    2      | finished-statement-any "end of file"

    3 statement_any: %empty
    4              | statement
    5              | finished-statement-any statement

    6 finished-statement-any: finished-statement
    7                       | finished-statement-any "`;`"
    8                       | finished-statement-any finished-statement
    9                       | statement_any "`;`"

   10 statement: EXTERN VAR identifier "`:`" type-expr
   11          | EXTERN "`fn`" fn-decl
   12          | INCLUDE STRING
   13          | fn-start-decl fn-decl "`=>`" syntax-expression
   14          | generic-statement
   15          | STRUCT struct-decl

   16 let-decl: let-decl-start-with-opt-type
   17         | let-decl-start-with-opt-type "`=`" pack-expression

   18 let-decl-start: LET identifier
   19               | LET "weak modifier" identifier

   20 let-decl-start-with-opt-type: let-decl-start
   21                             | let-decl-start "`:`" type-expr

   22 infunction-statement-any: %empty
   23                         | infunction-statement
   24                         | finished-infunction-statement-any infunction-statement

   25 finished-infunction-statement-any: finished-statement
   26                                  | finished-infunction-statement-any "`;`"
   27                                  | finished-infunction-statement-any finished-statement
   28                                  | infunction-statement-any "`;`"

   29 braced-statements: "`{`" infunction-statement-set "`}`"

   30 finished-statement: "`while`" syntax-expression braced-statements
   31                   | "`while`" syntax-expression "`;`" syntax-expression braced-statements
   32                   | "`for`" syntax-expression "`in`" syntax-expression braced-statements
   33                   | "`if`" syntax-expression braced-statements
   34                   | "`if`" syntax-expression braced-statements "`else`" braced-statements
   35                   | fn-start-decl fn-decl braced-statements
   36                   | STRUCT qname braced-statements
   37                   | STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements
   38                   | ENUM enum-decl

   39 infunction-statement-set: infunction-statement-any
   40                         | finished-infunction-statement-any

   41 generic-statement: let-decl
   42                  | USING using-decl
   43                  | "`return`" syntax-expression
   44                  | compound-expression
   45                  | syntax-expression "`=`" syntax-expression

   46 infunction-statement: generic-statement
   47                     | "`break`"
   48                     | "`continue`"

   49 identifier: IDENTIFIER

   50 internal-identifier: INTERNAL_IDENTIFIER

   51 qname: "`::`" identifier
   52      | identifier
   53      | qname "`::`" identifier

   54 fn-start-decl: "`fn`"
   55              | INLINE "`fn`"

   56 fn-name: qname
   57        | "`new`"

   58 fn-decl: fn-name "`(`" parameter-list-opt "`)`"
   59        | fn-name "`(`" parameter-list-opt "`)`" "`->`" type-expr

   60 enum-decl: qname "`{`" case-list-opt "`}`"

   61 case-list-opt: %empty
   62              | case-list

   63 case-list: case-decl
   64          | case-list "," case-decl

   65 case-decl: identifier

   66 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`"
   67            | qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

   68 using-decl: qname "`=>`" syntax-expression
   69           | qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

   70 expression-list: syntax-expression
   71                | expression-list "," syntax-expression

   72 argument-list-opt: %empty
   73                  | argument-list

   74 argument-list: argument
   75              | argument-list "," argument

   76 argument: argument-name syntax-expression
   77         | syntax-expression

   78 argument-name: identifier "`=`"
   79              | identifier "`:`"

   80 field-list-opt: %empty
   81               | field-list

   82 field-list: field
   83           | field-list "," field

   84 field-default-value-opt: %empty
   85                        | "`=`" syntax-expression

   86 field: identifier "`:`" type-expr field-default-value-opt
   87      | identifier "`=>`" type-expr field-default-value-opt

   88 parameter-list-opt: %empty
   89                   | parameter-list

   90 parameter-list: parameter-decl
   91               | parameter-list "," parameter-decl

   92 internal-identifier-opt: %empty
   93                        | internal-identifier

   94 parameter-default-value-opt: %empty
   95                            | "`=`" syntax-expression

   96 parameter-decl: identifier internal-identifier-opt "`:`" parameter-constraint-set parameter-default-value-opt
   97               | identifier internal-identifier-opt "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt
   98               | identifier internal-identifier-opt "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt
   99               | identifier internal-identifier-opt "`=>`" parameter-value-constraint-set
  100               | INTERNAL_IDENTIFIER "`:`" parameter-constraint-set parameter-default-value-opt
  101               | INTERNAL_IDENTIFIER "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt
  102               | INTERNAL_IDENTIFIER "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt
  103               | INTERNAL_IDENTIFIER "`=>`" parameter-value-constraint-set
  104               | INTERNAL_IDENTIFIER "`...`" "`:`" parameter-constraint-set
  105               | INTERNAL_IDENTIFIER "`...`" "`:`" "const modifier" parameter-constraint-set
  106               | INTERNAL_IDENTIFIER "`...`" "`:`" "mut modifier" parameter-constraint-set
  107               | parameter-constraint-set parameter-default-value-opt
  108               | "const modifier" parameter-constraint-set parameter-default-value-opt
  109               | "mut modifier" parameter-constraint-set parameter-default-value-opt
  110               | "`=>`" parameter-value-constraint-set

  111 parameter-constraint-set: parameter-matched-type
  112                         | concept-expression
  113                         | parameter-constraint-set concept-expression

  114 parameter-value-constraint-set: parameter-matched-value
  115                               | concept-expression
  116                               | parameter-value-constraint-set concept-expression

  117 parameter-matched-value: syntax-expression

  118 parameter-matched-type: basic-parameter-matched-type
  119                       | basic-parameter-matched-type "`...`"
  120                       | INTERNAL_IDENTIFIER
  121                       | INTERNAL_IDENTIFIER "`...`"

  122 basic-parameter-matched-type: "`_`"
  123                             | qname
  124                             | qname "`(`" pack-expression "`)`"
  125                             | basic-parameter-matched-type "`|`" basic-parameter-matched-type

  126 concept-expression: "`@`" qname

  127 syntax-expression: INTERNAL_IDENTIFIER
  128                  | syntax-expression-wo-ii

  129 syntax-expression-wo-ii: "nil"
  130                        | "true"
  131                        | "false"
  132                        | INTEGER
  133                        | DECIMAL
  134                        | DECIMAL_S
  135                        | INTEGER_INDEX
  136                        | STRING
  137                        | RESERVED_IDENTIFIER
  138                        | qname
  139                        | "`(`" pack-expression "`)`"
  140                        | "`[`" expression-list "`]`"
  141                        | "`[[`" expression-list "`]]`"
  142                        | syntax-expression "`[`" syntax-expression "`]`"
  143                        | "`.`" identifier
  144                        | syntax-expression "`.`" identifier
  145                        | syntax-expression "`.`" apostrophe-expression
  146                        | syntax-expression INTEGER_INDEX
  147                        | "`!`" syntax-expression
  148                        | "`*`" syntax-expression
  149                        | syntax-expression "`+`" syntax-expression
  150                        | syntax-expression "`-`" syntax-expression
  151                        | syntax-expression "`==`" syntax-expression
  152                        | syntax-expression "`!=`" syntax-expression
  153                        | syntax-expression "`..`" syntax-expression
  154                        | syntax-expression "`&`" syntax-expression
  155                        | syntax-expression "`|`" syntax-expression
  156                        | apostrophe-expression
  157                        | new-expression
  158                        | compound-expression
  159                        | lambda-expression

  160 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE"

  161 new-expression: "`new`" qname
  162               | "`new`" apostrophe-expression
  163               | "`new`" qname "`(`" argument-list-opt "`)`"
  164               | "`new`" apostrophe-expression "`(`" argument-list-opt "`)`"

  165 call-expression: qname "`(`" pack-expression "`)`"
  166                | "mut modifier" "`(`" pack-expression "`)`"
  167                | call-expression "`(`" pack-expression "`)`"
  168                | apostrophe-expression "`(`" pack-expression "`)`"
  169                | lambda-expression "`(`" pack-expression "`)`"

  170 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements
  171                  | fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

  172 pack-expression: syntax-expression
  173                | identifier "`:`" syntax-expression
  174                | pack-expression "," syntax-expression
  175                | pack-expression "," identifier "`:`" syntax-expression

  176 compound-expression: syntax-expression "`...`"
  177                    | call-expression

  178 type-expr: qname
  179          | call-expression
  180          | INTERNAL_IDENTIFIER
  181          | "`[`" type-expr "`]`"
  182          | "`(`" "`)`"
  183          | "`(`" pack-expression "`)`"
  184          | type-expr "`[`" INTEGER "`]`"
  185          | type-expr "`|`" type-expr
  186          | type-expr "`->`" type-expr


Terminals, with rules where they appear

    "end of file" (0) 0 1 2
    error (256)
    COMMENT_BEGIN (258)
    COMMENT_END (259)
    STRING <sonia::lang::bang::annotated_string_view> (260) 12 136
    IDENTIFIER <sonia::lang::bang::annotated_string_view> (261) 49
    INTERNAL_IDENTIFIER <sonia::lang::bang::annotated_string_view> (262) 50 100 101 102 103 104 105 106 120 121 127 180
    RESERVED_IDENTIFIER <sonia::lang::bang::annotated_string_view> (263) 137
    INTEGER_INDEX <sonia::lang::bang::annotated_string_view> (264) 135 146
    INTEGER <sonia::lang::bang::annotated_integer> (265) 132 184
    DECIMAL <sonia::lang::bang::annotated_decimal> (266) 133
    DECIMAL_S <sonia::lang::bang::annotated_decimal> (267) 134
    OPERATOR_TERM <sonia::string_view> (268)
    "`=`" <sonia::lang::lex::resource_location> (269) 17 45 78 85 95
    "APOSTROPHE" (270) 160
    "`@`" (271) 126
    "`_`" <sonia::lang::lex::resource_location> (272) 122
    "`->*`" (273)
    "`->`" (274) 59 171 186
    "`=>`" (275) 13 66 67 68 69 87 99 103 110
    "`~>`" (276)
    "`.*`" (277)
    "`++`" (278)
    "`--`" (279)
    "`<<`" (280)
    "`>>`" (281)
    "`<=`" (282)
    "`>=`" (283)
    "`==`" <sonia::lang::lex::resource_location> (284) 151
    "`!=`" <sonia::lang::lex::resource_location> (285) 152
    "`&&`" <sonia::lang::lex::resource_location> (286)
    "`||`" <sonia::lang::lex::resource_location> (287)
    "`..`" <sonia::lang::lex::resource_location> (288) 153
    "`...`" <sonia::lang::lex::resource_location> (289) 104 105 106 119 121 176
    "`+=`" (290)
    "`-=`" (291)
    "`*=`" (292)
    "`/=`" (293)
    "`%=`" (294)
    "`<<=`" (295)
    "`>>=`" (296)
    "`&=`" (297)
    "`|=`" (298)
    "`^=`" (299)
    "`:`" (300) 10 21 79 86 96 97 98 100 101 102 104 105 106 173 175
    "`::`" (301) 51 53
    "`(`" <sonia::lang::lex::resource_location> (302) 37 58 59 66 67 69 124 139 163 164 165 166 167 168 169 170 171 182 183
    "`)`" (303) 37 58 59 66 67 69 124 139 163 164 165 166 167 168 169 170 171 182 183
    "`{`" <sonia::lang::lex::resource_location> (304) 29 60
    "`}`" (305) 29 60
    "`[`" <sonia::lang::lex::resource_location> (306) 140 142 181 184
    "`]`" (307) 140 142 181 184
    "`[[`" <sonia::lang::lex::resource_location> (308) 141
    "`]]`" (309) 141
    "`<`" (310)
    "`>`" (311)
    "`;`" (312) 7 9 26 28 31
    "`.`" <sonia::lang::lex::resource_location> (313) 143 144 145
    "`+`" <sonia::lang::lex::resource_location> (314) 149
    "`-`" <sonia::lang::lex::resource_location> (315) 150
    "`*`" <sonia::lang::lex::resource_location> (316) 148
    "`/`" (317)
    "`%`" (318)
    "`&`" <sonia::lang::lex::resource_location> (319) 154
    "`|`" <sonia::lang::lex::resource_location> (320) 125 155 185
    "`!`" <sonia::lang::lex::resource_location> (321) 147
    "`~`" (322)
    "`^`" (323)
    "," (324) 64 71 75 83 91 174 175
    "`$`" (325)
    "`?`" (326)
    "`#`" (327)
    LET (328) 18 19
    VAR (329) 10
    EXTERN (330) 10 11
    "`new`" <sonia::lang::lex::resource_location> (331) 57 161 162 163 164
    "`while`" (332) 30 31
    "`for`" (333) 32
    "`in`" (334) 32
    "`if`" (335) 33 34
    "`else`" (336) 34
    "`continue`" <sonia::lang::lex::resource_location> (337) 48
    "`break`" <sonia::lang::lex::resource_location> (338) 47
    "`return`" (339) 43
    AUTO (340)
    USING (341) 42
    THROW (342)
    SIZEOF (343)
    LOWEST (344)
    DEREF (345)
    INCLUDE (346) 12
    INLINE (347) 55
    "`fn`" <sonia::lang::lex::resource_location> (348) 11 54 55
    ENUM (349) 38
    STRUCT (350) 15 36 37
    EXTENDS (351)
    TYPENAME (352)
    "weak modifier" (353) 19
    "const modifier" (354) 97 101 105 108
    "mut modifier" <sonia::lang::lex::resource_location> (355) 98 102 106 109 166
    "nil" <annotated_nil> (356) 129
    "true" <annotated_bool> (357) 130
    "false" <annotated_bool> (358) 131


Nonterminals, with rules where they appear

    $accept (104)
        on left: 0
    begin (105)
        on left: 1 2
        on right: 0
    statement_any <managed_statement_list> (106)
        on left: 3 4 5
        on right: 1 9
    finished-statement-any <managed_statement_list> (107)
        on left: 6 7 8 9
        on right: 2 5 7 8
    statement <statement> (108)
        on left: 10 11 12 13 14 15
        on right: 4 5
    let-decl <let_statement> (109)
        on left: 16 17
        on right: 41
    let-decl-start <let_statement> (110)
        on left: 18 19
        on right: 20 21
    let-decl-start-with-opt-type <let_statement> (111)
        on left: 20 21
        on right: 16 17
    infunction-statement-any <managed_statement_list> (112)
        on left: 22 23 24
        on right: 28 39
    finished-infunction-statement-any <managed_statement_list> (113)
        on left: 25 26 27 28
        on right: 24 26 27 40
    braced-statements <managed_statement_list> (114)
        on left: 29
        on right: 30 31 32 33 34 35 36 37 170 171
    finished-statement <finished_statement_type> (115)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 6 8 25 27
    infunction-statement-set <managed_statement_list> (116)
        on left: 39 40
        on right: 29
    generic-statement <generic_statement_type> (117)
        on left: 41 42 43 44 45
        on right: 14 46
    infunction-statement <statement> (118)
        on left: 46 47 48
        on right: 23 24
    identifier <sonia::lang::bang::annotated_identifier> (119)
        on left: 49
        on right: 10 18 19 51 52 53 65 78 79 86 87 96 97 98 99 143 144 173 175
    internal-identifier <sonia::lang::bang::annotated_identifier> (120)
        on left: 50
        on right: 93
    qname <sonia::lang::bang::annotated_qname> (121)
        on left: 51 52 53
        on right: 36 37 53 56 60 66 67 68 69 123 124 126 138 161 163 165 178
    fn-start-decl <fn_kind> (122)
        on left: 54 55
        on right: 13 35 170 171
    fn-name <sonia::lang::bang::annotated_qname> (123)
        on left: 56 57
        on right: 58 59
    fn-decl <fn_pure_t> (124)
        on left: 58 59
        on right: 11 13 35
    enum-decl <enum_decl> (125)
        on left: 60
        on right: 38
    case-list-opt <std::vector<sonia::lang::bang::identifier>> (126)
        on left: 61 62
        on right: 60
    case-list <std::vector<sonia::lang::bang::identifier>> (127)
        on left: 63 64
        on right: 62 64
    case-decl <sonia::lang::bang::identifier> (128)
        on left: 65
        on right: 63 64
    struct-decl <struct_decl> (129)
        on left: 66 67
        on right: 15
    using-decl <using_decl> (130)
        on left: 68 69
        on right: 42
    expression-list <expression_list_t> (131)
        on left: 70 71
        on right: 71 140 141
    argument-list-opt <named_expression_list_t> (132)
        on left: 72 73
        on right: 163 164
    argument-list <named_expression_list_t> (133)
        on left: 74 75
        on right: 73 75
    argument <named_expression_t> (134)
        on left: 76 77
        on right: 74 75
    argument-name <sonia::lang::bang::annotated_identifier> (135)
        on left: 78 79
        on right: 76
    field-list-opt <field_list_t> (136)
        on left: 80 81
        on right: 66 67
    field-list <field_list_t> (137)
        on left: 82 83
        on right: 81 83
    field-default-value-opt <sonia::optional<syntax_expression_t>> (138)
        on left: 84 85
        on right: 86 87
    field <field_t> (139)
        on left: 86 87
        on right: 82 83
    parameter-list-opt <parameter_list_t> (140)
        on left: 88 89
        on right: 37 58 59 67 69 170 171
    parameter-list <parameter_list_t> (141)
        on left: 90 91
        on right: 89 91
    internal-identifier-opt <sonia::lang::bang::annotated_identifier> (142)
        on left: 92 93
        on right: 96 97 98 99
    parameter-default-value-opt <sonia::optional<syntax_expression_t>> (143)
        on left: 94 95
        on right: 96 97 98 100 101 102 107 108 109
    parameter-decl <parameter_t> (144)
        on left: 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110
        on right: 90 91
    parameter-constraint-set <parameter_constraint_set_t> (145)
        on left: 111 112 113
        on right: 96 97 98 100 101 102 104 105 106 107 108 109 113
    parameter-value-constraint-set <parameter_constraint_set_t> (146)
        on left: 114 115 116
        on right: 99 103 110 116
    parameter-matched-value <syntax_expression_t> (147)
        on left: 117
        on right: 114
    parameter-matched-type <syntax_expression_t> (148)
        on left: 118 119 120 121
        on right: 111
    basic-parameter-matched-type <syntax_expression_t> (149)
        on left: 122 123 124 125
        on right: 118 119 125
    concept-expression <syntax_expression_t> (150)
        on left: 126
        on right: 112 113 115 116
    syntax-expression <syntax_expression_t> (151)
        on left: 127 128
        on right: 13 30 31 32 33 34 43 45 68 69 70 71 76 77 85 95 117 142 144 145 146 147 148 149 150 151 152 153 154 155 160 172 173 174 175 176
    syntax-expression-wo-ii <syntax_expression_t> (152)
        on left: 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159
        on right: 128
    apostrophe-expression <syntax_expression_t> (153)
        on left: 160
        on right: 145 156 162 164 168
    new-expression <syntax_expression_t> (154)
        on left: 161 162 163 164
        on right: 157
    call-expression <syntax_expression_t> (155)
        on left: 165 166 167 168 169
        on right: 167 177 179
    lambda-expression <syntax_expression_t> (156)
        on left: 170 171
        on right: 159 169
    pack-expression <named_expression_list_t> (157)
        on left: 172 173 174 175
        on right: 17 124 139 165 166 167 168 169 174 175 183
    compound-expression <syntax_expression_t> (158)
        on left: 176 177
        on right: 44 158
    type-expr <syntax_expression_t> (159)
        on left: 178 179 180 181 182 183 184 185 186
        on right: 10 21 59 86 87 171 181 184 185 186


State 0

    0 $accept: . begin "end of file"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    LET                  shift, and go to state 17
    EXTERN               shift, and go to state 18
    "`new`"              shift, and go to state 19
    "`while`"            shift, and go to state 20
    "`for`"              shift, and go to state 21
    "`if`"               shift, and go to state 22
    "`return`"           shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 3 (statement_any)

    begin                         go to state 34
    statement_any                 go to state 35
    finished-statement-any        go to state 36
    statement                     go to state 37
    let-decl                      go to state 38
    let-decl-start                go to state 39
    let-decl-start-with-opt-type  go to state 40
    finished-statement            go to state 41
    generic-statement             go to state 42
    identifier                    go to state 43
    qname                         go to state 44
    fn-start-decl                 go to state 45
    syntax-expression             go to state 46
    syntax-expression-wo-ii       go to state 47
    apostrophe-expression         go to state 48
    new-expression                go to state 49
    call-expression               go to state 50
    lambda-expression             go to state 51
    compound-expression           go to state 52


State 1

  136 syntax-expression-wo-ii: STRING .

    $default  reduce using rule 136 (syntax-expression-wo-ii)


State 2

   49 identifier: IDENTIFIER .

    $default  reduce using rule 49 (identifier)


State 3

  127 syntax-expression: INTERNAL_IDENTIFIER .

    $default  reduce using rule 127 (syntax-expression)


State 4

  137 syntax-expression-wo-ii: RESERVED_IDENTIFIER .

    $default  reduce using rule 137 (syntax-expression-wo-ii)


State 5

  135 syntax-expression-wo-ii: INTEGER_INDEX .

    $default  reduce using rule 135 (syntax-expression-wo-ii)


State 6

  132 syntax-expression-wo-ii: INTEGER .

    $default  reduce using rule 132 (syntax-expression-wo-ii)


State 7

  133 syntax-expression-wo-ii: DECIMAL .

    $default  reduce using rule 133 (syntax-expression-wo-ii)


State 8

  134 syntax-expression-wo-ii: DECIMAL_S .

    $default  reduce using rule 134 (syntax-expression-wo-ii)


State 9

  160 apostrophe-expression: "APOSTROPHE" . syntax-expression "APOSTROPHE"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 54
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 10

   51 qname: "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 56


State 11

  139 syntax-expression-wo-ii: "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 59
    compound-expression      go to state 55


State 12

  140 syntax-expression-wo-ii: "`[`" . expression-list "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    expression-list          go to state 60
    syntax-expression        go to state 61
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 13

  141 syntax-expression-wo-ii: "`[[`" . expression-list "`]]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    expression-list          go to state 62
    syntax-expression        go to state 61
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 14

  143 syntax-expression-wo-ii: "`.`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 63


State 15

  148 syntax-expression-wo-ii: "`*`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 64
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 16

  147 syntax-expression-wo-ii: "`!`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 65
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 17

   18 let-decl-start: LET . identifier
   19               | LET . "weak modifier" identifier

    IDENTIFIER       shift, and go to state 2
    "weak modifier"  shift, and go to state 66

    identifier  go to state 67


State 18

   10 statement: EXTERN . VAR identifier "`:`" type-expr
   11          | EXTERN . "`fn`" fn-decl

    VAR     shift, and go to state 68
    "`fn`"  shift, and go to state 69


State 19

  161 new-expression: "`new`" . qname
  162               | "`new`" . apostrophe-expression
  163               | "`new`" . qname "`(`" argument-list-opt "`)`"
  164               | "`new`" . apostrophe-expression "`(`" argument-list-opt "`)`"

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 9
    "`::`"        shift, and go to state 10

    identifier             go to state 43
    qname                  go to state 70
    apostrophe-expression  go to state 71


State 20

   30 finished-statement: "`while`" . syntax-expression braced-statements
   31                   | "`while`" . syntax-expression "`;`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 72
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 21

   32 finished-statement: "`for`" . syntax-expression "`in`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 73
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 22

   33 finished-statement: "`if`" . syntax-expression braced-statements
   34                   | "`if`" . syntax-expression braced-statements "`else`" braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 74
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 23

   43 generic-statement: "`return`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 75
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 24

   42 generic-statement: USING . using-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10

    identifier  go to state 43
    qname       go to state 76
    using-decl  go to state 77


State 25

   12 statement: INCLUDE . STRING

    STRING  shift, and go to state 78


State 26

   55 fn-start-decl: INLINE . "`fn`"

    "`fn`"  shift, and go to state 79


State 27

   54 fn-start-decl: "`fn`" .

    $default  reduce using rule 54 (fn-start-decl)


State 28

   38 finished-statement: ENUM . enum-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10

    identifier  go to state 43
    qname       go to state 80
    enum-decl   go to state 81


State 29

   15 statement: STRUCT . struct-decl
   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10

    identifier   go to state 43
    qname        go to state 82
    struct-decl  go to state 83


State 30

  166 call-expression: "mut modifier" . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 84


State 31

  129 syntax-expression-wo-ii: "nil" .

    $default  reduce using rule 129 (syntax-expression-wo-ii)


State 32

  130 syntax-expression-wo-ii: "true" .

    $default  reduce using rule 130 (syntax-expression-wo-ii)


State 33

  131 syntax-expression-wo-ii: "false" .

    $default  reduce using rule 131 (syntax-expression-wo-ii)


State 34

    0 $accept: begin . "end of file"

    "end of file"  shift, and go to state 85


State 35

    1 begin: statement_any . "end of file"
    9 finished-statement-any: statement_any . "`;`"

    "end of file"  shift, and go to state 86
    "`;`"          shift, and go to state 87


State 36

    2 begin: finished-statement-any . "end of file"
    5 statement_any: finished-statement-any . statement
    7 finished-statement-any: finished-statement-any . "`;`"
    8                       | finished-statement-any . finished-statement

    "end of file"        shift, and go to state 88
    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`;`"                shift, and go to state 89
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    LET                  shift, and go to state 17
    EXTERN               shift, and go to state 18
    "`new`"              shift, and go to state 19
    "`while`"            shift, and go to state 20
    "`for`"              shift, and go to state 21
    "`if`"               shift, and go to state 22
    "`return`"           shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    statement                     go to state 90
    let-decl                      go to state 38
    let-decl-start                go to state 39
    let-decl-start-with-opt-type  go to state 40
    finished-statement            go to state 91
    generic-statement             go to state 42
    identifier                    go to state 43
    qname                         go to state 44
    fn-start-decl                 go to state 45
    syntax-expression             go to state 46
    syntax-expression-wo-ii       go to state 47
    apostrophe-expression         go to state 48
    new-expression                go to state 49
    call-expression               go to state 50
    lambda-expression             go to state 51
    compound-expression           go to state 52


State 37

    4 statement_any: statement .

    $default  reduce using rule 4 (statement_any)


State 38

   41 generic-statement: let-decl .

    $default  reduce using rule 41 (generic-statement)


State 39

   20 let-decl-start-with-opt-type: let-decl-start .
   21                             | let-decl-start . "`:`" type-expr

    "`:`"  shift, and go to state 92

    $default  reduce using rule 20 (let-decl-start-with-opt-type)


State 40

   16 let-decl: let-decl-start-with-opt-type .
   17         | let-decl-start-with-opt-type . "`=`" pack-expression

    "`=`"  shift, and go to state 93

    $default  reduce using rule 16 (let-decl)


State 41

    6 finished-statement-any: finished-statement .

    $default  reduce using rule 6 (finished-statement-any)


State 42

   14 statement: generic-statement .

    $default  reduce using rule 14 (statement)


State 43

   52 qname: identifier .

    $default  reduce using rule 52 (qname)


State 44

   53 qname: qname . "`::`" identifier
  138 syntax-expression-wo-ii: qname .
  165 call-expression: qname . "`(`" pack-expression "`)`"

    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 95

    $default  reduce using rule 138 (syntax-expression-wo-ii)


State 45

   13 statement: fn-start-decl . fn-decl "`=>`" syntax-expression
   35 finished-statement: fn-start-decl . fn-decl braced-statements
  170 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  171                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10
    "`(`"       shift, and go to state 96
    "`new`"     shift, and go to state 97

    identifier  go to state 43
    qname       go to state 98
    fn-name     go to state 99
    fn-decl     go to state 100


State 46

   45 generic-statement: syntax-expression . "`=`" syntax-expression
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`=`"          shift, and go to state 102
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 47

  128 syntax-expression: syntax-expression-wo-ii .

    $default  reduce using rule 128 (syntax-expression)


State 48

  156 syntax-expression-wo-ii: apostrophe-expression .
  168 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 113

    $default  reduce using rule 156 (syntax-expression-wo-ii)


State 49

  157 syntax-expression-wo-ii: new-expression .

    $default  reduce using rule 157 (syntax-expression-wo-ii)


State 50

  167 call-expression: call-expression . "`(`" pack-expression "`)`"
  177 compound-expression: call-expression .

    "`(`"  shift, and go to state 114

    $default  reduce using rule 177 (compound-expression)


State 51

  159 syntax-expression-wo-ii: lambda-expression .
  169 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 115

    $default  reduce using rule 159 (syntax-expression-wo-ii)


State 52

   44 generic-statement: compound-expression .
  158 syntax-expression-wo-ii: compound-expression .

    "end of file"  reduce using rule 44 (generic-statement)
    "`}`"          reduce using rule 44 (generic-statement)
    "`;`"          reduce using rule 44 (generic-statement)
    $default       reduce using rule 158 (syntax-expression-wo-ii)


State 53

  170 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  171                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    "`(`"  shift, and go to state 96


State 54

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  160 apostrophe-expression: "APOSTROPHE" syntax-expression . "APOSTROPHE"
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "APOSTROPHE"   shift, and go to state 116
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 55

  158 syntax-expression-wo-ii: compound-expression .

    $default  reduce using rule 158 (syntax-expression-wo-ii)


State 56

   51 qname: "`::`" identifier .

    $default  reduce using rule 51 (qname)


State 57

   52 qname: identifier .
  173 pack-expression: identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 117

    $default  reduce using rule 52 (qname)


State 58

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  172 pack-expression: syntax-expression .
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 172 (pack-expression)


State 59

  139 syntax-expression-wo-ii: "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 118
    ","    shift, and go to state 119


State 60

   71 expression-list: expression-list . "," syntax-expression
  140 syntax-expression-wo-ii: "`[`" expression-list . "`]`"

    "`]`"  shift, and go to state 120
    ","    shift, and go to state 121


State 61

   70 expression-list: syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 70 (expression-list)


State 62

   71 expression-list: expression-list . "," syntax-expression
  141 syntax-expression-wo-ii: "`[[`" expression-list . "`]]`"

    "`]]`"  shift, and go to state 122
    ","     shift, and go to state 121


State 63

  143 syntax-expression-wo-ii: "`.`" identifier .

    $default  reduce using rule 143 (syntax-expression-wo-ii)


State 64

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  148                        | "`*`" syntax-expression .
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 148 (syntax-expression-wo-ii)


State 65

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  147                        | "`!`" syntax-expression .
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 147 (syntax-expression-wo-ii)


State 66

   19 let-decl-start: LET "weak modifier" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 123


State 67

   18 let-decl-start: LET identifier .

    $default  reduce using rule 18 (let-decl-start)


State 68

   10 statement: EXTERN VAR . identifier "`:`" type-expr

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 124


State 69

   11 statement: EXTERN "`fn`" . fn-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10
    "`new`"     shift, and go to state 97

    identifier  go to state 43
    qname       go to state 98
    fn-name     go to state 99
    fn-decl     go to state 125


State 70

   53 qname: qname . "`::`" identifier
  161 new-expression: "`new`" qname .
  163               | "`new`" qname . "`(`" argument-list-opt "`)`"

    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 126

    $default  reduce using rule 161 (new-expression)


State 71

  162 new-expression: "`new`" apostrophe-expression .
  164               | "`new`" apostrophe-expression . "`(`" argument-list-opt "`)`"

    "`(`"  shift, and go to state 127

    $default  reduce using rule 162 (new-expression)


State 72

   30 finished-statement: "`while`" syntax-expression . braced-statements
   31                   | "`while`" syntax-expression . "`;`" syntax-expression braced-statements
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 107
    "`;`"          shift, and go to state 129
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 130


State 73

   32 finished-statement: "`for`" syntax-expression . "`in`" syntax-expression braced-statements
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112
    "`in`"         shift, and go to state 131


State 74

   33 finished-statement: "`if`" syntax-expression . braced-statements
   34                   | "`if`" syntax-expression . braced-statements "`else`" braced-statements
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 132


State 75

   43 generic-statement: "`return`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 43 (generic-statement)


State 76

   53 qname: qname . "`::`" identifier
   68 using-decl: qname . "`=>`" syntax-expression
   69           | qname . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

    "`=>`"  shift, and go to state 133
    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 134


State 77

   42 generic-statement: USING using-decl .

    $default  reduce using rule 42 (generic-statement)


State 78

   12 statement: INCLUDE STRING .

    $default  reduce using rule 12 (statement)


State 79

   55 fn-start-decl: INLINE "`fn`" .

    $default  reduce using rule 55 (fn-start-decl)


State 80

   53 qname: qname . "`::`" identifier
   60 enum-decl: qname . "`{`" case-list-opt "`}`"

    "`::`"  shift, and go to state 94
    "`{`"   shift, and go to state 135


State 81

   38 finished-statement: ENUM enum-decl .

    $default  reduce using rule 38 (finished-statement)


State 82

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   53 qname: qname . "`::`" identifier
   66 struct-decl: qname . "`=>`" "`(`" field-list-opt "`)`"
   67            | qname . "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 136
    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 137
    "`{`"   shift, and go to state 128

    braced-statements  go to state 138


State 83

   15 statement: STRUCT struct-decl .

    $default  reduce using rule 15 (statement)


State 84

  166 call-expression: "mut modifier" "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 139
    compound-expression      go to state 55


State 85

    0 $accept: begin "end of file" .

    $default  accept


State 86

    1 begin: statement_any "end of file" .

    $default  reduce using rule 1 (begin)


State 87

    9 finished-statement-any: statement_any "`;`" .

    $default  reduce using rule 9 (finished-statement-any)


State 88

    2 begin: finished-statement-any "end of file" .

    $default  reduce using rule 2 (begin)


State 89

    7 finished-statement-any: finished-statement-any "`;`" .

    $default  reduce using rule 7 (finished-statement-any)


State 90

    5 statement_any: finished-statement-any statement .

    $default  reduce using rule 5 (statement_any)


State 91

    8 finished-statement-any: finished-statement-any finished-statement .

    $default  reduce using rule 8 (finished-statement-any)


State 92

   21 let-decl-start-with-opt-type: let-decl-start "`:`" . type-expr

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 147


State 93

   17 let-decl: let-decl-start-with-opt-type "`=`" . pack-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 148
    compound-expression      go to state 55


State 94

   53 qname: qname "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 149


State 95

  165 call-expression: qname "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 150
    compound-expression      go to state 55


State 96

  170 lambda-expression: fn-start-decl "`(`" . parameter-list-opt "`)`" braced-statements
  171                  | fn-start-decl "`(`" . parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 151
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`=>`"               shift, and go to state 154
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 155
    "mut modifier"       shift, and go to state 156

    $default  reduce using rule 88 (parameter-list-opt)

    identifier                    go to state 157
    qname                         go to state 158
    parameter-list-opt            go to state 159
    parameter-list                go to state 160
    parameter-decl                go to state 161
    parameter-constraint-set      go to state 162
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 97

   57 fn-name: "`new`" .

    $default  reduce using rule 57 (fn-name)


State 98

   53 qname: qname . "`::`" identifier
   56 fn-name: qname .

    "`::`"  shift, and go to state 94

    $default  reduce using rule 56 (fn-name)


State 99

   58 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   59        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" type-expr

    "`(`"  shift, and go to state 166


State 100

   13 statement: fn-start-decl fn-decl . "`=>`" syntax-expression
   35 finished-statement: fn-start-decl fn-decl . braced-statements

    "`=>`"  shift, and go to state 167
    "`{`"   shift, and go to state 128

    braced-statements  go to state 168


State 101

  146 syntax-expression-wo-ii: syntax-expression INTEGER_INDEX .

    $default  reduce using rule 146 (syntax-expression-wo-ii)


State 102

   45 generic-statement: syntax-expression "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 169
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 103

  151 syntax-expression-wo-ii: syntax-expression "`==`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 170
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 104

  152 syntax-expression-wo-ii: syntax-expression "`!=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 171
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 105

  153 syntax-expression-wo-ii: syntax-expression "`..`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 172
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 106

  176 compound-expression: syntax-expression "`...`" .

    $default  reduce using rule 176 (compound-expression)


State 107

  142 syntax-expression-wo-ii: syntax-expression "`[`" . syntax-expression "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 173
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 108

  144 syntax-expression-wo-ii: syntax-expression "`.`" . identifier
  145                        | syntax-expression "`.`" . apostrophe-expression

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 9

    identifier             go to state 174
    apostrophe-expression  go to state 175


State 109

  149 syntax-expression-wo-ii: syntax-expression "`+`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 176
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 110

  150 syntax-expression-wo-ii: syntax-expression "`-`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 177
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 111

  154 syntax-expression-wo-ii: syntax-expression "`&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 178
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 112

  155 syntax-expression-wo-ii: syntax-expression "`|`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 179
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 113

  168 call-expression: apostrophe-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 180
    compound-expression      go to state 55


State 114

  167 call-expression: call-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 181
    compound-expression      go to state 55


State 115

  169 call-expression: lambda-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 182
    compound-expression      go to state 55


State 116

  160 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE" .

    $default  reduce using rule 160 (apostrophe-expression)


State 117

  173 pack-expression: identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 183
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 118

  139 syntax-expression-wo-ii: "`(`" pack-expression "`)`" .

    $default  reduce using rule 139 (syntax-expression-wo-ii)


State 119

  174 pack-expression: pack-expression "," . syntax-expression
  175                | pack-expression "," . identifier "`:`" syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 184
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 185
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 120

  140 syntax-expression-wo-ii: "`[`" expression-list "`]`" .

    $default  reduce using rule 140 (syntax-expression-wo-ii)


State 121

   71 expression-list: expression-list "," . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 186
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 122

  141 syntax-expression-wo-ii: "`[[`" expression-list "`]]`" .

    $default  reduce using rule 141 (syntax-expression-wo-ii)


State 123

   19 let-decl-start: LET "weak modifier" identifier .

    $default  reduce using rule 19 (let-decl-start)


State 124

   10 statement: EXTERN VAR identifier . "`:`" type-expr

    "`:`"  shift, and go to state 187


State 125

   11 statement: EXTERN "`fn`" fn-decl .

    $default  reduce using rule 11 (statement)


State 126

  163 new-expression: "`new`" qname "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 72 (argument-list-opt)

    identifier               go to state 188
    qname                    go to state 44
    fn-start-decl            go to state 53
    argument-list-opt        go to state 189
    argument-list            go to state 190
    argument                 go to state 191
    argument-name            go to state 192
    syntax-expression        go to state 193
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 127

  164 new-expression: "`new`" apostrophe-expression "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 72 (argument-list-opt)

    identifier               go to state 188
    qname                    go to state 44
    fn-start-decl            go to state 53
    argument-list-opt        go to state 194
    argument-list            go to state 190
    argument                 go to state 191
    argument-name            go to state 192
    syntax-expression        go to state 193
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 128

   29 braced-statements: "`{`" . infunction-statement-set "`}`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    LET                  shift, and go to state 17
    "`new`"              shift, and go to state 19
    "`while`"            shift, and go to state 20
    "`for`"              shift, and go to state 21
    "`if`"               shift, and go to state 22
    "`continue`"         shift, and go to state 195
    "`break`"            shift, and go to state 196
    "`return`"           shift, and go to state 23
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 197
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 22 (infunction-statement-any)

    let-decl                           go to state 38
    let-decl-start                     go to state 39
    let-decl-start-with-opt-type       go to state 40
    infunction-statement-any           go to state 198
    finished-infunction-statement-any  go to state 199
    finished-statement                 go to state 200
    infunction-statement-set           go to state 201
    generic-statement                  go to state 202
    infunction-statement               go to state 203
    identifier                         go to state 43
    qname                              go to state 44
    fn-start-decl                      go to state 204
    syntax-expression                  go to state 46
    syntax-expression-wo-ii            go to state 47
    apostrophe-expression              go to state 48
    new-expression                     go to state 49
    call-expression                    go to state 50
    lambda-expression                  go to state 51
    compound-expression                go to state 52


State 129

   31 finished-statement: "`while`" syntax-expression "`;`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 205
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 130

   30 finished-statement: "`while`" syntax-expression braced-statements .

    $default  reduce using rule 30 (finished-statement)


State 131

   32 finished-statement: "`for`" syntax-expression "`in`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 206
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 132

   33 finished-statement: "`if`" syntax-expression braced-statements .
   34                   | "`if`" syntax-expression braced-statements . "`else`" braced-statements

    "`else`"  shift, and go to state 207

    $default  reduce using rule 33 (finished-statement)


State 133

   68 using-decl: qname "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 208
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 134

   69 using-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 151
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`=>`"               shift, and go to state 154
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 155
    "mut modifier"       shift, and go to state 156

    $default  reduce using rule 88 (parameter-list-opt)

    identifier                    go to state 157
    qname                         go to state 158
    parameter-list-opt            go to state 209
    parameter-list                go to state 160
    parameter-decl                go to state 161
    parameter-constraint-set      go to state 162
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 135

   60 enum-decl: qname "`{`" . case-list-opt "`}`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 61 (case-list-opt)

    identifier     go to state 210
    case-list-opt  go to state 211
    case-list      go to state 212
    case-decl      go to state 213


State 136

   66 struct-decl: qname "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 214


State 137

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements
   67 struct-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 151
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`=>`"               shift, and go to state 154
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 155
    "mut modifier"       shift, and go to state 156

    $default  reduce using rule 88 (parameter-list-opt)

    identifier                    go to state 157
    qname                         go to state 158
    parameter-list-opt            go to state 215
    parameter-list                go to state 160
    parameter-decl                go to state 161
    parameter-constraint-set      go to state 162
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 138

   36 finished-statement: STRUCT qname braced-statements .

    $default  reduce using rule 36 (finished-statement)


State 139

  166 call-expression: "mut modifier" "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 216
    ","    shift, and go to state 119


State 140

  180 type-expr: INTERNAL_IDENTIFIER .

    $default  reduce using rule 180 (type-expr)


State 141

  182 type-expr: "`(`" . "`)`"
  183          | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`)`"                shift, and go to state 217
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 218
    compound-expression      go to state 55


State 142

  181 type-expr: "`[`" . type-expr "`]`"

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 219


State 143

   53 qname: qname . "`::`" identifier
  165 call-expression: qname . "`(`" pack-expression "`)`"
  178 type-expr: qname .

    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 95

    $default  reduce using rule 178 (type-expr)


State 144

  168 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 113


State 145

  167 call-expression: call-expression . "`(`" pack-expression "`)`"
  179 type-expr: call-expression .

    "`(`"  shift, and go to state 114

    $default  reduce using rule 179 (type-expr)


State 146

  169 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 115


State 147

   21 let-decl-start-with-opt-type: let-decl-start "`:`" type-expr .
  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221
    "`|`"   shift, and go to state 222

    $default  reduce using rule 21 (let-decl-start-with-opt-type)


State 148

   17 let-decl: let-decl-start-with-opt-type "`=`" pack-expression .
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 119

    $default  reduce using rule 17 (let-decl)


State 149

   53 qname: qname "`::`" identifier .

    $default  reduce using rule 53 (qname)


State 150

  165 call-expression: qname "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 223
    ","    shift, and go to state 119


State 151

  100 parameter-decl: INTERNAL_IDENTIFIER . "`:`" parameter-constraint-set parameter-default-value-opt
  101               | INTERNAL_IDENTIFIER . "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt
  102               | INTERNAL_IDENTIFIER . "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt
  103               | INTERNAL_IDENTIFIER . "`=>`" parameter-value-constraint-set
  104               | INTERNAL_IDENTIFIER . "`...`" "`:`" parameter-constraint-set
  105               | INTERNAL_IDENTIFIER . "`...`" "`:`" "const modifier" parameter-constraint-set
  106               | INTERNAL_IDENTIFIER . "`...`" "`:`" "mut modifier" parameter-constraint-set
  120 parameter-matched-type: INTERNAL_IDENTIFIER .
  121                       | INTERNAL_IDENTIFIER . "`...`"

    "`=>`"   shift, and go to state 224
    "`...`"  shift, and go to state 225
    "`:`"    shift, and go to state 226

    $default  reduce using rule 120 (parameter-matched-type)


State 152

  126 concept-expression: "`@`" . qname

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10

    identifier  go to state 43
    qname       go to state 227


State 153

  122 basic-parameter-matched-type: "`_`" .

    $default  reduce using rule 122 (basic-parameter-matched-type)


State 154

  110 parameter-decl: "`=>`" . parameter-value-constraint-set

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`@`"                shift, and go to state 152
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier                      go to state 43
    qname                           go to state 44
    fn-start-decl                   go to state 53
    parameter-value-constraint-set  go to state 228
    parameter-matched-value         go to state 229
    concept-expression              go to state 230
    syntax-expression               go to state 231
    syntax-expression-wo-ii         go to state 47
    apostrophe-expression           go to state 48
    new-expression                  go to state 49
    call-expression                 go to state 50
    lambda-expression               go to state 51
    compound-expression             go to state 55


State 155

  108 parameter-decl: "const modifier" . parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 233
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 156

  109 parameter-decl: "mut modifier" . parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 234
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 157

   52 qname: identifier .
   96 parameter-decl: identifier . internal-identifier-opt "`:`" parameter-constraint-set parameter-default-value-opt
   97               | identifier . internal-identifier-opt "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt
   98               | identifier . internal-identifier-opt "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt
   99               | identifier . internal-identifier-opt "`=>`" parameter-value-constraint-set

    INTERNAL_IDENTIFIER  shift, and go to state 235

    "`=>`"    reduce using rule 92 (internal-identifier-opt)
    "`:`"     reduce using rule 92 (internal-identifier-opt)
    $default  reduce using rule 52 (qname)

    internal-identifier      go to state 236
    internal-identifier-opt  go to state 237


State 158

   53 qname: qname . "`::`" identifier
  123 basic-parameter-matched-type: qname .
  124                             | qname . "`(`" pack-expression "`)`"

    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 238

    $default  reduce using rule 123 (basic-parameter-matched-type)


State 159

  170 lambda-expression: fn-start-decl "`(`" parameter-list-opt . "`)`" braced-statements
  171                  | fn-start-decl "`(`" parameter-list-opt . "`)`" "`->`" type-expr braced-statements

    "`)`"  shift, and go to state 239


State 160

   89 parameter-list-opt: parameter-list .
   91 parameter-list: parameter-list . "," parameter-decl

    ","  shift, and go to state 240

    $default  reduce using rule 89 (parameter-list-opt)


State 161

   90 parameter-list: parameter-decl .

    $default  reduce using rule 90 (parameter-list)


State 162

  107 parameter-decl: parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 242
    concept-expression           go to state 243


State 163

  111 parameter-constraint-set: parameter-matched-type .

    $default  reduce using rule 111 (parameter-constraint-set)


State 164

  118 parameter-matched-type: basic-parameter-matched-type .
  119                       | basic-parameter-matched-type . "`...`"
  125 basic-parameter-matched-type: basic-parameter-matched-type . "`|`" basic-parameter-matched-type

    "`...`"  shift, and go to state 244
    "`|`"    shift, and go to state 245

    $default  reduce using rule 118 (parameter-matched-type)


State 165

  112 parameter-constraint-set: concept-expression .

    $default  reduce using rule 112 (parameter-constraint-set)


State 166

   58 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   59        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" type-expr

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 151
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`=>`"               shift, and go to state 154
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 155
    "mut modifier"       shift, and go to state 156

    $default  reduce using rule 88 (parameter-list-opt)

    identifier                    go to state 157
    qname                         go to state 158
    parameter-list-opt            go to state 246
    parameter-list                go to state 160
    parameter-decl                go to state 161
    parameter-constraint-set      go to state 162
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 167

   13 statement: fn-start-decl fn-decl "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 247
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 168

   35 finished-statement: fn-start-decl fn-decl braced-statements .

    $default  reduce using rule 35 (finished-statement)


State 169

   45 generic-statement: syntax-expression "`=`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 45 (generic-statement)


State 170

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  151                        | syntax-expression "`==`" syntax-expression .
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 151 (syntax-expression-wo-ii)


State 171

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  152                        | syntax-expression "`!=`" syntax-expression .
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 152 (syntax-expression-wo-ii)


State 172

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  153                        | syntax-expression "`..`" syntax-expression .
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 153 (syntax-expression-wo-ii)


State 173

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  142                        | syntax-expression "`[`" syntax-expression . "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`]`"          shift, and go to state 248
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112


State 174

  144 syntax-expression-wo-ii: syntax-expression "`.`" identifier .

    $default  reduce using rule 144 (syntax-expression-wo-ii)


State 175

  145 syntax-expression-wo-ii: syntax-expression "`.`" apostrophe-expression .

    $default  reduce using rule 145 (syntax-expression-wo-ii)


State 176

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  149                        | syntax-expression "`+`" syntax-expression .
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 149 (syntax-expression-wo-ii)


State 177

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  150                        | syntax-expression "`-`" syntax-expression .
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108

    $default  reduce using rule 150 (syntax-expression-wo-ii)


State 178

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  154                        | syntax-expression "`&`" syntax-expression .
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110

    $default  reduce using rule 154 (syntax-expression-wo-ii)


State 179

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  155                        | syntax-expression "`|`" syntax-expression .
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111

    $default  reduce using rule 155 (syntax-expression-wo-ii)


State 180

  168 call-expression: apostrophe-expression "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 249
    ","    shift, and go to state 119


State 181

  167 call-expression: call-expression "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 250
    ","    shift, and go to state 119


State 182

  169 call-expression: lambda-expression "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 251
    ","    shift, and go to state 119


State 183

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  173 pack-expression: identifier "`:`" syntax-expression .
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 173 (pack-expression)


State 184

   52 qname: identifier .
  175 pack-expression: pack-expression "," identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 252

    $default  reduce using rule 52 (qname)


State 185

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  174 pack-expression: pack-expression "," syntax-expression .
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 174 (pack-expression)


State 186

   71 expression-list: expression-list "," syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 71 (expression-list)


State 187

   10 statement: EXTERN VAR identifier "`:`" . type-expr

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 253


State 188

   52 qname: identifier .
   78 argument-name: identifier . "`=`"
   79              | identifier . "`:`"

    "`=`"  shift, and go to state 254
    "`:`"  shift, and go to state 255

    $default  reduce using rule 52 (qname)


State 189

  163 new-expression: "`new`" qname "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 256


State 190

   73 argument-list-opt: argument-list .
   75 argument-list: argument-list . "," argument

    ","  shift, and go to state 257

    $default  reduce using rule 73 (argument-list-opt)


State 191

   74 argument-list: argument .

    $default  reduce using rule 74 (argument-list)


State 192

   76 argument: argument-name . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 258
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 193

   77 argument: syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 77 (argument)


State 194

  164 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 259


State 195

   48 infunction-statement: "`continue`" .

    $default  reduce using rule 48 (infunction-statement)


State 196

   47 infunction-statement: "`break`" .

    $default  reduce using rule 47 (infunction-statement)


State 197

   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10

    identifier  go to state 43
    qname       go to state 260


State 198

   28 finished-infunction-statement-any: infunction-statement-any . "`;`"
   39 infunction-statement-set: infunction-statement-any .

    "`;`"  shift, and go to state 261

    $default  reduce using rule 39 (infunction-statement-set)


State 199

   24 infunction-statement-any: finished-infunction-statement-any . infunction-statement
   26 finished-infunction-statement-any: finished-infunction-statement-any . "`;`"
   27                                  | finished-infunction-statement-any . finished-statement
   40 infunction-statement-set: finished-infunction-statement-any .

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`;`"                shift, and go to state 262
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    LET                  shift, and go to state 17
    "`new`"              shift, and go to state 19
    "`while`"            shift, and go to state 20
    "`for`"              shift, and go to state 21
    "`if`"               shift, and go to state 22
    "`continue`"         shift, and go to state 195
    "`break`"            shift, and go to state 196
    "`return`"           shift, and go to state 23
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 197
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 40 (infunction-statement-set)

    let-decl                      go to state 38
    let-decl-start                go to state 39
    let-decl-start-with-opt-type  go to state 40
    finished-statement            go to state 263
    generic-statement             go to state 202
    infunction-statement          go to state 264
    identifier                    go to state 43
    qname                         go to state 44
    fn-start-decl                 go to state 204
    syntax-expression             go to state 46
    syntax-expression-wo-ii       go to state 47
    apostrophe-expression         go to state 48
    new-expression                go to state 49
    call-expression               go to state 50
    lambda-expression             go to state 51
    compound-expression           go to state 52


State 200

   25 finished-infunction-statement-any: finished-statement .

    $default  reduce using rule 25 (finished-infunction-statement-any)


State 201

   29 braced-statements: "`{`" infunction-statement-set . "`}`"

    "`}`"  shift, and go to state 265


State 202

   46 infunction-statement: generic-statement .

    $default  reduce using rule 46 (infunction-statement)


State 203

   23 infunction-statement-any: infunction-statement .

    $default  reduce using rule 23 (infunction-statement-any)


State 204

   35 finished-statement: fn-start-decl . fn-decl braced-statements
  170 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  171                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 10
    "`(`"       shift, and go to state 96
    "`new`"     shift, and go to state 97

    identifier  go to state 43
    qname       go to state 98
    fn-name     go to state 99
    fn-decl     go to state 266


State 205

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression . braced-statements
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 267


State 206

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression . braced-statements
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`{`"          shift, and go to state 128
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    braced-statements  go to state 268


State 207

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" . braced-statements

    "`{`"  shift, and go to state 128

    braced-statements  go to state 269


State 208

   68 using-decl: qname "`=>`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 68 (using-decl)


State 209

   69 using-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression

    "`)`"  shift, and go to state 270


State 210

   65 case-decl: identifier .

    $default  reduce using rule 65 (case-decl)


State 211

   60 enum-decl: qname "`{`" case-list-opt . "`}`"

    "`}`"  shift, and go to state 271


State 212

   62 case-list-opt: case-list .
   64 case-list: case-list . "," case-decl

    ","  shift, and go to state 272

    $default  reduce using rule 62 (case-list-opt)


State 213

   63 case-list: case-decl .

    $default  reduce using rule 63 (case-list)


State 214

   66 struct-decl: qname "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 80 (field-list-opt)

    identifier      go to state 273
    field-list-opt  go to state 274
    field-list      go to state 275
    field           go to state 276


State 215

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements
   67 struct-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`)`"  shift, and go to state 277


State 216

  166 call-expression: "mut modifier" "`(`" pack-expression "`)`" .

    $default  reduce using rule 166 (call-expression)


State 217

  182 type-expr: "`(`" "`)`" .

    $default  reduce using rule 182 (type-expr)


State 218

  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression
  183 type-expr: "`(`" pack-expression . "`)`"

    "`)`"  shift, and go to state 278
    ","    shift, and go to state 119


State 219

  181 type-expr: "`[`" type-expr . "`]`"
  184          | type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221
    "`]`"   shift, and go to state 279
    "`|`"   shift, and go to state 222


State 220

  186 type-expr: type-expr "`->`" . type-expr

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 280


State 221

  184 type-expr: type-expr "`[`" . INTEGER "`]`"

    INTEGER  shift, and go to state 281


State 222

  185 type-expr: type-expr "`|`" . type-expr

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 282


State 223

  165 call-expression: qname "`(`" pack-expression "`)`" .

    $default  reduce using rule 165 (call-expression)


State 224

  103 parameter-decl: INTERNAL_IDENTIFIER "`=>`" . parameter-value-constraint-set

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`@`"                shift, and go to state 152
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier                      go to state 43
    qname                           go to state 44
    fn-start-decl                   go to state 53
    parameter-value-constraint-set  go to state 283
    parameter-matched-value         go to state 229
    concept-expression              go to state 230
    syntax-expression               go to state 231
    syntax-expression-wo-ii         go to state 47
    apostrophe-expression           go to state 48
    new-expression                  go to state 49
    call-expression                 go to state 50
    lambda-expression               go to state 51
    compound-expression             go to state 55


State 225

  104 parameter-decl: INTERNAL_IDENTIFIER "`...`" . "`:`" parameter-constraint-set
  105               | INTERNAL_IDENTIFIER "`...`" . "`:`" "const modifier" parameter-constraint-set
  106               | INTERNAL_IDENTIFIER "`...`" . "`:`" "mut modifier" parameter-constraint-set
  121 parameter-matched-type: INTERNAL_IDENTIFIER "`...`" .

    "`:`"  shift, and go to state 284

    $default  reduce using rule 121 (parameter-matched-type)


State 226

  100 parameter-decl: INTERNAL_IDENTIFIER "`:`" . parameter-constraint-set parameter-default-value-opt
  101               | INTERNAL_IDENTIFIER "`:`" . "const modifier" parameter-constraint-set parameter-default-value-opt
  102               | INTERNAL_IDENTIFIER "`:`" . "mut modifier" parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 285
    "mut modifier"       shift, and go to state 286

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 287
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 227

   53 qname: qname . "`::`" identifier
  126 concept-expression: "`@`" qname .

    "`::`"  shift, and go to state 94

    $default  reduce using rule 126 (concept-expression)


State 228

  110 parameter-decl: "`=>`" parameter-value-constraint-set .
  116 parameter-value-constraint-set: parameter-value-constraint-set . concept-expression

    "`@`"  shift, and go to state 152

    $default  reduce using rule 110 (parameter-decl)

    concept-expression  go to state 288


State 229

  114 parameter-value-constraint-set: parameter-matched-value .

    $default  reduce using rule 114 (parameter-value-constraint-set)


State 230

  115 parameter-value-constraint-set: concept-expression .

    $default  reduce using rule 115 (parameter-value-constraint-set)


State 231

  117 parameter-matched-value: syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 117 (parameter-matched-value)


State 232

  120 parameter-matched-type: INTERNAL_IDENTIFIER .
  121                       | INTERNAL_IDENTIFIER . "`...`"

    "`...`"  shift, and go to state 289

    $default  reduce using rule 120 (parameter-matched-type)


State 233

  108 parameter-decl: "const modifier" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 290
    concept-expression           go to state 243


State 234

  109 parameter-decl: "mut modifier" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 291
    concept-expression           go to state 243


State 235

   50 internal-identifier: INTERNAL_IDENTIFIER .

    $default  reduce using rule 50 (internal-identifier)


State 236

   93 internal-identifier-opt: internal-identifier .

    $default  reduce using rule 93 (internal-identifier-opt)


State 237

   96 parameter-decl: identifier internal-identifier-opt . "`:`" parameter-constraint-set parameter-default-value-opt
   97               | identifier internal-identifier-opt . "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt
   98               | identifier internal-identifier-opt . "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt
   99               | identifier internal-identifier-opt . "`=>`" parameter-value-constraint-set

    "`=>`"  shift, and go to state 292
    "`:`"   shift, and go to state 293


State 238

  124 basic-parameter-matched-type: qname "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 57
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    pack-expression          go to state 294
    compound-expression      go to state 55


State 239

  170 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" . braced-statements
  171                  | fn-start-decl "`(`" parameter-list-opt "`)`" . "`->`" type-expr braced-statements

    "`->`"  shift, and go to state 295
    "`{`"   shift, and go to state 128

    braced-statements  go to state 296


State 240

   91 parameter-list: parameter-list "," . parameter-decl

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 151
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`=>`"               shift, and go to state 154
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 155
    "mut modifier"       shift, and go to state 156

    identifier                    go to state 157
    qname                         go to state 158
    parameter-decl                go to state 297
    parameter-constraint-set      go to state 162
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 241

   95 parameter-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 298
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 242

  107 parameter-decl: parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 107 (parameter-decl)


State 243

  113 parameter-constraint-set: parameter-constraint-set concept-expression .

    $default  reduce using rule 113 (parameter-constraint-set)


State 244

  119 parameter-matched-type: basic-parameter-matched-type "`...`" .

    $default  reduce using rule 119 (parameter-matched-type)


State 245

  125 basic-parameter-matched-type: basic-parameter-matched-type "`|`" . basic-parameter-matched-type

    IDENTIFIER  shift, and go to state 2
    "`_`"       shift, and go to state 153
    "`::`"      shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    basic-parameter-matched-type  go to state 299


State 246

   58 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   59        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" type-expr

    "`)`"  shift, and go to state 300


State 247

   13 statement: fn-start-decl fn-decl "`=>`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 13 (statement)


State 248

  142 syntax-expression-wo-ii: syntax-expression "`[`" syntax-expression "`]`" .

    $default  reduce using rule 142 (syntax-expression-wo-ii)


State 249

  168 call-expression: apostrophe-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 168 (call-expression)


State 250

  167 call-expression: call-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 167 (call-expression)


State 251

  169 call-expression: lambda-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 169 (call-expression)


State 252

  175 pack-expression: pack-expression "," identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 301
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 253

   10 statement: EXTERN VAR identifier "`:`" type-expr .
  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221
    "`|`"   shift, and go to state 222

    $default  reduce using rule 10 (statement)


State 254

   78 argument-name: identifier "`=`" .

    $default  reduce using rule 78 (argument-name)


State 255

   79 argument-name: identifier "`:`" .

    $default  reduce using rule 79 (argument-name)


State 256

  163 new-expression: "`new`" qname "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 163 (new-expression)


State 257

   75 argument-list: argument-list "," . argument

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 188
    qname                    go to state 44
    fn-start-decl            go to state 53
    argument                 go to state 302
    argument-name            go to state 192
    syntax-expression        go to state 193
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 258

   76 argument: argument-name syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 76 (argument)


State 259

  164 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 164 (new-expression)


State 260

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   53 qname: qname . "`::`" identifier

    "`::`"  shift, and go to state 94
    "`(`"   shift, and go to state 303
    "`{`"   shift, and go to state 128

    braced-statements  go to state 138


State 261

   28 finished-infunction-statement-any: infunction-statement-any "`;`" .

    $default  reduce using rule 28 (finished-infunction-statement-any)


State 262

   26 finished-infunction-statement-any: finished-infunction-statement-any "`;`" .

    $default  reduce using rule 26 (finished-infunction-statement-any)


State 263

   27 finished-infunction-statement-any: finished-infunction-statement-any finished-statement .

    $default  reduce using rule 27 (finished-infunction-statement-any)


State 264

   24 infunction-statement-any: finished-infunction-statement-any infunction-statement .

    $default  reduce using rule 24 (infunction-statement-any)


State 265

   29 braced-statements: "`{`" infunction-statement-set "`}`" .

    $default  reduce using rule 29 (braced-statements)


State 266

   35 finished-statement: fn-start-decl fn-decl . braced-statements

    "`{`"  shift, and go to state 128

    braced-statements  go to state 168


State 267

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression braced-statements .

    $default  reduce using rule 31 (finished-statement)


State 268

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression braced-statements .

    $default  reduce using rule 32 (finished-statement)


State 269

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" braced-statements .

    $default  reduce using rule 34 (finished-statement)


State 270

   69 using-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression

    "`=>`"  shift, and go to state 304


State 271

   60 enum-decl: qname "`{`" case-list-opt "`}`" .

    $default  reduce using rule 60 (enum-decl)


State 272

   64 case-list: case-list "," . case-decl

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 210
    case-decl   go to state 305


State 273

   86 field: identifier . "`:`" type-expr field-default-value-opt
   87      | identifier . "`=>`" type-expr field-default-value-opt

    "`=>`"  shift, and go to state 306
    "`:`"   shift, and go to state 307


State 274

   66 struct-decl: qname "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 308


State 275

   81 field-list-opt: field-list .
   83 field-list: field-list . "," field

    ","  shift, and go to state 309

    $default  reduce using rule 81 (field-list-opt)


State 276

   82 field-list: field .

    $default  reduce using rule 82 (field-list)


State 277

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements
   67 struct-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 310
    "`{`"   shift, and go to state 128

    braced-statements  go to state 311


State 278

  183 type-expr: "`(`" pack-expression "`)`" .

    $default  reduce using rule 183 (type-expr)


State 279

  181 type-expr: "`[`" type-expr "`]`" .

    $default  reduce using rule 181 (type-expr)


State 280

  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr
  186          | type-expr "`->`" type-expr .

    $default  reduce using rule 186 (type-expr)


State 281

  184 type-expr: type-expr "`[`" INTEGER . "`]`"

    "`]`"  shift, and go to state 312


State 282

  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  185          | type-expr "`|`" type-expr .
  186          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221

    $default  reduce using rule 185 (type-expr)


State 283

  103 parameter-decl: INTERNAL_IDENTIFIER "`=>`" parameter-value-constraint-set .
  116 parameter-value-constraint-set: parameter-value-constraint-set . concept-expression

    "`@`"  shift, and go to state 152

    $default  reduce using rule 103 (parameter-decl)

    concept-expression  go to state 288


State 284

  104 parameter-decl: INTERNAL_IDENTIFIER "`...`" "`:`" . parameter-constraint-set
  105               | INTERNAL_IDENTIFIER "`...`" "`:`" . "const modifier" parameter-constraint-set
  106               | INTERNAL_IDENTIFIER "`...`" "`:`" . "mut modifier" parameter-constraint-set

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 313
    "mut modifier"       shift, and go to state 314

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 315
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 285

  101 parameter-decl: INTERNAL_IDENTIFIER "`:`" "const modifier" . parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 316
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 286

  102 parameter-decl: INTERNAL_IDENTIFIER "`:`" "mut modifier" . parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 317
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 287

  100 parameter-decl: INTERNAL_IDENTIFIER "`:`" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 318
    concept-expression           go to state 243


State 288

  116 parameter-value-constraint-set: parameter-value-constraint-set concept-expression .

    $default  reduce using rule 116 (parameter-value-constraint-set)


State 289

  121 parameter-matched-type: INTERNAL_IDENTIFIER "`...`" .

    $default  reduce using rule 121 (parameter-matched-type)


State 290

  108 parameter-decl: "const modifier" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 108 (parameter-decl)


State 291

  109 parameter-decl: "mut modifier" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 109 (parameter-decl)


State 292

   99 parameter-decl: identifier internal-identifier-opt "`=>`" . parameter-value-constraint-set

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`@`"                shift, and go to state 152
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier                      go to state 43
    qname                           go to state 44
    fn-start-decl                   go to state 53
    parameter-value-constraint-set  go to state 319
    parameter-matched-value         go to state 229
    concept-expression              go to state 230
    syntax-expression               go to state 231
    syntax-expression-wo-ii         go to state 47
    apostrophe-expression           go to state 48
    new-expression                  go to state 49
    call-expression                 go to state 50
    lambda-expression               go to state 51
    compound-expression             go to state 55


State 293

   96 parameter-decl: identifier internal-identifier-opt "`:`" . parameter-constraint-set parameter-default-value-opt
   97               | identifier internal-identifier-opt "`:`" . "const modifier" parameter-constraint-set parameter-default-value-opt
   98               | identifier internal-identifier-opt "`:`" . "mut modifier" parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 320
    "mut modifier"       shift, and go to state 321

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 322
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 294

  124 basic-parameter-matched-type: qname "`(`" pack-expression . "`)`"
  174 pack-expression: pack-expression . "," syntax-expression
  175                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 323
    ","    shift, and go to state 119


State 295

  171 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" . type-expr braced-statements

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 324


State 296

  170 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 170 (lambda-expression)


State 297

   91 parameter-list: parameter-list "," parameter-decl .

    $default  reduce using rule 91 (parameter-list)


State 298

   95 parameter-default-value-opt: "`=`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 95 (parameter-default-value-opt)


State 299

  125 basic-parameter-matched-type: basic-parameter-matched-type . "`|`" basic-parameter-matched-type
  125                             | basic-parameter-matched-type "`|`" basic-parameter-matched-type .

    $default  reduce using rule 125 (basic-parameter-matched-type)


State 300

   58 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   59        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" type-expr

    "`->`"  shift, and go to state 325

    $default  reduce using rule 58 (fn-decl)


State 301

  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  175 pack-expression: pack-expression "," identifier "`:`" syntax-expression .
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 175 (pack-expression)


State 302

   75 argument-list: argument-list "," argument .

    $default  reduce using rule 75 (argument-list)


State 303

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 151
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`=>`"               shift, and go to state 154
    "`::`"               shift, and go to state 10
    "const modifier"     shift, and go to state 155
    "mut modifier"       shift, and go to state 156

    $default  reduce using rule 88 (parameter-list-opt)

    identifier                    go to state 157
    qname                         go to state 158
    parameter-list-opt            go to state 326
    parameter-list                go to state 160
    parameter-decl                go to state 161
    parameter-constraint-set      go to state 162
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 304

   69 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 327
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 305

   64 case-list: case-list "," case-decl .

    $default  reduce using rule 64 (case-list)


State 306

   87 field: identifier "`=>`" . type-expr field-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 328


State 307

   86 field: identifier "`:`" . type-expr field-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 329


State 308

   66 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 66 (struct-decl)


State 309

   83 field-list: field-list "," . field

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 273
    field       go to state 330


State 310

   67 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 331


State 311

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 37 (finished-statement)


State 312

  184 type-expr: type-expr "`[`" INTEGER "`]`" .

    $default  reduce using rule 184 (type-expr)


State 313

  105 parameter-decl: INTERNAL_IDENTIFIER "`...`" "`:`" "const modifier" . parameter-constraint-set

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 332
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 314

  106 parameter-decl: INTERNAL_IDENTIFIER "`...`" "`:`" "mut modifier" . parameter-constraint-set

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 333
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 315

  104 parameter-decl: INTERNAL_IDENTIFIER "`...`" "`:`" parameter-constraint-set .
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`@`"  shift, and go to state 152

    $default  reduce using rule 104 (parameter-decl)

    concept-expression  go to state 243


State 316

  101 parameter-decl: INTERNAL_IDENTIFIER "`:`" "const modifier" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 334
    concept-expression           go to state 243


State 317

  102 parameter-decl: INTERNAL_IDENTIFIER "`:`" "mut modifier" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 335
    concept-expression           go to state 243


State 318

  100 parameter-decl: INTERNAL_IDENTIFIER "`:`" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 100 (parameter-decl)


State 319

   99 parameter-decl: identifier internal-identifier-opt "`=>`" parameter-value-constraint-set .
  116 parameter-value-constraint-set: parameter-value-constraint-set . concept-expression

    "`@`"  shift, and go to state 152

    $default  reduce using rule 99 (parameter-decl)

    concept-expression  go to state 288


State 320

   97 parameter-decl: identifier internal-identifier-opt "`:`" "const modifier" . parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 336
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 321

   98 parameter-decl: identifier internal-identifier-opt "`:`" "mut modifier" . parameter-constraint-set parameter-default-value-opt

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 232
    "`@`"                shift, and go to state 152
    "`_`"                shift, and go to state 153
    "`::`"               shift, and go to state 10

    identifier                    go to state 43
    qname                         go to state 158
    parameter-constraint-set      go to state 337
    parameter-matched-type        go to state 163
    basic-parameter-matched-type  go to state 164
    concept-expression            go to state 165


State 322

   96 parameter-decl: identifier internal-identifier-opt "`:`" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 338
    concept-expression           go to state 243


State 323

  124 basic-parameter-matched-type: qname "`(`" pack-expression "`)`" .

    $default  reduce using rule 124 (basic-parameter-matched-type)


State 324

  171 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr . braced-statements
  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 220
    "`{`"   shift, and go to state 128
    "`[`"   shift, and go to state 221
    "`|`"   shift, and go to state 222

    braced-statements  go to state 339


State 325

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" . type-expr

    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 140
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 141
    "`[`"                shift, and go to state 142
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30

    identifier             go to state 43
    qname                  go to state 143
    fn-start-decl          go to state 53
    apostrophe-expression  go to state 144
    call-expression        go to state 145
    lambda-expression      go to state 146
    type-expr              go to state 340


State 326

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements

    "`)`"  shift, and go to state 341


State 327

   69 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 69 (using-decl)


State 328

   87 field: identifier "`=>`" type-expr . field-default-value-opt
  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 342
    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221
    "`|`"   shift, and go to state 222

    $default  reduce using rule 84 (field-default-value-opt)

    field-default-value-opt  go to state 343


State 329

   86 field: identifier "`:`" type-expr . field-default-value-opt
  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 342
    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221
    "`|`"   shift, and go to state 222

    $default  reduce using rule 84 (field-default-value-opt)

    field-default-value-opt  go to state 344


State 330

   83 field-list: field-list "," field .

    $default  reduce using rule 83 (field-list)


State 331

   67 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 80 (field-list-opt)

    identifier      go to state 273
    field-list-opt  go to state 345
    field-list      go to state 275
    field           go to state 276


State 332

  105 parameter-decl: INTERNAL_IDENTIFIER "`...`" "`:`" "const modifier" parameter-constraint-set .
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`@`"  shift, and go to state 152

    $default  reduce using rule 105 (parameter-decl)

    concept-expression  go to state 243


State 333

  106 parameter-decl: INTERNAL_IDENTIFIER "`...`" "`:`" "mut modifier" parameter-constraint-set .
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`@`"  shift, and go to state 152

    $default  reduce using rule 106 (parameter-decl)

    concept-expression  go to state 243


State 334

  101 parameter-decl: INTERNAL_IDENTIFIER "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 101 (parameter-decl)


State 335

  102 parameter-decl: INTERNAL_IDENTIFIER "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 102 (parameter-decl)


State 336

   97 parameter-decl: identifier internal-identifier-opt "`:`" "const modifier" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 346
    concept-expression           go to state 243


State 337

   98 parameter-decl: identifier internal-identifier-opt "`:`" "mut modifier" parameter-constraint-set . parameter-default-value-opt
  113 parameter-constraint-set: parameter-constraint-set . concept-expression

    "`=`"  shift, and go to state 241
    "`@`"  shift, and go to state 152

    $default  reduce using rule 94 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 347
    concept-expression           go to state 243


State 338

   96 parameter-decl: identifier internal-identifier-opt "`:`" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 96 (parameter-decl)


State 339

  171 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements .

    $default  reduce using rule 171 (lambda-expression)


State 340

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" type-expr .
  184 type-expr: type-expr . "`[`" INTEGER "`]`"
  185          | type-expr . "`|`" type-expr
  186          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 220
    "`[`"   shift, and go to state 221
    "`|`"   shift, and go to state 222

    $default  reduce using rule 59 (fn-decl)


State 341

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements

    "`{`"  shift, and go to state 128

    braced-statements  go to state 311


State 342

   85 field-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    INTERNAL_IDENTIFIER  shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    INTEGER_INDEX        shift, and go to state 5
    INTEGER              shift, and go to state 6
    DECIMAL              shift, and go to state 7
    DECIMAL_S            shift, and go to state 8
    "APOSTROPHE"         shift, and go to state 9
    "`::`"               shift, and go to state 10
    "`(`"                shift, and go to state 11
    "`[`"                shift, and go to state 12
    "`[[`"               shift, and go to state 13
    "`.`"                shift, and go to state 14
    "`*`"                shift, and go to state 15
    "`!`"                shift, and go to state 16
    "`new`"              shift, and go to state 19
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 43
    qname                    go to state 44
    fn-start-decl            go to state 53
    syntax-expression        go to state 348
    syntax-expression-wo-ii  go to state 47
    apostrophe-expression    go to state 48
    new-expression           go to state 49
    call-expression          go to state 50
    lambda-expression        go to state 51
    compound-expression      go to state 55


State 343

   87 field: identifier "`=>`" type-expr field-default-value-opt .

    $default  reduce using rule 87 (field)


State 344

   86 field: identifier "`:`" type-expr field-default-value-opt .

    $default  reduce using rule 86 (field)


State 345

   67 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 349


State 346

   97 parameter-decl: identifier internal-identifier-opt "`:`" "const modifier" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 97 (parameter-decl)


State 347

   98 parameter-decl: identifier internal-identifier-opt "`:`" "mut modifier" parameter-constraint-set parameter-default-value-opt .

    $default  reduce using rule 98 (parameter-decl)


State 348

   85 field-default-value-opt: "`=`" syntax-expression .
  142 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  144                        | syntax-expression . "`.`" identifier
  145                        | syntax-expression . "`.`" apostrophe-expression
  146                        | syntax-expression . INTEGER_INDEX
  149                        | syntax-expression . "`+`" syntax-expression
  150                        | syntax-expression . "`-`" syntax-expression
  151                        | syntax-expression . "`==`" syntax-expression
  152                        | syntax-expression . "`!=`" syntax-expression
  153                        | syntax-expression . "`..`" syntax-expression
  154                        | syntax-expression . "`&`" syntax-expression
  155                        | syntax-expression . "`|`" syntax-expression
  176 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 101
    "`==`"         shift, and go to state 103
    "`!=`"         shift, and go to state 104
    "`..`"         shift, and go to state 105
    "`...`"        shift, and go to state 106
    "`[`"          shift, and go to state 107
    "`.`"          shift, and go to state 108
    "`+`"          shift, and go to state 109
    "`-`"          shift, and go to state 110
    "`&`"          shift, and go to state 111
    "`|`"          shift, and go to state 112

    $default  reduce using rule 85 (field-default-value-opt)


State 349

   67 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 67 (struct-decl)
