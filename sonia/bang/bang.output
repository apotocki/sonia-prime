Terminals unused in grammar

    COMMENT_BEGIN
    COMMENT_END
    OPERATOR_TERM
    "`->*`"
    "`.*`"
    "`++`"
    "`--`"
    "`<<`"
    "`>>`"
    "`<=`"
    "`>=`"
    "`+=`"
    "`-=`"
    "`*=`"
    "`/=`"
    "`%=`"
    "`<<=`"
    "`>>=`"
    "`&=`"
    "`|=`"
    "`^=`"
    "`<`"
    "`>`"
    "`/`"
    "`%`"
    "`^`"
    "`$`"
    "`?`"
    "`#`"
    AUTO
    THROW
    SIZEOF
    LOWEST
    EXTENDS


Grammar

    0 $accept: begin "end of file"

    1 begin: statement_any "end of file"
    2      | finished-statement-any "end of file"

    3 statement_any: %empty
    4              | statement
    5              | finished-statement-any statement

    6 finished-statement-any: finished-statement
    7                       | finished-statement-any "`;`"
    8                       | finished-statement-any finished-statement
    9                       | statement_any "`;`"

   10 statement: EXTERN VAR identifier "`:`" type-expr
   11          | EXTERN "`fn`" fn-decl
   12          | INCLUDE STRING
   13          | fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   14          | generic-statement
   15          | STRUCT struct-decl

   16 let-decl: let-decl-start-with-opt-type
   17         | let-decl-start-with-opt-type "`=`" pack-expression

   18 let-decl-start: identifier
   19               | "weak modifier" identifier

   20 let-decl-start-with-opt-type: let-decl-start
   21                             | let-decl-start "`:`" type-expr

   22 infunction-statement-any: %empty
   23                         | infunction-statement
   24                         | finished-infunction-statement-any infunction-statement

   25 finished-infunction-statement-any: finished-statement
   26                                  | finished-infunction-statement-any "`;`"
   27                                  | finished-infunction-statement-any finished-statement
   28                                  | infunction-statement-any "`;`"

   29 braced-statements: "`{`" infunction-statement-set "`}`"

   30 finished-statement: "`while`" syntax-expression braced-statements
   31                   | "`while`" syntax-expression "`;`" syntax-expression braced-statements
   32                   | "`for`" syntax-expression "`in`" syntax-expression braced-statements
   33                   | "`if`" syntax-expression braced-statements
   34                   | "`if`" syntax-expression braced-statements "`else`" braced-statements
   35                   | fn-start-decl fn-decl braced-statements
   36                   | STRUCT qname braced-statements
   37                   | STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements
   38                   | ENUM enum-decl

   39 infunction-statement-set: infunction-statement-any
   40                         | finished-infunction-statement-any

   41 generic-statement: LET let-decl
   42                  | USING using-decl
   43                  | compound-expression
   44                  | syntax-expression "`=`" syntax-expression

   45 infunction-statement: generic-statement
   46                     | "`break`"
   47                     | "`continue`"
   48                     | "`return`"
   49                     | "`return`" syntax-expression

   50 identifier: IDENTIFIER

   51 internal-identifier: CONTEXT_IDENTIFIER

   52 qname: "`::`" identifier
   53      | identifier
   54      | qname "`::`" identifier

   55 fn-start-decl: "`fn`"
   56              | INLINE "`fn`"

   57 fn-name: qname
   58        | "`new`"

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`"
   60        | fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern

   62 enum-decl: qname "`{`" case-list-opt "`}`"

   63 case-list-opt: %empty
   64              | case-list

   65 case-list: case-decl
   66          | case-list "," case-decl

   67 case-decl: identifier

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`"
   69            | qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

   70 using-decl: qname "`=>`" syntax-expression
   71           | qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

   72 expression-list: syntax-expression
   73                | expression-list "," syntax-expression

   74 argument-list-opt: %empty
   75                  | argument-list

   76 argument-list: argument
   77              | argument-list "," argument

   78 argument: argument-name syntax-expression
   79         | syntax-expression

   80 argument-name: identifier "`=`"
   81              | identifier "`:`"

   82 field-list-opt: %empty
   83               | field-list

   84 field-list: field
   85           | field-list "," field

   86 field-default-value-opt: %empty
   87                        | "`=`" syntax-expression

   88 field: identifier "`:`" type-expr field-default-value-opt
   89      | identifier "`=>`" type-expr field-default-value-opt

   90 parameter-list-opt: %empty
   91                   | parameter-list

   92 parameter-list: parameter-decl
   93               | parameter-list "," parameter-decl

   94 internal-identifier-opt: %empty
   95                        | internal-identifier

   96 parameter-default-value-opt: %empty
   97                            | "`=`" syntax-expression

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern-mod parameter-default-value-opt
   99               | internal-identifier "`:`" pattern-mod parameter-default-value-opt
  100               | pattern-mod parameter-default-value-opt
  101               | identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt
  102               | internal-identifier "`:`" constraint-expression parameter-default-value-opt
  103               | constraint-expression parameter-default-value-opt

  104 constraint-expression-mod: "`~`"
  105                          | "`~`" "constexpr modifier"
  106                          | "`~`" "runctime modifier"

  107 constraint-expression: constraint-expression-mod type-expr
  108                      | constraint-expression-mod type-expr "`...`"

  109 subpatterns-opt: %empty
  110                | subpatterns

  111 subpatterns: "`(`" pattern-list "`)`"

  112 pattern-list: pattern-field
  113             | pattern-list "," pattern-field

  114 pattern-field: pattern-sfx
  115              | "`_`" "`:`" pattern-sfx
  116              | identifier "`:`" pattern-sfx
  117              | internal-identifier "`:`" pattern-sfx
  118              | "`(`" syntax-expression "`)`" "`:`" pattern-sfx

  119 pattern-mod: pattern-sfx
  120            | "constexpr modifier" pattern-sfx
  121            | "runctime modifier" pattern-sfx

  122 pattern-sfx: pattern
  123            | pattern "`...`"
  124            | "`...`"

  125 pattern: qname subpatterns-opt concept-expression-list-opt
  126        | internal-identifier concept-expression-list-opt
  127        | "`_`" subpatterns concept-expression-list-opt
  128        | "`(`" syntax-expression "`)`" concept-expression-list-opt
  129        | "`_`" concept-expression-list-opt
  130        | concept-expression-list

  131 concept-expression: "`@`" qname

  132 concept-expression-list-opt: %empty
  133                            | concept-expression-list

  134 concept-expression-list: concept-expression
  135                        | concept-expression-list concept-expression

  136 syntax-expression: CONTEXT_IDENTIFIER
  137                  | CT_IDENTIFIER
  138                  | syntax-expression-wo-ii

  139 syntax-expression-wo-ii: "nil"
  140                        | "true"
  141                        | "false"
  142                        | INTEGER
  143                        | DECIMAL
  144                        | DECIMAL_S
  145                        | INTEGER_INDEX
  146                        | STRING
  147                        | RESERVED_IDENTIFIER
  148                        | qname
  149                        | "`(`" "`)`"
  150                        | "`(`" "`:`" syntax-expression "`)`"
  151                        | "`(`" pack-expression "`)`"
  152                        | "`[`" expression-list "`]`"
  153                        | "`[[`" expression-list "`]]`"
  154                        | syntax-expression "`[`" syntax-expression "`]`"
  155                        | "`.`" identifier
  156                        | syntax-expression "`.`" identifier
  157                        | syntax-expression "`.`" apostrophe-expression
  158                        | syntax-expression INTEGER_INDEX
  159                        | "`!`" syntax-expression
  160                        | "`*`" syntax-expression
  161                        | syntax-expression "`+`" syntax-expression
  162                        | syntax-expression "`-`" syntax-expression
  163                        | syntax-expression "`==`" syntax-expression
  164                        | syntax-expression "`!=`" syntax-expression
  165                        | syntax-expression "`..`" syntax-expression
  166                        | syntax-expression "`&`" syntax-expression
  167                        | syntax-expression "`|`" syntax-expression
  168                        | syntax-expression "`&&`" syntax-expression
  169                        | syntax-expression "`||`" syntax-expression
  170                        | apostrophe-expression
  171                        | new-expression
  172                        | compound-expression
  173                        | lambda-expression

  174 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE"

  175 new-expression: "`new`" qname
  176               | "`new`" apostrophe-expression
  177               | "`new`" qname "`(`" argument-list-opt "`)`"
  178               | "`new`" apostrophe-expression "`(`" argument-list-opt "`)`"

  179 call-expression: qname "`(`" pack-expression-opt "`)`"
  180                | call-expression "`(`" pack-expression "`)`"
  181                | apostrophe-expression "`(`" pack-expression "`)`"
  182                | lambda-expression "`(`" pack-expression "`)`"

  183 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements
  184                  | fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

  185 pack-expression-opt: %empty
  186                    | pack-expression

  187 pack-expression: syntax-expression
  188                | identifier "`:`" syntax-expression
  189                | pack-expression "," syntax-expression
  190                | pack-expression "," identifier "`:`" syntax-expression

  191 compound-expression: syntax-expression "`...`"
  192                    | call-expression

  193 type-expr: qname
  194          | call-expression
  195          | CONTEXT_IDENTIFIER
  196          | "`[`" type-expr "`]`"
  197          | "`(`" "`)`"
  198          | "`(`" pack-expression "`)`"
  199          | type-expr "`[`" INTEGER "`]`"
  200          | type-expr "`|`" type-expr
  201          | type-expr "`->`" type-expr


Terminals, with rules where they appear

    "end of file" (0) 0 1 2
    error (256)
    COMMENT_BEGIN (258)
    COMMENT_END (259)
    STRING <sonia::lang::bang::annotated_string_view> (260) 12 146
    IDENTIFIER <sonia::lang::bang::annotated_string_view> (261) 50
    CONTEXT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (262) 51 136 195
    RESERVED_IDENTIFIER <sonia::lang::bang::annotated_string_view> (263) 147
    CT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (264) 137
    INTEGER_INDEX <sonia::lang::bang::annotated_string_view> (265) 145 158
    INTEGER <sonia::lang::bang::annotated_integer> (266) 142 199
    DECIMAL <sonia::lang::bang::annotated_decimal> (267) 143
    DECIMAL_S <sonia::lang::bang::annotated_decimal> (268) 144
    OPERATOR_TERM <sonia::string_view> (269)
    "`=`" <sonia::lang::lex::resource_location> (270) 17 44 80 87 97
    "APOSTROPHE" (271) 174
    "`@`" (272) 131
    "`_`" <sonia::lang::lex::resource_location> (273) 115 127 129
    "`->*`" (274)
    "`->`" (275) 61 184 201
    "`=>`" (276) 13 68 69 70 71 89
    "`~>`" (277) 60
    "`.*`" (278)
    "`++`" (279)
    "`--`" (280)
    "`<<`" (281)
    "`>>`" (282)
    "`<=`" (283)
    "`>=`" (284)
    "`==`" <sonia::lang::lex::resource_location> (285) 163
    "`!=`" <sonia::lang::lex::resource_location> (286) 164
    "`&&`" <sonia::lang::lex::resource_location> (287) 168
    "`||`" <sonia::lang::lex::resource_location> (288) 169
    "`..`" <sonia::lang::lex::resource_location> (289) 165
    "`...`" <sonia::lang::lex::resource_location> (290) 108 123 124 191
    "`+=`" (291)
    "`-=`" (292)
    "`*=`" (293)
    "`/=`" (294)
    "`%=`" (295)
    "`<<=`" (296)
    "`>>=`" (297)
    "`&=`" (298)
    "`|=`" (299)
    "`^=`" (300)
    "`:`" (301) 10 21 81 88 98 99 101 102 115 116 117 118 150 188 190
    "`::`" (302) 52 54
    "`(`" <sonia::lang::lex::resource_location> (303) 13 37 59 60 61 68 69 71 111 118 128 149 150 151 177 178 179 180 181 182 183 184 197 198
    "`)`" (304) 13 37 59 60 61 68 69 71 111 118 128 149 150 151 177 178 179 180 181 182 183 184 197 198
    "`{`" <sonia::lang::lex::resource_location> (305) 29 62
    "`}`" (306) 29 62
    "`[`" <sonia::lang::lex::resource_location> (307) 152 154 196 199
    "`]`" (308) 152 154 196 199
    "`[[`" <sonia::lang::lex::resource_location> (309) 153
    "`]]`" (310) 153
    "`<`" (311)
    "`>`" (312)
    "`;`" (313) 7 9 26 28 31
    "`.`" <sonia::lang::lex::resource_location> (314) 155 156 157
    "`+`" <sonia::lang::lex::resource_location> (315) 161
    "`-`" <sonia::lang::lex::resource_location> (316) 162
    "`*`" <sonia::lang::lex::resource_location> (317) 160
    "`/`" (318)
    "`%`" (319)
    "`&`" <sonia::lang::lex::resource_location> (320) 166
    "`|`" <sonia::lang::lex::resource_location> (321) 167 200
    "`!`" <sonia::lang::lex::resource_location> (322) 159
    "`~`" (323) 104 105 106
    "`^`" (324)
    "," (325) 66 73 77 85 93 113 189 190
    "`$`" (326)
    "`?`" (327)
    "`#`" (328)
    LET (329) 41
    VAR (330) 10
    EXTERN (331) 10 11
    "`new`" <sonia::lang::lex::resource_location> (332) 58 175 176 177 178
    "`while`" (333) 30 31
    "`for`" (334) 32
    "`in`" (335) 32
    "`if`" (336) 33 34
    "`else`" (337) 34
    "`continue`" <sonia::lang::lex::resource_location> (338) 47
    "`break`" <sonia::lang::lex::resource_location> (339) 46
    "`return`" <sonia::lang::lex::resource_location> (340) 48 49
    AUTO (341)
    USING (342) 42
    THROW (343)
    SIZEOF (344)
    LOWEST (345)
    DEREF (346)
    INCLUDE (347) 12
    INLINE (348) 56
    "`fn`" <sonia::lang::lex::resource_location> (349) 11 55 56
    ENUM (350) 38
    STRUCT (351) 15 36 37
    EXTENDS (352)
    "weak modifier" (353) 19
    "constexpr modifier" (354) 105 120
    "runctime modifier" (355) 106 121
    "nil" <annotated_nil> (356) 139
    "true" <annotated_bool> (357) 140
    "false" <annotated_bool> (358) 141


Nonterminals, with rules where they appear

    $accept (104)
        on left: 0
    begin (105)
        on left: 1 2
        on right: 0
    statement_any <managed_statement_list> (106)
        on left: 3 4 5
        on right: 1 9
    finished-statement-any <managed_statement_list> (107)
        on left: 6 7 8 9
        on right: 2 5 7 8
    statement <statement> (108)
        on left: 10 11 12 13 14 15
        on right: 4 5
    let-decl <let_statement> (109)
        on left: 16 17
        on right: 41
    let-decl-start <let_statement> (110)
        on left: 18 19
        on right: 20 21
    let-decl-start-with-opt-type <let_statement> (111)
        on left: 20 21
        on right: 16 17
    infunction-statement-any <managed_statement_list> (112)
        on left: 22 23 24
        on right: 28 39
    finished-infunction-statement-any <managed_statement_list> (113)
        on left: 25 26 27 28
        on right: 24 26 27 40
    braced-statements <managed_statement_list> (114)
        on left: 29
        on right: 30 31 32 33 34 35 36 37 183 184
    finished-statement <finished_statement_type> (115)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 6 8 25 27
    infunction-statement-set <managed_statement_list> (116)
        on left: 39 40
        on right: 29
    generic-statement <generic_statement_type> (117)
        on left: 41 42 43 44
        on right: 14 45
    infunction-statement <statement> (118)
        on left: 45 46 47 48 49
        on right: 23 24
    identifier <sonia::lang::bang::annotated_identifier> (119)
        on left: 50
        on right: 10 18 19 52 53 54 67 80 81 88 89 98 101 116 155 156 188 190
    internal-identifier <sonia::lang::bang::annotated_identifier> (120)
        on left: 51
        on right: 95 99 102 117 126
    qname <sonia::lang::bang::annotated_qname> (121)
        on left: 52 53 54
        on right: 36 37 54 57 62 68 69 70 71 125 131 148 175 177 179 193
    fn-start-decl <fn_kind> (122)
        on left: 55 56
        on right: 13 35 183 184
    fn-name <sonia::lang::bang::annotated_qname> (123)
        on left: 57 58
        on right: 13 59 60 61
    fn-decl <fn_pure_t> (124)
        on left: 59 60 61
        on right: 11 35
    enum-decl <enum_decl> (125)
        on left: 62
        on right: 38
    case-list-opt <std::vector<sonia::lang::bang::identifier>> (126)
        on left: 63 64
        on right: 62
    case-list <std::vector<sonia::lang::bang::identifier>> (127)
        on left: 65 66
        on right: 64 66
    case-decl <sonia::lang::bang::identifier> (128)
        on left: 67
        on right: 65 66
    struct-decl <struct_decl> (129)
        on left: 68 69
        on right: 15
    using-decl <using_decl> (130)
        on left: 70 71
        on right: 42
    expression-list <expression_list_t> (131)
        on left: 72 73
        on right: 73 152 153
    argument-list-opt <named_expression_list_t> (132)
        on left: 74 75
        on right: 177 178
    argument-list <named_expression_list_t> (133)
        on left: 76 77
        on right: 75 77
    argument <named_expression_t> (134)
        on left: 78 79
        on right: 76 77
    argument-name <sonia::lang::bang::annotated_identifier> (135)
        on left: 80 81
        on right: 78
    field-list-opt <field_list_t> (136)
        on left: 82 83
        on right: 68 69
    field-list <field_list_t> (137)
        on left: 84 85
        on right: 83 85
    field-default-value-opt <sonia::optional<syntax_expression_t>> (138)
        on left: 86 87
        on right: 88 89
    field <field_t> (139)
        on left: 88 89
        on right: 84 85
    parameter-list-opt <parameter_list_t> (140)
        on left: 90 91
        on right: 13 37 59 60 61 69 71 183 184
    parameter-list <parameter_list_t> (141)
        on left: 92 93
        on right: 91 93
    internal-identifier-opt <sonia::lang::bang::annotated_identifier> (142)
        on left: 94 95
        on right: 98 101
    parameter-default-value-opt <sonia::optional<syntax_expression_t>> (143)
        on left: 96 97
        on right: 98 99 100 101 102 103
    parameter-decl <parameter_t> (144)
        on left: 98 99 100 101 102 103
        on right: 92 93
    constraint-expression-mod <parameter_constraint_modifier_t> (145)
        on left: 104 105 106
        on right: 107 108
    constraint-expression <std::pair<syntax_expression_t, parameter_constraint_modifier_t>> (146)
        on left: 107 108
        on right: 101 102 103
    subpatterns-opt <pattern_list_t> (147)
        on left: 109 110
        on right: 125
    subpatterns <pattern_list_t> (148)
        on left: 111
        on right: 110 127
    pattern-list <pattern_list_t> (149)
        on left: 112 113
        on right: 111 113
    pattern-field <pattern_t::field> (150)
        on left: 114 115 116 117 118
        on right: 112 113
    pattern-mod <std::pair<pattern_t, parameter_constraint_modifier_t>> (151)
        on left: 119 120 121
        on right: 98 99 100
    pattern-sfx <std::pair<pattern_t, parameter_constraint_modifier_t>> (152)
        on left: 122 123 124
        on right: 114 115 116 117 118 119 120 121
    pattern <pattern_t> (153)
        on left: 125 126 127 128 129 130
        on right: 61 122 123
    concept-expression <syntax_expression_t> (154)
        on left: 131
        on right: 134 135
    concept-expression-list-opt <concept_expression_list_t> (155)
        on left: 132 133
        on right: 125 126 127 128 129
    concept-expression-list <concept_expression_list_t> (156)
        on left: 134 135
        on right: 130 133 135
    syntax-expression <syntax_expression_t> (157)
        on left: 136 137 138
        on right: 13 30 31 32 33 34 44 49 70 71 72 73 78 79 87 97 118 128 150 154 156 157 158 159 160 161 162 163 164 165 166 167 168 169 174 187 188 189 190 191
    syntax-expression-wo-ii <syntax_expression_t> (158)
        on left: 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
        on right: 138
    apostrophe-expression <syntax_expression_t> (159)
        on left: 174
        on right: 157 170 176 178 181
    new-expression <syntax_expression_t> (160)
        on left: 175 176 177 178
        on right: 171
    call-expression <syntax_expression_t> (161)
        on left: 179 180 181 182
        on right: 180 192 194
    lambda-expression <syntax_expression_t> (162)
        on left: 183 184
        on right: 173 182
    pack-expression-opt <named_expression_list_t> (163)
        on left: 185 186
        on right: 179
    pack-expression <named_expression_list_t> (164)
        on left: 187 188 189 190
        on right: 17 151 180 181 182 186 189 190 198
    compound-expression <syntax_expression_t> (165)
        on left: 191 192
        on right: 43 172
    type-expr <syntax_expression_t> (166)
        on left: 193 194 195 196 197 198 199 200 201
        on right: 10 21 60 88 89 107 108 184 196 199 200 201


State 0

    0 $accept: . begin "end of file"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 3 (statement_any)

    begin                    go to state 33
    statement_any            go to state 34
    finished-statement-any   go to state 35
    statement                go to state 36
    finished-statement       go to state 37
    generic-statement        go to state 38
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 41
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 1

  146 syntax-expression-wo-ii: STRING .

    $default  reduce using rule 146 (syntax-expression-wo-ii)


State 2

   50 identifier: IDENTIFIER .

    $default  reduce using rule 50 (identifier)


State 3

  136 syntax-expression: CONTEXT_IDENTIFIER .

    $default  reduce using rule 136 (syntax-expression)


State 4

  147 syntax-expression-wo-ii: RESERVED_IDENTIFIER .

    $default  reduce using rule 147 (syntax-expression-wo-ii)


State 5

  137 syntax-expression: CT_IDENTIFIER .

    $default  reduce using rule 137 (syntax-expression)


State 6

  145 syntax-expression-wo-ii: INTEGER_INDEX .

    $default  reduce using rule 145 (syntax-expression-wo-ii)


State 7

  142 syntax-expression-wo-ii: INTEGER .

    $default  reduce using rule 142 (syntax-expression-wo-ii)


State 8

  143 syntax-expression-wo-ii: DECIMAL .

    $default  reduce using rule 143 (syntax-expression-wo-ii)


State 9

  144 syntax-expression-wo-ii: DECIMAL_S .

    $default  reduce using rule 144 (syntax-expression-wo-ii)


State 10

  174 apostrophe-expression: "APOSTROPHE" . syntax-expression "APOSTROPHE"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 50
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 11

   52 qname: "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 52


State 12

  149 syntax-expression-wo-ii: "`(`" . "`)`"
  150                        | "`(`" . "`:`" syntax-expression "`)`"
  151                        | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`:`"                shift, and go to state 53
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`)`"                shift, and go to state 54
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 57
    compound-expression      go to state 51


State 13

  152 syntax-expression-wo-ii: "`[`" . expression-list "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    expression-list          go to state 58
    syntax-expression        go to state 59
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 14

  153 syntax-expression-wo-ii: "`[[`" . expression-list "`]]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    expression-list          go to state 60
    syntax-expression        go to state 59
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 15

  155 syntax-expression-wo-ii: "`.`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 61


State 16

  160 syntax-expression-wo-ii: "`*`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 62
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 17

  159 syntax-expression-wo-ii: "`!`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 63
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 18

   41 generic-statement: LET . let-decl

    IDENTIFIER       shift, and go to state 2
    "weak modifier"  shift, and go to state 64

    let-decl                      go to state 65
    let-decl-start                go to state 66
    let-decl-start-with-opt-type  go to state 67
    identifier                    go to state 68


State 19

   10 statement: EXTERN . VAR identifier "`:`" type-expr
   11          | EXTERN . "`fn`" fn-decl

    VAR     shift, and go to state 69
    "`fn`"  shift, and go to state 70


State 20

  175 new-expression: "`new`" . qname
  176               | "`new`" . apostrophe-expression
  177               | "`new`" . qname "`(`" argument-list-opt "`)`"
  178               | "`new`" . apostrophe-expression "`(`" argument-list-opt "`)`"

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10
    "`::`"        shift, and go to state 11

    identifier             go to state 39
    qname                  go to state 71
    apostrophe-expression  go to state 72


State 21

   30 finished-statement: "`while`" . syntax-expression braced-statements
   31                   | "`while`" . syntax-expression "`;`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 73
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 22

   32 finished-statement: "`for`" . syntax-expression "`in`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 74
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 23

   33 finished-statement: "`if`" . syntax-expression braced-statements
   34                   | "`if`" . syntax-expression braced-statements "`else`" braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 75
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 24

   42 generic-statement: USING . using-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 76
    using-decl  go to state 77


State 25

   12 statement: INCLUDE . STRING

    STRING  shift, and go to state 78


State 26

   56 fn-start-decl: INLINE . "`fn`"

    "`fn`"  shift, and go to state 79


State 27

   55 fn-start-decl: "`fn`" .

    $default  reduce using rule 55 (fn-start-decl)


State 28

   38 finished-statement: ENUM . enum-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 80
    enum-decl   go to state 81


State 29

   15 statement: STRUCT . struct-decl
   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier   go to state 39
    qname        go to state 82
    struct-decl  go to state 83


State 30

  139 syntax-expression-wo-ii: "nil" .

    $default  reduce using rule 139 (syntax-expression-wo-ii)


State 31

  140 syntax-expression-wo-ii: "true" .

    $default  reduce using rule 140 (syntax-expression-wo-ii)


State 32

  141 syntax-expression-wo-ii: "false" .

    $default  reduce using rule 141 (syntax-expression-wo-ii)


State 33

    0 $accept: begin . "end of file"

    "end of file"  shift, and go to state 84


State 34

    1 begin: statement_any . "end of file"
    9 finished-statement-any: statement_any . "`;`"

    "end of file"  shift, and go to state 85
    "`;`"          shift, and go to state 86


State 35

    2 begin: finished-statement-any . "end of file"
    5 statement_any: finished-statement-any . statement
    7 finished-statement-any: finished-statement-any . "`;`"
    8                       | finished-statement-any . finished-statement

    "end of file"        shift, and go to state 87
    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 88
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    statement                go to state 89
    finished-statement       go to state 90
    generic-statement        go to state 38
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 41
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 36

    4 statement_any: statement .

    $default  reduce using rule 4 (statement_any)


State 37

    6 finished-statement-any: finished-statement .

    $default  reduce using rule 6 (finished-statement-any)


State 38

   14 statement: generic-statement .

    $default  reduce using rule 14 (statement)


State 39

   53 qname: identifier .

    $default  reduce using rule 53 (qname)


State 40

   54 qname: qname . "`::`" identifier
  148 syntax-expression-wo-ii: qname .
  179 call-expression: qname . "`(`" pack-expression-opt "`)`"

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 92

    $default  reduce using rule 148 (syntax-expression-wo-ii)


State 41

   13 statement: fn-start-decl . fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   35 finished-statement: fn-start-decl . fn-decl braced-statements
  183 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  184                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 93
    "`new`"     shift, and go to state 94

    identifier  go to state 39
    qname       go to state 95
    fn-name     go to state 96
    fn-decl     go to state 97


State 42

   44 generic-statement: syntax-expression . "`=`" syntax-expression
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`=`"          shift, and go to state 99
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 43

  138 syntax-expression: syntax-expression-wo-ii .

    $default  reduce using rule 138 (syntax-expression)


State 44

  170 syntax-expression-wo-ii: apostrophe-expression .
  181 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 112

    $default  reduce using rule 170 (syntax-expression-wo-ii)


State 45

  171 syntax-expression-wo-ii: new-expression .

    $default  reduce using rule 171 (syntax-expression-wo-ii)


State 46

  180 call-expression: call-expression . "`(`" pack-expression "`)`"
  192 compound-expression: call-expression .

    "`(`"  shift, and go to state 113

    $default  reduce using rule 192 (compound-expression)


State 47

  173 syntax-expression-wo-ii: lambda-expression .
  182 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 114

    $default  reduce using rule 173 (syntax-expression-wo-ii)


State 48

   43 generic-statement: compound-expression .
  172 syntax-expression-wo-ii: compound-expression .

    "end of file"  reduce using rule 43 (generic-statement)
    "`}`"          reduce using rule 43 (generic-statement)
    "`;`"          reduce using rule 43 (generic-statement)
    $default       reduce using rule 172 (syntax-expression-wo-ii)


State 49

  183 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  184                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    "`(`"  shift, and go to state 93


State 50

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  174 apostrophe-expression: "APOSTROPHE" syntax-expression . "APOSTROPHE"
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "APOSTROPHE"   shift, and go to state 115
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 51

  172 syntax-expression-wo-ii: compound-expression .

    $default  reduce using rule 172 (syntax-expression-wo-ii)


State 52

   52 qname: "`::`" identifier .

    $default  reduce using rule 52 (qname)


State 53

  150 syntax-expression-wo-ii: "`(`" "`:`" . syntax-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 116
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 54

  149 syntax-expression-wo-ii: "`(`" "`)`" .

    $default  reduce using rule 149 (syntax-expression-wo-ii)


State 55

   53 qname: identifier .
  188 pack-expression: identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 117

    $default  reduce using rule 53 (qname)


State 56

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  187 pack-expression: syntax-expression .
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 187 (pack-expression)


State 57

  151 syntax-expression-wo-ii: "`(`" pack-expression . "`)`"
  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 118
    ","    shift, and go to state 119


State 58

   73 expression-list: expression-list . "," syntax-expression
  152 syntax-expression-wo-ii: "`[`" expression-list . "`]`"

    "`]`"  shift, and go to state 120
    ","    shift, and go to state 121


State 59

   72 expression-list: syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 72 (expression-list)


State 60

   73 expression-list: expression-list . "," syntax-expression
  153 syntax-expression-wo-ii: "`[[`" expression-list . "`]]`"

    "`]]`"  shift, and go to state 122
    ","     shift, and go to state 121


State 61

  155 syntax-expression-wo-ii: "`.`" identifier .

    $default  reduce using rule 155 (syntax-expression-wo-ii)


State 62

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  160                        | "`*`" syntax-expression .
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 160 (syntax-expression-wo-ii)


State 63

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  159                        | "`!`" syntax-expression .
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 159 (syntax-expression-wo-ii)


State 64

   19 let-decl-start: "weak modifier" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 123


State 65

   41 generic-statement: LET let-decl .

    $default  reduce using rule 41 (generic-statement)


State 66

   20 let-decl-start-with-opt-type: let-decl-start .
   21                             | let-decl-start . "`:`" type-expr

    "`:`"  shift, and go to state 124

    $default  reduce using rule 20 (let-decl-start-with-opt-type)


State 67

   16 let-decl: let-decl-start-with-opt-type .
   17         | let-decl-start-with-opt-type . "`=`" pack-expression

    "`=`"  shift, and go to state 125

    $default  reduce using rule 16 (let-decl)


State 68

   18 let-decl-start: identifier .

    $default  reduce using rule 18 (let-decl-start)


State 69

   10 statement: EXTERN VAR . identifier "`:`" type-expr

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 126


State 70

   11 statement: EXTERN "`fn`" . fn-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`new`"     shift, and go to state 94

    identifier  go to state 39
    qname       go to state 95
    fn-name     go to state 127
    fn-decl     go to state 128


State 71

   54 qname: qname . "`::`" identifier
  175 new-expression: "`new`" qname .
  177               | "`new`" qname . "`(`" argument-list-opt "`)`"

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 129

    $default  reduce using rule 175 (new-expression)


State 72

  176 new-expression: "`new`" apostrophe-expression .
  178               | "`new`" apostrophe-expression . "`(`" argument-list-opt "`)`"

    "`(`"  shift, and go to state 130

    $default  reduce using rule 176 (new-expression)


State 73

   30 finished-statement: "`while`" syntax-expression . braced-statements
   31                   | "`while`" syntax-expression . "`;`" syntax-expression braced-statements
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 131
    "`[`"          shift, and go to state 106
    "`;`"          shift, and go to state 132
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 133


State 74

   32 finished-statement: "`for`" syntax-expression . "`in`" syntax-expression braced-statements
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111
    "`in`"         shift, and go to state 134


State 75

   33 finished-statement: "`if`" syntax-expression . braced-statements
   34                   | "`if`" syntax-expression . braced-statements "`else`" braced-statements
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 131
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 135


State 76

   54 qname: qname . "`::`" identifier
   70 using-decl: qname . "`=>`" syntax-expression
   71           | qname . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

    "`=>`"  shift, and go to state 136
    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 137


State 77

   42 generic-statement: USING using-decl .

    $default  reduce using rule 42 (generic-statement)


State 78

   12 statement: INCLUDE STRING .

    $default  reduce using rule 12 (statement)


State 79

   56 fn-start-decl: INLINE "`fn`" .

    $default  reduce using rule 56 (fn-start-decl)


State 80

   54 qname: qname . "`::`" identifier
   62 enum-decl: qname . "`{`" case-list-opt "`}`"

    "`::`"  shift, and go to state 91
    "`{`"   shift, and go to state 138


State 81

   38 finished-statement: ENUM enum-decl .

    $default  reduce using rule 38 (finished-statement)


State 82

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier
   68 struct-decl: qname . "`=>`" "`(`" field-list-opt "`)`"
   69            | qname . "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 139
    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 140
    "`{`"   shift, and go to state 131

    braced-statements  go to state 141


State 83

   15 statement: STRUCT struct-decl .

    $default  reduce using rule 15 (statement)


State 84

    0 $accept: begin "end of file" .

    $default  accept


State 85

    1 begin: statement_any "end of file" .

    $default  reduce using rule 1 (begin)


State 86

    9 finished-statement-any: statement_any "`;`" .

    $default  reduce using rule 9 (finished-statement-any)


State 87

    2 begin: finished-statement-any "end of file" .

    $default  reduce using rule 2 (begin)


State 88

    7 finished-statement-any: finished-statement-any "`;`" .

    $default  reduce using rule 7 (finished-statement-any)


State 89

    5 statement_any: finished-statement-any statement .

    $default  reduce using rule 5 (statement_any)


State 90

    8 finished-statement-any: finished-statement-any finished-statement .

    $default  reduce using rule 8 (finished-statement-any)


State 91

   54 qname: qname "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 142


State 92

  179 call-expression: qname "`(`" . pack-expression-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 185 (pack-expression-opt)

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression-opt      go to state 143
    pack-expression          go to state 144
    compound-expression      go to state 51


State 93

  183 lambda-expression: fn-start-decl "`(`" . parameter-list-opt "`)`" braced-statements
  184                  | fn-start-decl "`(`" . parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-list-opt         go to state 156
    parameter-list             go to state 157
    parameter-decl             go to state 158
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 94

   58 fn-name: "`new`" .

    $default  reduce using rule 58 (fn-name)


State 95

   54 qname: qname . "`::`" identifier
   57 fn-name: qname .

    "`::`"  shift, and go to state 91

    $default  reduce using rule 57 (fn-name)


State 96

   13 statement: fn-start-decl fn-name . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 166


State 97

   35 finished-statement: fn-start-decl fn-decl . braced-statements

    "`{`"  shift, and go to state 131

    braced-statements  go to state 167


State 98

  158 syntax-expression-wo-ii: syntax-expression INTEGER_INDEX .

    $default  reduce using rule 158 (syntax-expression-wo-ii)


State 99

   44 generic-statement: syntax-expression "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 168
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 100

  163 syntax-expression-wo-ii: syntax-expression "`==`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 169
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 101

  164 syntax-expression-wo-ii: syntax-expression "`!=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 170
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 102

  168 syntax-expression-wo-ii: syntax-expression "`&&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 171
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 103

  169 syntax-expression-wo-ii: syntax-expression "`||`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 172
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 104

  165 syntax-expression-wo-ii: syntax-expression "`..`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 173
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 105

  191 compound-expression: syntax-expression "`...`" .

    $default  reduce using rule 191 (compound-expression)


State 106

  154 syntax-expression-wo-ii: syntax-expression "`[`" . syntax-expression "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 174
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 107

  156 syntax-expression-wo-ii: syntax-expression "`.`" . identifier
  157                        | syntax-expression "`.`" . apostrophe-expression

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10

    identifier             go to state 175
    apostrophe-expression  go to state 176


State 108

  161 syntax-expression-wo-ii: syntax-expression "`+`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 177
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 109

  162 syntax-expression-wo-ii: syntax-expression "`-`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 178
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 110

  166 syntax-expression-wo-ii: syntax-expression "`&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 179
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 111

  167 syntax-expression-wo-ii: syntax-expression "`|`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 180
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 112

  181 call-expression: apostrophe-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 181
    compound-expression      go to state 51


State 113

  180 call-expression: call-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 182
    compound-expression      go to state 51


State 114

  182 call-expression: lambda-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 183
    compound-expression      go to state 51


State 115

  174 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE" .

    $default  reduce using rule 174 (apostrophe-expression)


State 116

  150 syntax-expression-wo-ii: "`(`" "`:`" syntax-expression . "`)`"
  154                        | syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`)`"          shift, and go to state 184
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 117

  188 pack-expression: identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 185
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 118

  151 syntax-expression-wo-ii: "`(`" pack-expression "`)`" .

    $default  reduce using rule 151 (syntax-expression-wo-ii)


State 119

  189 pack-expression: pack-expression "," . syntax-expression
  190                | pack-expression "," . identifier "`:`" syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 186
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 187
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 120

  152 syntax-expression-wo-ii: "`[`" expression-list "`]`" .

    $default  reduce using rule 152 (syntax-expression-wo-ii)


State 121

   73 expression-list: expression-list "," . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 188
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 122

  153 syntax-expression-wo-ii: "`[[`" expression-list "`]]`" .

    $default  reduce using rule 153 (syntax-expression-wo-ii)


State 123

   19 let-decl-start: "weak modifier" identifier .

    $default  reduce using rule 19 (let-decl-start)


State 124

   21 let-decl-start-with-opt-type: let-decl-start "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 196


State 125

   17 let-decl: let-decl-start-with-opt-type "`=`" . pack-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 197
    compound-expression      go to state 51


State 126

   10 statement: EXTERN VAR identifier . "`:`" type-expr

    "`:`"  shift, and go to state 198


State 127

   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 199


State 128

   11 statement: EXTERN "`fn`" fn-decl .

    $default  reduce using rule 11 (statement)


State 129

  177 new-expression: "`new`" qname "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 200
    qname                    go to state 40
    fn-start-decl            go to state 49
    argument-list-opt        go to state 201
    argument-list            go to state 202
    argument                 go to state 203
    argument-name            go to state 204
    syntax-expression        go to state 205
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 130

  178 new-expression: "`new`" apostrophe-expression "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 200
    qname                    go to state 40
    fn-start-decl            go to state 49
    argument-list-opt        go to state 206
    argument-list            go to state 202
    argument                 go to state 203
    argument-name            go to state 204
    syntax-expression        go to state 205
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 131

   29 braced-statements: "`{`" . infunction-statement-set "`}`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 207
    "`break`"            shift, and go to state 208
    "`return`"           shift, and go to state 209
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 210
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 22 (infunction-statement-any)

    infunction-statement-any           go to state 211
    finished-infunction-statement-any  go to state 212
    finished-statement                 go to state 213
    infunction-statement-set           go to state 214
    generic-statement                  go to state 215
    infunction-statement               go to state 216
    identifier                         go to state 39
    qname                              go to state 40
    fn-start-decl                      go to state 217
    syntax-expression                  go to state 42
    syntax-expression-wo-ii            go to state 43
    apostrophe-expression              go to state 44
    new-expression                     go to state 45
    call-expression                    go to state 46
    lambda-expression                  go to state 47
    compound-expression                go to state 48


State 132

   31 finished-statement: "`while`" syntax-expression "`;`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 218
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 133

   30 finished-statement: "`while`" syntax-expression braced-statements .

    $default  reduce using rule 30 (finished-statement)


State 134

   32 finished-statement: "`for`" syntax-expression "`in`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 219
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 135

   33 finished-statement: "`if`" syntax-expression braced-statements .
   34                   | "`if`" syntax-expression braced-statements . "`else`" braced-statements

    "`else`"  shift, and go to state 220

    $default  reduce using rule 33 (finished-statement)


State 136

   70 using-decl: qname "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 221
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 137

   71 using-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-list-opt         go to state 222
    parameter-list             go to state 157
    parameter-decl             go to state 158
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 138

   62 enum-decl: qname "`{`" . case-list-opt "`}`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 63 (case-list-opt)

    identifier     go to state 223
    case-list-opt  go to state 224
    case-list      go to state 225
    case-decl      go to state 226


State 139

   68 struct-decl: qname "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 227


State 140

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements
   69 struct-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-list-opt         go to state 228
    parameter-list             go to state 157
    parameter-decl             go to state 158
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 141

   36 finished-statement: STRUCT qname braced-statements .

    $default  reduce using rule 36 (finished-statement)


State 142

   54 qname: qname "`::`" identifier .

    $default  reduce using rule 54 (qname)


State 143

  179 call-expression: qname "`(`" pack-expression-opt . "`)`"

    "`)`"  shift, and go to state 229


State 144

  186 pack-expression-opt: pack-expression .
  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 119

    $default  reduce using rule 186 (pack-expression-opt)


State 145

   51 internal-identifier: CONTEXT_IDENTIFIER .

    $default  reduce using rule 51 (internal-identifier)


State 146

  131 concept-expression: "`@`" . qname

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 230


State 147

  127 pattern: "`_`" . subpatterns concept-expression-list-opt
  129        | "`_`" . concept-expression-list-opt

    "`@`"  shift, and go to state 146
    "`(`"  shift, and go to state 231

    $default  reduce using rule 132 (concept-expression-list-opt)

    subpatterns                  go to state 232
    concept-expression           go to state 164
    concept-expression-list-opt  go to state 233
    concept-expression-list      go to state 234


State 148

  124 pattern-sfx: "`...`" .

    $default  reduce using rule 124 (pattern-sfx)


State 149

  128 pattern: "`(`" . syntax-expression "`)`" concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 235
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 150

  104 constraint-expression-mod: "`~`" .
  105                          | "`~`" . "constexpr modifier"
  106                          | "`~`" . "runctime modifier"

    "constexpr modifier"  shift, and go to state 236
    "runctime modifier"   shift, and go to state 237

    $default  reduce using rule 104 (constraint-expression-mod)


State 151

  120 pattern-mod: "constexpr modifier" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern-sfx              go to state 239
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 152

  121 pattern-mod: "runctime modifier" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern-sfx              go to state 240
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 153

   53 qname: identifier .
   98 parameter-decl: identifier . internal-identifier-opt "`:`" pattern-mod parameter-default-value-opt
  101               | identifier . internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt

    CONTEXT_IDENTIFIER  shift, and go to state 145

    "`:`"     reduce using rule 94 (internal-identifier-opt)
    $default  reduce using rule 53 (qname)

    internal-identifier      go to state 241
    internal-identifier-opt  go to state 242


State 154

   99 parameter-decl: internal-identifier . "`:`" pattern-mod parameter-default-value-opt
  102               | internal-identifier . "`:`" constraint-expression parameter-default-value-opt
  126 pattern: internal-identifier . concept-expression-list-opt

    "`@`"  shift, and go to state 146
    "`:`"  shift, and go to state 243

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 244
    concept-expression-list      go to state 234


State 155

   54 qname: qname . "`::`" identifier
  125 pattern: qname . subpatterns-opt concept-expression-list-opt

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 231

    $default  reduce using rule 109 (subpatterns-opt)

    subpatterns-opt  go to state 245
    subpatterns      go to state 246


State 156

  183 lambda-expression: fn-start-decl "`(`" parameter-list-opt . "`)`" braced-statements
  184                  | fn-start-decl "`(`" parameter-list-opt . "`)`" "`->`" type-expr braced-statements

    "`)`"  shift, and go to state 247


State 157

   91 parameter-list-opt: parameter-list .
   93 parameter-list: parameter-list . "," parameter-decl

    ","  shift, and go to state 248

    $default  reduce using rule 91 (parameter-list-opt)


State 158

   92 parameter-list: parameter-decl .

    $default  reduce using rule 92 (parameter-list)


State 159

  107 constraint-expression: constraint-expression-mod . type-expr
  108                      | constraint-expression-mod . type-expr "`...`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 249


State 160

  103 parameter-decl: constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 250

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 251


State 161

  100 parameter-decl: pattern-mod . parameter-default-value-opt

    "`=`"  shift, and go to state 250

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 252


State 162

  119 pattern-mod: pattern-sfx .

    $default  reduce using rule 119 (pattern-mod)


State 163

  122 pattern-sfx: pattern .
  123            | pattern . "`...`"

    "`...`"  shift, and go to state 253

    $default  reduce using rule 122 (pattern-sfx)


State 164

  134 concept-expression-list: concept-expression .

    $default  reduce using rule 134 (concept-expression-list)


State 165

  130 pattern: concept-expression-list .
  135 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 146

    $default  reduce using rule 130 (pattern)

    concept-expression  go to state 254


State 166

   13 statement: fn-start-decl fn-name "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-list-opt         go to state 255
    parameter-list             go to state 157
    parameter-decl             go to state 158
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 167

   35 finished-statement: fn-start-decl fn-decl braced-statements .

    $default  reduce using rule 35 (finished-statement)


State 168

   44 generic-statement: syntax-expression "`=`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 44 (generic-statement)


State 169

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  163                        | syntax-expression "`==`" syntax-expression .
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 163 (syntax-expression-wo-ii)


State 170

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  164                        | syntax-expression "`!=`" syntax-expression .
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 164 (syntax-expression-wo-ii)


State 171

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  168                        | syntax-expression "`&&`" syntax-expression .
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 168 (syntax-expression-wo-ii)


State 172

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  169                        | syntax-expression "`||`" syntax-expression .
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 169 (syntax-expression-wo-ii)


State 173

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  165                        | syntax-expression "`..`" syntax-expression .
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 165 (syntax-expression-wo-ii)


State 174

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  154                        | syntax-expression "`[`" syntax-expression . "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`]`"          shift, and go to state 256
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 175

  156 syntax-expression-wo-ii: syntax-expression "`.`" identifier .

    $default  reduce using rule 156 (syntax-expression-wo-ii)


State 176

  157 syntax-expression-wo-ii: syntax-expression "`.`" apostrophe-expression .

    $default  reduce using rule 157 (syntax-expression-wo-ii)


State 177

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  161                        | syntax-expression "`+`" syntax-expression .
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 161 (syntax-expression-wo-ii)


State 178

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  162                        | syntax-expression "`-`" syntax-expression .
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 162 (syntax-expression-wo-ii)


State 179

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  166                        | syntax-expression "`&`" syntax-expression .
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 166 (syntax-expression-wo-ii)


State 180

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  167                        | syntax-expression "`|`" syntax-expression .
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110

    $default  reduce using rule 167 (syntax-expression-wo-ii)


State 181

  181 call-expression: apostrophe-expression "`(`" pack-expression . "`)`"
  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 257
    ","    shift, and go to state 119


State 182

  180 call-expression: call-expression "`(`" pack-expression . "`)`"
  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 258
    ","    shift, and go to state 119


State 183

  182 call-expression: lambda-expression "`(`" pack-expression . "`)`"
  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 259
    ","    shift, and go to state 119


State 184

  150 syntax-expression-wo-ii: "`(`" "`:`" syntax-expression "`)`" .

    $default  reduce using rule 150 (syntax-expression-wo-ii)


State 185

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  188 pack-expression: identifier "`:`" syntax-expression .
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 188 (pack-expression)


State 186

   53 qname: identifier .
  190 pack-expression: pack-expression "," identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 260

    $default  reduce using rule 53 (qname)


State 187

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  189 pack-expression: pack-expression "," syntax-expression .
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 189 (pack-expression)


State 188

   73 expression-list: expression-list "," syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 73 (expression-list)


State 189

  195 type-expr: CONTEXT_IDENTIFIER .

    $default  reduce using rule 195 (type-expr)


State 190

  197 type-expr: "`(`" . "`)`"
  198          | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`)`"                shift, and go to state 261
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 55
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 56
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    pack-expression          go to state 262
    compound-expression      go to state 51


State 191

  196 type-expr: "`[`" . type-expr "`]`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 263


State 192

   54 qname: qname . "`::`" identifier
  179 call-expression: qname . "`(`" pack-expression-opt "`)`"
  193 type-expr: qname .

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 92

    $default  reduce using rule 193 (type-expr)


State 193

  181 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 112


State 194

  180 call-expression: call-expression . "`(`" pack-expression "`)`"
  194 type-expr: call-expression .

    "`(`"  shift, and go to state 113

    $default  reduce using rule 194 (type-expr)


State 195

  182 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 114


State 196

   21 let-decl-start-with-opt-type: let-decl-start "`:`" type-expr .
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265
    "`|`"   shift, and go to state 266

    $default  reduce using rule 21 (let-decl-start-with-opt-type)


State 197

   17 let-decl: let-decl-start-with-opt-type "`=`" pack-expression .
  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 119

    $default  reduce using rule 17 (let-decl)


State 198

   10 statement: EXTERN VAR identifier "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 267


State 199

   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-list-opt         go to state 268
    parameter-list             go to state 157
    parameter-decl             go to state 158
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 200

   53 qname: identifier .
   80 argument-name: identifier . "`=`"
   81              | identifier . "`:`"

    "`=`"  shift, and go to state 269
    "`:`"  shift, and go to state 270

    $default  reduce using rule 53 (qname)


State 201

  177 new-expression: "`new`" qname "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 271


State 202

   75 argument-list-opt: argument-list .
   77 argument-list: argument-list . "," argument

    ","  shift, and go to state 272

    $default  reduce using rule 75 (argument-list-opt)


State 203

   76 argument-list: argument .

    $default  reduce using rule 76 (argument-list)


State 204

   78 argument: argument-name . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 273
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 205

   79 argument: syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 79 (argument)


State 206

  178 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 274


State 207

   47 infunction-statement: "`continue`" .

    $default  reduce using rule 47 (infunction-statement)


State 208

   46 infunction-statement: "`break`" .

    $default  reduce using rule 46 (infunction-statement)


State 209

   48 infunction-statement: "`return`" .
   49                     | "`return`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 48 (infunction-statement)

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 275
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 210

   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 39
    qname       go to state 276


State 211

   28 finished-infunction-statement-any: infunction-statement-any . "`;`"
   39 infunction-statement-set: infunction-statement-any .

    "`;`"  shift, and go to state 277

    $default  reduce using rule 39 (infunction-statement-set)


State 212

   24 infunction-statement-any: finished-infunction-statement-any . infunction-statement
   26 finished-infunction-statement-any: finished-infunction-statement-any . "`;`"
   27                                  | finished-infunction-statement-any . finished-statement
   40 infunction-statement-set: finished-infunction-statement-any .

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 278
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 207
    "`break`"            shift, and go to state 208
    "`return`"           shift, and go to state 209
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 210
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    $default  reduce using rule 40 (infunction-statement-set)

    finished-statement       go to state 279
    generic-statement        go to state 215
    infunction-statement     go to state 280
    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 217
    syntax-expression        go to state 42
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 48


State 213

   25 finished-infunction-statement-any: finished-statement .

    $default  reduce using rule 25 (finished-infunction-statement-any)


State 214

   29 braced-statements: "`{`" infunction-statement-set . "`}`"

    "`}`"  shift, and go to state 281


State 215

   45 infunction-statement: generic-statement .

    $default  reduce using rule 45 (infunction-statement)


State 216

   23 infunction-statement-any: infunction-statement .

    $default  reduce using rule 23 (infunction-statement-any)


State 217

   35 finished-statement: fn-start-decl . fn-decl braced-statements
  183 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  184                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 93
    "`new`"     shift, and go to state 94

    identifier  go to state 39
    qname       go to state 95
    fn-name     go to state 127
    fn-decl     go to state 97


State 218

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression . braced-statements
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 131
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 282


State 219

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression . braced-statements
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 131
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 283


State 220

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" . braced-statements

    "`{`"  shift, and go to state 131

    braced-statements  go to state 284


State 221

   70 using-decl: qname "`=>`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 70 (using-decl)


State 222

   71 using-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression

    "`)`"  shift, and go to state 285


State 223

   67 case-decl: identifier .

    $default  reduce using rule 67 (case-decl)


State 224

   62 enum-decl: qname "`{`" case-list-opt . "`}`"

    "`}`"  shift, and go to state 286


State 225

   64 case-list-opt: case-list .
   66 case-list: case-list . "," case-decl

    ","  shift, and go to state 287

    $default  reduce using rule 64 (case-list-opt)


State 226

   65 case-list: case-decl .

    $default  reduce using rule 65 (case-list)


State 227

   68 struct-decl: qname "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 288
    field-list-opt  go to state 289
    field-list      go to state 290
    field           go to state 291


State 228

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`)`"  shift, and go to state 292


State 229

  179 call-expression: qname "`(`" pack-expression-opt "`)`" .

    $default  reduce using rule 179 (call-expression)


State 230

   54 qname: qname . "`::`" identifier
  131 concept-expression: "`@`" qname .

    "`::`"  shift, and go to state 91

    $default  reduce using rule 131 (concept-expression)


State 231

  111 subpatterns: "`(`" . pattern-list "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 293
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 294

    identifier               go to state 295
    internal-identifier      go to state 296
    qname                    go to state 155
    pattern-list             go to state 297
    pattern-field            go to state 298
    pattern-sfx              go to state 299
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 232

  127 pattern: "`_`" subpatterns . concept-expression-list-opt

    "`@`"  shift, and go to state 146

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 300
    concept-expression-list      go to state 234


State 233

  129 pattern: "`_`" concept-expression-list-opt .

    $default  reduce using rule 129 (pattern)


State 234

  133 concept-expression-list-opt: concept-expression-list .
  135 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 146

    $default  reduce using rule 133 (concept-expression-list-opt)

    concept-expression  go to state 254


State 235

  128 pattern: "`(`" syntax-expression . "`)`" concept-expression-list-opt
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`)`"          shift, and go to state 301
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 236

  105 constraint-expression-mod: "`~`" "constexpr modifier" .

    $default  reduce using rule 105 (constraint-expression-mod)


State 237

  106 constraint-expression-mod: "`~`" "runctime modifier" .

    $default  reduce using rule 106 (constraint-expression-mod)


State 238

  126 pattern: internal-identifier . concept-expression-list-opt

    "`@`"  shift, and go to state 146

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 244
    concept-expression-list      go to state 234


State 239

  120 pattern-mod: "constexpr modifier" pattern-sfx .

    $default  reduce using rule 120 (pattern-mod)


State 240

  121 pattern-mod: "runctime modifier" pattern-sfx .

    $default  reduce using rule 121 (pattern-mod)


State 241

   95 internal-identifier-opt: internal-identifier .

    $default  reduce using rule 95 (internal-identifier-opt)


State 242

   98 parameter-decl: identifier internal-identifier-opt . "`:`" pattern-mod parameter-default-value-opt
  101               | identifier internal-identifier-opt . "`:`" constraint-expression parameter-default-value-opt

    "`:`"  shift, and go to state 302


State 243

   99 parameter-decl: internal-identifier "`:`" . pattern-mod parameter-default-value-opt
  102               | internal-identifier "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    identifier                 go to state 39
    internal-identifier        go to state 238
    qname                      go to state 155
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 303
    pattern-mod                go to state 304
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 244

  126 pattern: internal-identifier concept-expression-list-opt .

    $default  reduce using rule 126 (pattern)


State 245

  125 pattern: qname subpatterns-opt . concept-expression-list-opt

    "`@`"  shift, and go to state 146

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 305
    concept-expression-list      go to state 234


State 246

  110 subpatterns-opt: subpatterns .

    $default  reduce using rule 110 (subpatterns-opt)


State 247

  183 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" . braced-statements
  184                  | fn-start-decl "`(`" parameter-list-opt "`)`" . "`->`" type-expr braced-statements

    "`->`"  shift, and go to state 306
    "`{`"   shift, and go to state 131

    braced-statements  go to state 307


State 248

   93 parameter-list: parameter-list "," . parameter-decl

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-decl             go to state 308
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 249

  107 constraint-expression: constraint-expression-mod type-expr .
  108                      | constraint-expression-mod type-expr . "`...`"
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`->`"   shift, and go to state 264
    "`...`"  shift, and go to state 309
    "`[`"    shift, and go to state 265
    "`|`"    shift, and go to state 266

    $default  reduce using rule 107 (constraint-expression)


State 250

   97 parameter-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 310
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 251

  103 parameter-decl: constraint-expression parameter-default-value-opt .

    $default  reduce using rule 103 (parameter-decl)


State 252

  100 parameter-decl: pattern-mod parameter-default-value-opt .

    $default  reduce using rule 100 (parameter-decl)


State 253

  123 pattern-sfx: pattern "`...`" .

    $default  reduce using rule 123 (pattern-sfx)


State 254

  135 concept-expression-list: concept-expression-list concept-expression .

    $default  reduce using rule 135 (concept-expression-list)


State 255

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 311


State 256

  154 syntax-expression-wo-ii: syntax-expression "`[`" syntax-expression "`]`" .

    $default  reduce using rule 154 (syntax-expression-wo-ii)


State 257

  181 call-expression: apostrophe-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 181 (call-expression)


State 258

  180 call-expression: call-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 180 (call-expression)


State 259

  182 call-expression: lambda-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 182 (call-expression)


State 260

  190 pack-expression: pack-expression "," identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 312
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 261

  197 type-expr: "`(`" "`)`" .

    $default  reduce using rule 197 (type-expr)


State 262

  189 pack-expression: pack-expression . "," syntax-expression
  190                | pack-expression . "," identifier "`:`" syntax-expression
  198 type-expr: "`(`" pack-expression . "`)`"

    "`)`"  shift, and go to state 313
    ","    shift, and go to state 119


State 263

  196 type-expr: "`[`" type-expr . "`]`"
  199          | type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265
    "`]`"   shift, and go to state 314
    "`|`"   shift, and go to state 266


State 264

  201 type-expr: type-expr "`->`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 315


State 265

  199 type-expr: type-expr "`[`" . INTEGER "`]`"

    INTEGER  shift, and go to state 316


State 266

  200 type-expr: type-expr "`|`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 317


State 267

   10 statement: EXTERN VAR identifier "`:`" type-expr .
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265
    "`|`"   shift, and go to state 266

    $default  reduce using rule 10 (statement)


State 268

   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 318


State 269

   80 argument-name: identifier "`=`" .

    $default  reduce using rule 80 (argument-name)


State 270

   81 argument-name: identifier "`:`" .

    $default  reduce using rule 81 (argument-name)


State 271

  177 new-expression: "`new`" qname "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 177 (new-expression)


State 272

   77 argument-list: argument-list "," . argument

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 200
    qname                    go to state 40
    fn-start-decl            go to state 49
    argument                 go to state 319
    argument-name            go to state 204
    syntax-expression        go to state 205
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 273

   78 argument: argument-name syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 78 (argument)


State 274

  178 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 178 (new-expression)


State 275

   49 infunction-statement: "`return`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 49 (infunction-statement)


State 276

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 320
    "`{`"   shift, and go to state 131

    braced-statements  go to state 141


State 277

   28 finished-infunction-statement-any: infunction-statement-any "`;`" .

    $default  reduce using rule 28 (finished-infunction-statement-any)


State 278

   26 finished-infunction-statement-any: finished-infunction-statement-any "`;`" .

    $default  reduce using rule 26 (finished-infunction-statement-any)


State 279

   27 finished-infunction-statement-any: finished-infunction-statement-any finished-statement .

    $default  reduce using rule 27 (finished-infunction-statement-any)


State 280

   24 infunction-statement-any: finished-infunction-statement-any infunction-statement .

    $default  reduce using rule 24 (infunction-statement-any)


State 281

   29 braced-statements: "`{`" infunction-statement-set "`}`" .

    $default  reduce using rule 29 (braced-statements)


State 282

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression braced-statements .

    $default  reduce using rule 31 (finished-statement)


State 283

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression braced-statements .

    $default  reduce using rule 32 (finished-statement)


State 284

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" braced-statements .

    $default  reduce using rule 34 (finished-statement)


State 285

   71 using-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression

    "`=>`"  shift, and go to state 321


State 286

   62 enum-decl: qname "`{`" case-list-opt "`}`" .

    $default  reduce using rule 62 (enum-decl)


State 287

   66 case-list: case-list "," . case-decl

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 223
    case-decl   go to state 322


State 288

   88 field: identifier . "`:`" type-expr field-default-value-opt
   89      | identifier . "`=>`" type-expr field-default-value-opt

    "`=>`"  shift, and go to state 323
    "`:`"   shift, and go to state 324


State 289

   68 struct-decl: qname "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 325


State 290

   83 field-list-opt: field-list .
   85 field-list: field-list . "," field

    ","  shift, and go to state 326

    $default  reduce using rule 83 (field-list-opt)


State 291

   84 field-list: field .

    $default  reduce using rule 84 (field-list)


State 292

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 327
    "`{`"   shift, and go to state 131

    braced-statements  go to state 328


State 293

  115 pattern-field: "`_`" . "`:`" pattern-sfx
  127 pattern: "`_`" . subpatterns concept-expression-list-opt
  129        | "`_`" . concept-expression-list-opt

    "`@`"  shift, and go to state 146
    "`:`"  shift, and go to state 329
    "`(`"  shift, and go to state 231

    $default  reduce using rule 132 (concept-expression-list-opt)

    subpatterns                  go to state 232
    concept-expression           go to state 164
    concept-expression-list-opt  go to state 233
    concept-expression-list      go to state 234


State 294

  118 pattern-field: "`(`" . syntax-expression "`)`" "`:`" pattern-sfx
  128 pattern: "`(`" . syntax-expression "`)`" concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 330
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 295

   53 qname: identifier .
  116 pattern-field: identifier . "`:`" pattern-sfx

    "`:`"  shift, and go to state 331

    $default  reduce using rule 53 (qname)


State 296

  117 pattern-field: internal-identifier . "`:`" pattern-sfx
  126 pattern: internal-identifier . concept-expression-list-opt

    "`@`"  shift, and go to state 146
    "`:`"  shift, and go to state 332

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 244
    concept-expression-list      go to state 234


State 297

  111 subpatterns: "`(`" pattern-list . "`)`"
  113 pattern-list: pattern-list . "," pattern-field

    "`)`"  shift, and go to state 333
    ","    shift, and go to state 334


State 298

  112 pattern-list: pattern-field .

    $default  reduce using rule 112 (pattern-list)


State 299

  114 pattern-field: pattern-sfx .

    $default  reduce using rule 114 (pattern-field)


State 300

  127 pattern: "`_`" subpatterns concept-expression-list-opt .

    $default  reduce using rule 127 (pattern)


State 301

  128 pattern: "`(`" syntax-expression "`)`" . concept-expression-list-opt

    "`@`"  shift, and go to state 146

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 335
    concept-expression-list      go to state 234


State 302

   98 parameter-decl: identifier internal-identifier-opt "`:`" . pattern-mod parameter-default-value-opt
  101               | identifier internal-identifier-opt "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    identifier                 go to state 39
    internal-identifier        go to state 238
    qname                      go to state 155
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 336
    pattern-mod                go to state 337
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 303

  102 parameter-decl: internal-identifier "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 250

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 338


State 304

   99 parameter-decl: internal-identifier "`:`" pattern-mod . parameter-default-value-opt

    "`=`"  shift, and go to state 250

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 339


State 305

  125 pattern: qname subpatterns-opt concept-expression-list-opt .

    $default  reduce using rule 125 (pattern)


State 306

  184 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" . type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 340


State 307

  183 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 183 (lambda-expression)


State 308

   93 parameter-list: parameter-list "," parameter-decl .

    $default  reduce using rule 93 (parameter-list)


State 309

  108 constraint-expression: constraint-expression-mod type-expr "`...`" .

    $default  reduce using rule 108 (constraint-expression)


State 310

   97 parameter-default-value-opt: "`=`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 97 (parameter-default-value-opt)


State 311

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 341
    "`=>`"  shift, and go to state 342
    "`~>`"  shift, and go to state 343

    $default  reduce using rule 59 (fn-decl)


State 312

  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  190 pack-expression: pack-expression "," identifier "`:`" syntax-expression .
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 190 (pack-expression)


State 313

  198 type-expr: "`(`" pack-expression "`)`" .

    $default  reduce using rule 198 (type-expr)


State 314

  196 type-expr: "`[`" type-expr "`]`" .

    $default  reduce using rule 196 (type-expr)


State 315

  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr
  201          | type-expr "`->`" type-expr .

    $default  reduce using rule 201 (type-expr)


State 316

  199 type-expr: type-expr "`[`" INTEGER . "`]`"

    "`]`"  shift, and go to state 344


State 317

  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  200          | type-expr "`|`" type-expr .
  201          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265

    $default  reduce using rule 200 (type-expr)


State 318

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 341
    "`~>`"  shift, and go to state 343

    $default  reduce using rule 59 (fn-decl)


State 319

   77 argument-list: argument-list "," argument .

    $default  reduce using rule 77 (argument-list)


State 320

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements

    IDENTIFIER            shift, and go to state 2
    CONTEXT_IDENTIFIER    shift, and go to state 145
    "`@`"                 shift, and go to state 146
    "`_`"                 shift, and go to state 147
    "`...`"               shift, and go to state 148
    "`::`"                shift, and go to state 11
    "`(`"                 shift, and go to state 149
    "`~`"                 shift, and go to state 150
    "constexpr modifier"  shift, and go to state 151
    "runctime modifier"   shift, and go to state 152

    $default  reduce using rule 90 (parameter-list-opt)

    identifier                 go to state 153
    internal-identifier        go to state 154
    qname                      go to state 155
    parameter-list-opt         go to state 345
    parameter-list             go to state 157
    parameter-decl             go to state 158
    constraint-expression-mod  go to state 159
    constraint-expression      go to state 160
    pattern-mod                go to state 161
    pattern-sfx                go to state 162
    pattern                    go to state 163
    concept-expression         go to state 164
    concept-expression-list    go to state 165


State 321

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 346
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 322

   66 case-list: case-list "," case-decl .

    $default  reduce using rule 66 (case-list)


State 323

   89 field: identifier "`=>`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 347


State 324

   88 field: identifier "`:`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 348


State 325

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 68 (struct-decl)


State 326

   85 field-list: field-list "," . field

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 288
    field       go to state 349


State 327

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 350


State 328

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 37 (finished-statement)


State 329

  115 pattern-field: "`_`" "`:`" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern-sfx              go to state 351
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 330

  118 pattern-field: "`(`" syntax-expression . "`)`" "`:`" pattern-sfx
  128 pattern: "`(`" syntax-expression . "`)`" concept-expression-list-opt
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`)`"          shift, and go to state 352
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 331

  116 pattern-field: identifier "`:`" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern-sfx              go to state 353
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 332

  117 pattern-field: internal-identifier "`:`" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern-sfx              go to state 354
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 333

  111 subpatterns: "`(`" pattern-list "`)`" .

    $default  reduce using rule 111 (subpatterns)


State 334

  113 pattern-list: pattern-list "," . pattern-field

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 293
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 294

    identifier               go to state 295
    internal-identifier      go to state 296
    qname                    go to state 155
    pattern-field            go to state 355
    pattern-sfx              go to state 299
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 335

  128 pattern: "`(`" syntax-expression "`)`" concept-expression-list-opt .

    $default  reduce using rule 128 (pattern)


State 336

  101 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 250

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 356


State 337

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern-mod . parameter-default-value-opt

    "`=`"  shift, and go to state 250

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 357


State 338

  102 parameter-decl: internal-identifier "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 102 (parameter-decl)


State 339

   99 parameter-decl: internal-identifier "`:`" pattern-mod parameter-default-value-opt .

    $default  reduce using rule 99 (parameter-decl)


State 340

  184 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr . braced-statements
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 264
    "`{`"   shift, and go to state 131
    "`[`"   shift, and go to state 265
    "`|`"   shift, and go to state 266

    braced-statements  go to state 358


State 341

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern                  go to state 359
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 342

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 360
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 343

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 189
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 190
    "`[`"               shift, and go to state 191
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27

    identifier             go to state 39
    qname                  go to state 192
    fn-start-decl          go to state 49
    apostrophe-expression  go to state 193
    call-expression        go to state 194
    lambda-expression      go to state 195
    type-expr              go to state 361


State 344

  199 type-expr: type-expr "`[`" INTEGER "`]`" .

    $default  reduce using rule 199 (type-expr)


State 345

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements

    "`)`"  shift, and go to state 362


State 346

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 71 (using-decl)


State 347

   89 field: identifier "`=>`" type-expr . field-default-value-opt
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 363
    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265
    "`|`"   shift, and go to state 266

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 364


State 348

   88 field: identifier "`:`" type-expr . field-default-value-opt
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 363
    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265
    "`|`"   shift, and go to state 266

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 365


State 349

   85 field-list: field-list "," field .

    $default  reduce using rule 85 (field-list)


State 350

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 288
    field-list-opt  go to state 366
    field-list      go to state 290
    field           go to state 291


State 351

  115 pattern-field: "`_`" "`:`" pattern-sfx .

    $default  reduce using rule 115 (pattern-field)


State 352

  118 pattern-field: "`(`" syntax-expression "`)`" . "`:`" pattern-sfx
  128 pattern: "`(`" syntax-expression "`)`" . concept-expression-list-opt

    "`@`"  shift, and go to state 146
    "`:`"  shift, and go to state 367

    $default  reduce using rule 132 (concept-expression-list-opt)

    concept-expression           go to state 164
    concept-expression-list-opt  go to state 335
    concept-expression-list      go to state 234


State 353

  116 pattern-field: identifier "`:`" pattern-sfx .

    $default  reduce using rule 116 (pattern-field)


State 354

  117 pattern-field: internal-identifier "`:`" pattern-sfx .

    $default  reduce using rule 117 (pattern-field)


State 355

  113 pattern-list: pattern-list "," pattern-field .

    $default  reduce using rule 113 (pattern-list)


State 356

  101 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 101 (parameter-decl)


State 357

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern-mod parameter-default-value-opt .

    $default  reduce using rule 98 (parameter-decl)


State 358

  184 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements .

    $default  reduce using rule 184 (lambda-expression)


State 359

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern .

    $default  reduce using rule 61 (fn-decl)


State 360

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 13 (statement)


State 361

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr .
  199 type-expr: type-expr . "`[`" INTEGER "`]`"
  200          | type-expr . "`|`" type-expr
  201          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 264
    "`[`"   shift, and go to state 265
    "`|`"   shift, and go to state 266

    $default  reduce using rule 60 (fn-decl)


State 362

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements

    "`{`"  shift, and go to state 131

    braced-statements  go to state 328


State 363

   87 field-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "nil"                shift, and go to state 30
    "true"               shift, and go to state 31
    "false"              shift, and go to state 32

    identifier               go to state 39
    qname                    go to state 40
    fn-start-decl            go to state 49
    syntax-expression        go to state 368
    syntax-expression-wo-ii  go to state 43
    apostrophe-expression    go to state 44
    new-expression           go to state 45
    call-expression          go to state 46
    lambda-expression        go to state 47
    compound-expression      go to state 51


State 364

   89 field: identifier "`=>`" type-expr field-default-value-opt .

    $default  reduce using rule 89 (field)


State 365

   88 field: identifier "`:`" type-expr field-default-value-opt .

    $default  reduce using rule 88 (field)


State 366

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 369


State 367

  118 pattern-field: "`(`" syntax-expression "`)`" "`:`" . pattern-sfx

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 145
    "`@`"               shift, and go to state 146
    "`_`"               shift, and go to state 147
    "`...`"             shift, and go to state 148
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 149

    identifier               go to state 39
    internal-identifier      go to state 238
    qname                    go to state 155
    pattern-sfx              go to state 370
    pattern                  go to state 163
    concept-expression       go to state 164
    concept-expression-list  go to state 165


State 368

   87 field-default-value-opt: "`=`" syntax-expression .
  154 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  156                        | syntax-expression . "`.`" identifier
  157                        | syntax-expression . "`.`" apostrophe-expression
  158                        | syntax-expression . INTEGER_INDEX
  161                        | syntax-expression . "`+`" syntax-expression
  162                        | syntax-expression . "`-`" syntax-expression
  163                        | syntax-expression . "`==`" syntax-expression
  164                        | syntax-expression . "`!=`" syntax-expression
  165                        | syntax-expression . "`..`" syntax-expression
  166                        | syntax-expression . "`&`" syntax-expression
  167                        | syntax-expression . "`|`" syntax-expression
  168                        | syntax-expression . "`&&`" syntax-expression
  169                        | syntax-expression . "`||`" syntax-expression
  191 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 87 (field-default-value-opt)


State 369

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 69 (struct-decl)


State 370

  118 pattern-field: "`(`" syntax-expression "`)`" "`:`" pattern-sfx .

    $default  reduce using rule 118 (pattern-field)
