Terminals unused in grammar

    COMMENT_BEGIN
    COMMENT_END
    OPERATOR_TERM
    "`->*`"
    "`.*`"
    "`++`"
    "`--`"
    "`<<`"
    "`>>`"
    "`<=`"
    "`>=`"
    "`+=`"
    "`-=`"
    "`*=`"
    "`/=`"
    "`%=`"
    "`<<=`"
    "`>>=`"
    "`&=`"
    "`|=`"
    "`^=`"
    "`<`"
    "`>`"
    "`/`"
    "`%`"
    "`^`"
    "`$`"
    "`?`"
    "`#`"
    AUTO
    THROW
    SIZEOF
    LOWEST
    EXTENDS
    "const modifier"


Grammar

    0 $accept: begin "end of file"

    1 begin: statement_any "end of file"
    2      | finished-statement-any "end of file"

    3 statement_any: %empty
    4              | statement
    5              | finished-statement-any statement

    6 finished-statement-any: finished-statement
    7                       | finished-statement-any "`;`"
    8                       | finished-statement-any finished-statement
    9                       | statement_any "`;`"

   10 statement: EXTERN VAR identifier "`:`" type-expr
   11          | EXTERN "`fn`" fn-decl
   12          | INCLUDE STRING
   13          | fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   14          | generic-statement
   15          | STRUCT struct-decl

   16 let-decl: let-decl-start-with-opt-type
   17         | let-decl-start-with-opt-type "`=`" pack-expression

   18 let-decl-start: identifier
   19               | "weak modifier" identifier

   20 let-decl-start-with-opt-type: let-decl-start
   21                             | let-decl-start "`:`" type-expr

   22 infunction-statement-any: %empty
   23                         | infunction-statement
   24                         | finished-infunction-statement-any infunction-statement

   25 finished-infunction-statement-any: finished-statement
   26                                  | finished-infunction-statement-any "`;`"
   27                                  | finished-infunction-statement-any finished-statement
   28                                  | infunction-statement-any "`;`"

   29 braced-statements: "`{`" infunction-statement-set "`}`"

   30 finished-statement: "`while`" syntax-expression braced-statements
   31                   | "`while`" syntax-expression "`;`" syntax-expression braced-statements
   32                   | "`for`" syntax-expression "`in`" syntax-expression braced-statements
   33                   | "`if`" syntax-expression braced-statements
   34                   | "`if`" syntax-expression braced-statements "`else`" braced-statements
   35                   | fn-start-decl fn-decl braced-statements
   36                   | STRUCT qname braced-statements
   37                   | STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements
   38                   | ENUM enum-decl

   39 infunction-statement-set: infunction-statement-any
   40                         | finished-infunction-statement-any

   41 generic-statement: LET let-decl
   42                  | USING using-decl
   43                  | compound-expression
   44                  | syntax-expression "`=`" syntax-expression

   45 infunction-statement: generic-statement
   46                     | "`break`"
   47                     | "`continue`"
   48                     | "`return`"
   49                     | "`return`" syntax-expression

   50 identifier: IDENTIFIER

   51 internal-identifier: CONTEXT_IDENTIFIER

   52 qname: "`::`" identifier
   53      | identifier
   54      | qname "`::`" identifier

   55 fn-start-decl: "`fn`"
   56              | INLINE "`fn`"

   57 fn-name: qname
   58        | "`new`"

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`"
   60        | fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern

   62 enum-decl: qname "`{`" case-list-opt "`}`"

   63 case-list-opt: %empty
   64              | case-list

   65 case-list: case-decl
   66          | case-list "," case-decl

   67 case-decl: identifier

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`"
   69            | qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

   70 using-decl: qname "`=>`" syntax-expression
   71           | qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

   72 expression-list: syntax-expression
   73                | expression-list "," syntax-expression

   74 argument-list-opt: %empty
   75                  | argument-list

   76 argument-list: argument
   77              | argument-list "," argument

   78 argument: argument-name syntax-expression
   79         | syntax-expression

   80 argument-name: identifier "`=`"
   81              | identifier "`:`"

   82 field-list-opt: %empty
   83               | field-list

   84 field-list: field
   85           | field-list "," field

   86 field-default-value-opt: %empty
   87                        | "`=`" syntax-expression

   88 field: identifier "`:`" type-expr field-default-value-opt
   89      | identifier "`=>`" type-expr field-default-value-opt

   90 parameter-list-opt: %empty
   91                   | parameter-list

   92 parameter-list: parameter-decl
   93               | parameter-list "," parameter-decl

   94 internal-identifier-opt: %empty
   95                        | internal-identifier

   96 parameter-default-value-opt: %empty
   97                            | "`=`" syntax-expression

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern parameter-default-value-opt
   99               | internal-identifier "`:`" pattern parameter-default-value-opt
  100               | pattern parameter-default-value-opt
  101               | identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt
  102               | internal-identifier "`:`" constraint-expression parameter-default-value-opt
  103               | constraint-expression parameter-default-value-opt

  104 constraint-expression: "`~`" type-expr
  105                      | "`~`" type-expr "`...`"

  106 subpatterns-opt: %empty
  107                | subpatterns

  108 subpatterns: "`(`" pattern-list "`)`"

  109 pattern-list: pattern-field
  110             | pattern-list "," pattern-field

  111 pattern-field: pattern
  112              | "`_`" "`:`" pattern
  113              | identifier "`:`" pattern
  114              | internal-identifier "`:`" pattern
  115              | "`(`" syntax-expression "`)`" "`:`" pattern

  116 pattern: qname subpatterns-opt concept-expression-list-opt
  117        | qname subpatterns-opt "`...`" concept-expression-list-opt
  118        | internal-identifier concept-expression-list-opt
  119        | internal-identifier "`...`" concept-expression-list-opt
  120        | "`_`" subpatterns concept-expression-list-opt
  121        | "`(`" syntax-expression "`)`" concept-expression-list-opt
  122        | "`(`" syntax-expression "`)`" "`...`" concept-expression-list-opt
  123        | "`_`" concept-expression-list-opt
  124        | concept-expression-list
  125        | "`_`" "`...`" concept-expression-list-opt
  126        | "`...`" concept-expression-list-opt

  127 concept-expression: "`@`" qname

  128 concept-expression-list-opt: %empty
  129                            | concept-expression-list

  130 concept-expression-list: concept-expression
  131                        | concept-expression-list concept-expression

  132 syntax-expression: CONTEXT_IDENTIFIER
  133                  | CT_IDENTIFIER
  134                  | syntax-expression-wo-ii

  135 syntax-expression-wo-ii: "nil"
  136                        | "true"
  137                        | "false"
  138                        | INTEGER
  139                        | DECIMAL
  140                        | DECIMAL_S
  141                        | INTEGER_INDEX
  142                        | STRING
  143                        | RESERVED_IDENTIFIER
  144                        | qname
  145                        | "`(`" pack-expression "`)`"
  146                        | "`[`" expression-list "`]`"
  147                        | "`[[`" expression-list "`]]`"
  148                        | syntax-expression "`[`" syntax-expression "`]`"
  149                        | "`.`" identifier
  150                        | syntax-expression "`.`" identifier
  151                        | syntax-expression "`.`" apostrophe-expression
  152                        | syntax-expression INTEGER_INDEX
  153                        | "`!`" syntax-expression
  154                        | "`*`" syntax-expression
  155                        | syntax-expression "`+`" syntax-expression
  156                        | syntax-expression "`-`" syntax-expression
  157                        | syntax-expression "`==`" syntax-expression
  158                        | syntax-expression "`!=`" syntax-expression
  159                        | syntax-expression "`..`" syntax-expression
  160                        | syntax-expression "`&`" syntax-expression
  161                        | syntax-expression "`|`" syntax-expression
  162                        | syntax-expression "`&&`" syntax-expression
  163                        | syntax-expression "`||`" syntax-expression
  164                        | apostrophe-expression
  165                        | new-expression
  166                        | compound-expression
  167                        | lambda-expression

  168 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE"

  169 new-expression: "`new`" qname
  170               | "`new`" apostrophe-expression
  171               | "`new`" qname "`(`" argument-list-opt "`)`"
  172               | "`new`" apostrophe-expression "`(`" argument-list-opt "`)`"

  173 call-expression: qname "`(`" pack-expression "`)`"
  174                | "mut modifier" "`(`" pack-expression "`)`"
  175                | call-expression "`(`" pack-expression "`)`"
  176                | apostrophe-expression "`(`" pack-expression "`)`"
  177                | lambda-expression "`(`" pack-expression "`)`"

  178 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements
  179                  | fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

  180 pack-expression: syntax-expression
  181                | identifier "`:`" syntax-expression
  182                | pack-expression "," syntax-expression
  183                | pack-expression "," identifier "`:`" syntax-expression

  184 compound-expression: syntax-expression "`...`"
  185                    | call-expression

  186 type-expr: qname
  187          | call-expression
  188          | CONTEXT_IDENTIFIER
  189          | "`[`" type-expr "`]`"
  190          | "`(`" "`)`"
  191          | "`(`" pack-expression "`)`"
  192          | type-expr "`[`" INTEGER "`]`"
  193          | type-expr "`|`" type-expr
  194          | type-expr "`->`" type-expr


Terminals, with rules where they appear

    "end of file" (0) 0 1 2
    error (256)
    COMMENT_BEGIN (258)
    COMMENT_END (259)
    STRING <sonia::lang::bang::annotated_string_view> (260) 12 142
    IDENTIFIER <sonia::lang::bang::annotated_string_view> (261) 50
    CONTEXT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (262) 51 132 188
    RESERVED_IDENTIFIER <sonia::lang::bang::annotated_string_view> (263) 143
    CT_IDENTIFIER <sonia::lang::bang::annotated_string_view> (264) 133
    INTEGER_INDEX <sonia::lang::bang::annotated_string_view> (265) 141 152
    INTEGER <sonia::lang::bang::annotated_integer> (266) 138 192
    DECIMAL <sonia::lang::bang::annotated_decimal> (267) 139
    DECIMAL_S <sonia::lang::bang::annotated_decimal> (268) 140
    OPERATOR_TERM <sonia::string_view> (269)
    "`=`" <sonia::lang::lex::resource_location> (270) 17 44 80 87 97
    "APOSTROPHE" (271) 168
    "`@`" (272) 127
    "`_`" <sonia::lang::lex::resource_location> (273) 112 120 123 125
    "`->*`" (274)
    "`->`" (275) 61 179 194
    "`=>`" (276) 13 68 69 70 71 89
    "`~>`" (277) 60
    "`.*`" (278)
    "`++`" (279)
    "`--`" (280)
    "`<<`" (281)
    "`>>`" (282)
    "`<=`" (283)
    "`>=`" (284)
    "`==`" <sonia::lang::lex::resource_location> (285) 157
    "`!=`" <sonia::lang::lex::resource_location> (286) 158
    "`&&`" <sonia::lang::lex::resource_location> (287) 162
    "`||`" <sonia::lang::lex::resource_location> (288) 163
    "`..`" <sonia::lang::lex::resource_location> (289) 159
    "`...`" <sonia::lang::lex::resource_location> (290) 105 117 119 122 125 126 184
    "`+=`" (291)
    "`-=`" (292)
    "`*=`" (293)
    "`/=`" (294)
    "`%=`" (295)
    "`<<=`" (296)
    "`>>=`" (297)
    "`&=`" (298)
    "`|=`" (299)
    "`^=`" (300)
    "`:`" (301) 10 21 81 88 98 99 101 102 112 113 114 115 181 183
    "`::`" (302) 52 54
    "`(`" <sonia::lang::lex::resource_location> (303) 13 37 59 60 61 68 69 71 108 115 121 122 145 171 172 173 174 175 176 177 178 179 190 191
    "`)`" (304) 13 37 59 60 61 68 69 71 108 115 121 122 145 171 172 173 174 175 176 177 178 179 190 191
    "`{`" <sonia::lang::lex::resource_location> (305) 29 62
    "`}`" (306) 29 62
    "`[`" <sonia::lang::lex::resource_location> (307) 146 148 189 192
    "`]`" (308) 146 148 189 192
    "`[[`" <sonia::lang::lex::resource_location> (309) 147
    "`]]`" (310) 147
    "`<`" (311)
    "`>`" (312)
    "`;`" (313) 7 9 26 28 31
    "`.`" <sonia::lang::lex::resource_location> (314) 149 150 151
    "`+`" <sonia::lang::lex::resource_location> (315) 155
    "`-`" <sonia::lang::lex::resource_location> (316) 156
    "`*`" <sonia::lang::lex::resource_location> (317) 154
    "`/`" (318)
    "`%`" (319)
    "`&`" <sonia::lang::lex::resource_location> (320) 160
    "`|`" <sonia::lang::lex::resource_location> (321) 161 193
    "`!`" <sonia::lang::lex::resource_location> (322) 153
    "`~`" (323) 104 105
    "`^`" (324)
    "," (325) 66 73 77 85 93 110 182 183
    "`$`" (326)
    "`?`" (327)
    "`#`" (328)
    LET (329) 41
    VAR (330) 10
    EXTERN (331) 10 11
    "`new`" <sonia::lang::lex::resource_location> (332) 58 169 170 171 172
    "`while`" (333) 30 31
    "`for`" (334) 32
    "`in`" (335) 32
    "`if`" (336) 33 34
    "`else`" (337) 34
    "`continue`" <sonia::lang::lex::resource_location> (338) 47
    "`break`" <sonia::lang::lex::resource_location> (339) 46
    "`return`" <sonia::lang::lex::resource_location> (340) 48 49
    AUTO (341)
    USING (342) 42
    THROW (343)
    SIZEOF (344)
    LOWEST (345)
    DEREF (346)
    INCLUDE (347) 12
    INLINE (348) 56
    "`fn`" <sonia::lang::lex::resource_location> (349) 11 55 56
    ENUM (350) 38
    STRUCT (351) 15 36 37
    EXTENDS (352)
    "weak modifier" (353) 19
    "const modifier" (354)
    "mut modifier" <sonia::lang::lex::resource_location> (355) 174
    "nil" <annotated_nil> (356) 135
    "true" <annotated_bool> (357) 136
    "false" <annotated_bool> (358) 137


Nonterminals, with rules where they appear

    $accept (104)
        on left: 0
    begin (105)
        on left: 1 2
        on right: 0
    statement_any <managed_statement_list> (106)
        on left: 3 4 5
        on right: 1 9
    finished-statement-any <managed_statement_list> (107)
        on left: 6 7 8 9
        on right: 2 5 7 8
    statement <statement> (108)
        on left: 10 11 12 13 14 15
        on right: 4 5
    let-decl <let_statement> (109)
        on left: 16 17
        on right: 41
    let-decl-start <let_statement> (110)
        on left: 18 19
        on right: 20 21
    let-decl-start-with-opt-type <let_statement> (111)
        on left: 20 21
        on right: 16 17
    infunction-statement-any <managed_statement_list> (112)
        on left: 22 23 24
        on right: 28 39
    finished-infunction-statement-any <managed_statement_list> (113)
        on left: 25 26 27 28
        on right: 24 26 27 40
    braced-statements <managed_statement_list> (114)
        on left: 29
        on right: 30 31 32 33 34 35 36 37 178 179
    finished-statement <finished_statement_type> (115)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 6 8 25 27
    infunction-statement-set <managed_statement_list> (116)
        on left: 39 40
        on right: 29
    generic-statement <generic_statement_type> (117)
        on left: 41 42 43 44
        on right: 14 45
    infunction-statement <statement> (118)
        on left: 45 46 47 48 49
        on right: 23 24
    identifier <sonia::lang::bang::annotated_identifier> (119)
        on left: 50
        on right: 10 18 19 52 53 54 67 80 81 88 89 98 101 113 149 150 181 183
    internal-identifier <sonia::lang::bang::annotated_identifier> (120)
        on left: 51
        on right: 95 99 102 114 118 119
    qname <sonia::lang::bang::annotated_qname> (121)
        on left: 52 53 54
        on right: 36 37 54 57 62 68 69 70 71 116 117 127 144 169 171 173 186
    fn-start-decl <fn_kind> (122)
        on left: 55 56
        on right: 13 35 178 179
    fn-name <sonia::lang::bang::annotated_qname> (123)
        on left: 57 58
        on right: 13 59 60 61
    fn-decl <fn_pure_t> (124)
        on left: 59 60 61
        on right: 11 35
    enum-decl <enum_decl> (125)
        on left: 62
        on right: 38
    case-list-opt <std::vector<sonia::lang::bang::identifier>> (126)
        on left: 63 64
        on right: 62
    case-list <std::vector<sonia::lang::bang::identifier>> (127)
        on left: 65 66
        on right: 64 66
    case-decl <sonia::lang::bang::identifier> (128)
        on left: 67
        on right: 65 66
    struct-decl <struct_decl> (129)
        on left: 68 69
        on right: 15
    using-decl <using_decl> (130)
        on left: 70 71
        on right: 42
    expression-list <expression_list_t> (131)
        on left: 72 73
        on right: 73 146 147
    argument-list-opt <named_expression_list_t> (132)
        on left: 74 75
        on right: 171 172
    argument-list <named_expression_list_t> (133)
        on left: 76 77
        on right: 75 77
    argument <named_expression_t> (134)
        on left: 78 79
        on right: 76 77
    argument-name <sonia::lang::bang::annotated_identifier> (135)
        on left: 80 81
        on right: 78
    field-list-opt <field_list_t> (136)
        on left: 82 83
        on right: 68 69
    field-list <field_list_t> (137)
        on left: 84 85
        on right: 83 85
    field-default-value-opt <sonia::optional<syntax_expression_t>> (138)
        on left: 86 87
        on right: 88 89
    field <field_t> (139)
        on left: 88 89
        on right: 84 85
    parameter-list-opt <parameter_list_t> (140)
        on left: 90 91
        on right: 13 37 59 60 61 69 71 178 179
    parameter-list <parameter_list_t> (141)
        on left: 92 93
        on right: 91 93
    internal-identifier-opt <sonia::lang::bang::annotated_identifier> (142)
        on left: 94 95
        on right: 98 101
    parameter-default-value-opt <sonia::optional<syntax_expression_t>> (143)
        on left: 96 97
        on right: 98 99 100 101 102 103
    parameter-decl <parameter_t> (144)
        on left: 98 99 100 101 102 103
        on right: 92 93
    constraint-expression <constraint_expression_t> (145)
        on left: 104 105
        on right: 101 102 103
    subpatterns-opt <pattern_list_t> (146)
        on left: 106 107
        on right: 116 117
    subpatterns <pattern_list_t> (147)
        on left: 108
        on right: 107 120
    pattern-list <pattern_list_t> (148)
        on left: 109 110
        on right: 108 110
    pattern-field <pattern_t::field> (149)
        on left: 111 112 113 114 115
        on right: 109 110
    pattern <pattern_t> (150)
        on left: 116 117 118 119 120 121 122 123 124 125 126
        on right: 61 98 99 100 111 112 113 114 115
    concept-expression <syntax_expression_t> (151)
        on left: 127
        on right: 130 131
    concept-expression-list-opt <concept_expression_list_t> (152)
        on left: 128 129
        on right: 116 117 118 119 120 121 122 123 125 126
    concept-expression-list <concept_expression_list_t> (153)
        on left: 130 131
        on right: 124 129 131
    syntax-expression <syntax_expression_t> (154)
        on left: 132 133 134
        on right: 13 30 31 32 33 34 44 49 70 71 72 73 78 79 87 97 115 121 122 148 150 151 152 153 154 155 156 157 158 159 160 161 162 163 168 180 181 182 183 184
    syntax-expression-wo-ii <syntax_expression_t> (155)
        on left: 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167
        on right: 134
    apostrophe-expression <syntax_expression_t> (156)
        on left: 168
        on right: 151 164 170 172 176
    new-expression <syntax_expression_t> (157)
        on left: 169 170 171 172
        on right: 165
    call-expression <syntax_expression_t> (158)
        on left: 173 174 175 176 177
        on right: 175 185 187
    lambda-expression <syntax_expression_t> (159)
        on left: 178 179
        on right: 167 177
    pack-expression <named_expression_list_t> (160)
        on left: 180 181 182 183
        on right: 17 145 173 174 175 176 177 182 183 191
    compound-expression <syntax_expression_t> (161)
        on left: 184 185
        on right: 43 166
    type-expr <syntax_expression_t> (162)
        on left: 186 187 188 189 190 191 192 193 194
        on right: 10 21 60 88 89 104 105 179 189 192 193 194


State 0

    0 $accept: . begin "end of file"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 3 (statement_any)

    begin                    go to state 34
    statement_any            go to state 35
    finished-statement-any   go to state 36
    statement                go to state 37
    finished-statement       go to state 38
    generic-statement        go to state 39
    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 42
    syntax-expression        go to state 43
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 49


State 1

  142 syntax-expression-wo-ii: STRING .

    $default  reduce using rule 142 (syntax-expression-wo-ii)


State 2

   50 identifier: IDENTIFIER .

    $default  reduce using rule 50 (identifier)


State 3

  132 syntax-expression: CONTEXT_IDENTIFIER .

    $default  reduce using rule 132 (syntax-expression)


State 4

  143 syntax-expression-wo-ii: RESERVED_IDENTIFIER .

    $default  reduce using rule 143 (syntax-expression-wo-ii)


State 5

  133 syntax-expression: CT_IDENTIFIER .

    $default  reduce using rule 133 (syntax-expression)


State 6

  141 syntax-expression-wo-ii: INTEGER_INDEX .

    $default  reduce using rule 141 (syntax-expression-wo-ii)


State 7

  138 syntax-expression-wo-ii: INTEGER .

    $default  reduce using rule 138 (syntax-expression-wo-ii)


State 8

  139 syntax-expression-wo-ii: DECIMAL .

    $default  reduce using rule 139 (syntax-expression-wo-ii)


State 9

  140 syntax-expression-wo-ii: DECIMAL_S .

    $default  reduce using rule 140 (syntax-expression-wo-ii)


State 10

  168 apostrophe-expression: "APOSTROPHE" . syntax-expression "APOSTROPHE"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 51
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 11

   52 qname: "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 53


State 12

  145 syntax-expression-wo-ii: "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 56
    compound-expression      go to state 52


State 13

  146 syntax-expression-wo-ii: "`[`" . expression-list "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    expression-list          go to state 57
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 14

  147 syntax-expression-wo-ii: "`[[`" . expression-list "`]]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    expression-list          go to state 59
    syntax-expression        go to state 58
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 15

  149 syntax-expression-wo-ii: "`.`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 60


State 16

  154 syntax-expression-wo-ii: "`*`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 61
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 17

  153 syntax-expression-wo-ii: "`!`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 62
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 18

   41 generic-statement: LET . let-decl

    IDENTIFIER       shift, and go to state 2
    "weak modifier"  shift, and go to state 63

    let-decl                      go to state 64
    let-decl-start                go to state 65
    let-decl-start-with-opt-type  go to state 66
    identifier                    go to state 67


State 19

   10 statement: EXTERN . VAR identifier "`:`" type-expr
   11          | EXTERN . "`fn`" fn-decl

    VAR     shift, and go to state 68
    "`fn`"  shift, and go to state 69


State 20

  169 new-expression: "`new`" . qname
  170               | "`new`" . apostrophe-expression
  171               | "`new`" . qname "`(`" argument-list-opt "`)`"
  172               | "`new`" . apostrophe-expression "`(`" argument-list-opt "`)`"

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10
    "`::`"        shift, and go to state 11

    identifier             go to state 40
    qname                  go to state 70
    apostrophe-expression  go to state 71


State 21

   30 finished-statement: "`while`" . syntax-expression braced-statements
   31                   | "`while`" . syntax-expression "`;`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 72
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 22

   32 finished-statement: "`for`" . syntax-expression "`in`" syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 73
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 23

   33 finished-statement: "`if`" . syntax-expression braced-statements
   34                   | "`if`" . syntax-expression braced-statements "`else`" braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 74
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 24

   42 generic-statement: USING . using-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 40
    qname       go to state 75
    using-decl  go to state 76


State 25

   12 statement: INCLUDE . STRING

    STRING  shift, and go to state 77


State 26

   56 fn-start-decl: INLINE . "`fn`"

    "`fn`"  shift, and go to state 78


State 27

   55 fn-start-decl: "`fn`" .

    $default  reduce using rule 55 (fn-start-decl)


State 28

   38 finished-statement: ENUM . enum-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 40
    qname       go to state 79
    enum-decl   go to state 80


State 29

   15 statement: STRUCT . struct-decl
   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier   go to state 40
    qname        go to state 81
    struct-decl  go to state 82


State 30

  174 call-expression: "mut modifier" . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 83


State 31

  135 syntax-expression-wo-ii: "nil" .

    $default  reduce using rule 135 (syntax-expression-wo-ii)


State 32

  136 syntax-expression-wo-ii: "true" .

    $default  reduce using rule 136 (syntax-expression-wo-ii)


State 33

  137 syntax-expression-wo-ii: "false" .

    $default  reduce using rule 137 (syntax-expression-wo-ii)


State 34

    0 $accept: begin . "end of file"

    "end of file"  shift, and go to state 84


State 35

    1 begin: statement_any . "end of file"
    9 finished-statement-any: statement_any . "`;`"

    "end of file"  shift, and go to state 85
    "`;`"          shift, and go to state 86


State 36

    2 begin: finished-statement-any . "end of file"
    5 statement_any: finished-statement-any . statement
    7 finished-statement-any: finished-statement-any . "`;`"
    8                       | finished-statement-any . finished-statement

    "end of file"        shift, and go to state 87
    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 88
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    EXTERN               shift, and go to state 19
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    USING                shift, and go to state 24
    INCLUDE              shift, and go to state 25
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 29
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    statement                go to state 89
    finished-statement       go to state 90
    generic-statement        go to state 39
    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 42
    syntax-expression        go to state 43
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 49


State 37

    4 statement_any: statement .

    $default  reduce using rule 4 (statement_any)


State 38

    6 finished-statement-any: finished-statement .

    $default  reduce using rule 6 (finished-statement-any)


State 39

   14 statement: generic-statement .

    $default  reduce using rule 14 (statement)


State 40

   53 qname: identifier .

    $default  reduce using rule 53 (qname)


State 41

   54 qname: qname . "`::`" identifier
  144 syntax-expression-wo-ii: qname .
  173 call-expression: qname . "`(`" pack-expression "`)`"

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 92

    $default  reduce using rule 144 (syntax-expression-wo-ii)


State 42

   13 statement: fn-start-decl . fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   35 finished-statement: fn-start-decl . fn-decl braced-statements
  178 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  179                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 93
    "`new`"     shift, and go to state 94

    identifier  go to state 40
    qname       go to state 95
    fn-name     go to state 96
    fn-decl     go to state 97


State 43

   44 generic-statement: syntax-expression . "`=`" syntax-expression
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`=`"          shift, and go to state 99
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 44

  134 syntax-expression: syntax-expression-wo-ii .

    $default  reduce using rule 134 (syntax-expression)


State 45

  164 syntax-expression-wo-ii: apostrophe-expression .
  176 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 112

    $default  reduce using rule 164 (syntax-expression-wo-ii)


State 46

  165 syntax-expression-wo-ii: new-expression .

    $default  reduce using rule 165 (syntax-expression-wo-ii)


State 47

  175 call-expression: call-expression . "`(`" pack-expression "`)`"
  185 compound-expression: call-expression .

    "`(`"  shift, and go to state 113

    $default  reduce using rule 185 (compound-expression)


State 48

  167 syntax-expression-wo-ii: lambda-expression .
  177 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 114

    $default  reduce using rule 167 (syntax-expression-wo-ii)


State 49

   43 generic-statement: compound-expression .
  166 syntax-expression-wo-ii: compound-expression .

    "end of file"  reduce using rule 43 (generic-statement)
    "`}`"          reduce using rule 43 (generic-statement)
    "`;`"          reduce using rule 43 (generic-statement)
    $default       reduce using rule 166 (syntax-expression-wo-ii)


State 50

  178 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  179                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    "`(`"  shift, and go to state 93


State 51

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  168 apostrophe-expression: "APOSTROPHE" syntax-expression . "APOSTROPHE"
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "APOSTROPHE"   shift, and go to state 115
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 52

  166 syntax-expression-wo-ii: compound-expression .

    $default  reduce using rule 166 (syntax-expression-wo-ii)


State 53

   52 qname: "`::`" identifier .

    $default  reduce using rule 52 (qname)


State 54

   53 qname: identifier .
  181 pack-expression: identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 116

    $default  reduce using rule 53 (qname)


State 55

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  180 pack-expression: syntax-expression .
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 180 (pack-expression)


State 56

  145 syntax-expression-wo-ii: "`(`" pack-expression . "`)`"
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 117
    ","    shift, and go to state 118


State 57

   73 expression-list: expression-list . "," syntax-expression
  146 syntax-expression-wo-ii: "`[`" expression-list . "`]`"

    "`]`"  shift, and go to state 119
    ","    shift, and go to state 120


State 58

   72 expression-list: syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 72 (expression-list)


State 59

   73 expression-list: expression-list . "," syntax-expression
  147 syntax-expression-wo-ii: "`[[`" expression-list . "`]]`"

    "`]]`"  shift, and go to state 121
    ","     shift, and go to state 120


State 60

  149 syntax-expression-wo-ii: "`.`" identifier .

    $default  reduce using rule 149 (syntax-expression-wo-ii)


State 61

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  154                        | "`*`" syntax-expression .
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 154 (syntax-expression-wo-ii)


State 62

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  153                        | "`!`" syntax-expression .
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 153 (syntax-expression-wo-ii)


State 63

   19 let-decl-start: "weak modifier" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 122


State 64

   41 generic-statement: LET let-decl .

    $default  reduce using rule 41 (generic-statement)


State 65

   20 let-decl-start-with-opt-type: let-decl-start .
   21                             | let-decl-start . "`:`" type-expr

    "`:`"  shift, and go to state 123

    $default  reduce using rule 20 (let-decl-start-with-opt-type)


State 66

   16 let-decl: let-decl-start-with-opt-type .
   17         | let-decl-start-with-opt-type . "`=`" pack-expression

    "`=`"  shift, and go to state 124

    $default  reduce using rule 16 (let-decl)


State 67

   18 let-decl-start: identifier .

    $default  reduce using rule 18 (let-decl-start)


State 68

   10 statement: EXTERN VAR . identifier "`:`" type-expr

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 125


State 69

   11 statement: EXTERN "`fn`" . fn-decl

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`new`"     shift, and go to state 94

    identifier  go to state 40
    qname       go to state 95
    fn-name     go to state 126
    fn-decl     go to state 127


State 70

   54 qname: qname . "`::`" identifier
  169 new-expression: "`new`" qname .
  171               | "`new`" qname . "`(`" argument-list-opt "`)`"

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 128

    $default  reduce using rule 169 (new-expression)


State 71

  170 new-expression: "`new`" apostrophe-expression .
  172               | "`new`" apostrophe-expression . "`(`" argument-list-opt "`)`"

    "`(`"  shift, and go to state 129

    $default  reduce using rule 170 (new-expression)


State 72

   30 finished-statement: "`while`" syntax-expression . braced-statements
   31                   | "`while`" syntax-expression . "`;`" syntax-expression braced-statements
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 130
    "`[`"          shift, and go to state 106
    "`;`"          shift, and go to state 131
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 132


State 73

   32 finished-statement: "`for`" syntax-expression . "`in`" syntax-expression braced-statements
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111
    "`in`"         shift, and go to state 133


State 74

   33 finished-statement: "`if`" syntax-expression . braced-statements
   34                   | "`if`" syntax-expression . braced-statements "`else`" braced-statements
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 130
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 134


State 75

   54 qname: qname . "`::`" identifier
   70 using-decl: qname . "`=>`" syntax-expression
   71           | qname . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression

    "`=>`"  shift, and go to state 135
    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 136


State 76

   42 generic-statement: USING using-decl .

    $default  reduce using rule 42 (generic-statement)


State 77

   12 statement: INCLUDE STRING .

    $default  reduce using rule 12 (statement)


State 78

   56 fn-start-decl: INLINE "`fn`" .

    $default  reduce using rule 56 (fn-start-decl)


State 79

   54 qname: qname . "`::`" identifier
   62 enum-decl: qname . "`{`" case-list-opt "`}`"

    "`::`"  shift, and go to state 91
    "`{`"   shift, and go to state 137


State 80

   38 finished-statement: ENUM enum-decl .

    $default  reduce using rule 38 (finished-statement)


State 81

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier
   68 struct-decl: qname . "`=>`" "`(`" field-list-opt "`)`"
   69            | qname . "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 138
    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 139
    "`{`"   shift, and go to state 130

    braced-statements  go to state 140


State 82

   15 statement: STRUCT struct-decl .

    $default  reduce using rule 15 (statement)


State 83

  174 call-expression: "mut modifier" "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 141
    compound-expression      go to state 52


State 84

    0 $accept: begin "end of file" .

    $default  accept


State 85

    1 begin: statement_any "end of file" .

    $default  reduce using rule 1 (begin)


State 86

    9 finished-statement-any: statement_any "`;`" .

    $default  reduce using rule 9 (finished-statement-any)


State 87

    2 begin: finished-statement-any "end of file" .

    $default  reduce using rule 2 (begin)


State 88

    7 finished-statement-any: finished-statement-any "`;`" .

    $default  reduce using rule 7 (finished-statement-any)


State 89

    5 statement_any: finished-statement-any statement .

    $default  reduce using rule 5 (statement_any)


State 90

    8 finished-statement-any: finished-statement-any finished-statement .

    $default  reduce using rule 8 (finished-statement-any)


State 91

   54 qname: qname "`::`" . identifier

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 142


State 92

  173 call-expression: qname "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 143
    compound-expression      go to state 52


State 93

  178 lambda-expression: fn-start-decl "`(`" . parameter-list-opt "`)`" braced-statements
  179                  | fn-start-decl "`(`" . parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    $default  reduce using rule 90 (parameter-list-opt)

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-list-opt       go to state 153
    parameter-list           go to state 154
    parameter-decl           go to state 155
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 94

   58 fn-name: "`new`" .

    $default  reduce using rule 58 (fn-name)


State 95

   54 qname: qname . "`::`" identifier
   57 fn-name: qname .

    "`::`"  shift, and go to state 91

    $default  reduce using rule 57 (fn-name)


State 96

   13 statement: fn-start-decl fn-name . "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 160


State 97

   35 finished-statement: fn-start-decl fn-decl . braced-statements

    "`{`"  shift, and go to state 130

    braced-statements  go to state 161


State 98

  152 syntax-expression-wo-ii: syntax-expression INTEGER_INDEX .

    $default  reduce using rule 152 (syntax-expression-wo-ii)


State 99

   44 generic-statement: syntax-expression "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 162
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 100

  157 syntax-expression-wo-ii: syntax-expression "`==`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 163
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 101

  158 syntax-expression-wo-ii: syntax-expression "`!=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 164
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 102

  162 syntax-expression-wo-ii: syntax-expression "`&&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 165
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 103

  163 syntax-expression-wo-ii: syntax-expression "`||`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 166
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 104

  159 syntax-expression-wo-ii: syntax-expression "`..`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 167
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 105

  184 compound-expression: syntax-expression "`...`" .

    $default  reduce using rule 184 (compound-expression)


State 106

  148 syntax-expression-wo-ii: syntax-expression "`[`" . syntax-expression "`]`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 168
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 107

  150 syntax-expression-wo-ii: syntax-expression "`.`" . identifier
  151                        | syntax-expression "`.`" . apostrophe-expression

    IDENTIFIER    shift, and go to state 2
    "APOSTROPHE"  shift, and go to state 10

    identifier             go to state 169
    apostrophe-expression  go to state 170


State 108

  155 syntax-expression-wo-ii: syntax-expression "`+`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 171
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 109

  156 syntax-expression-wo-ii: syntax-expression "`-`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 172
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 110

  160 syntax-expression-wo-ii: syntax-expression "`&`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 173
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 111

  161 syntax-expression-wo-ii: syntax-expression "`|`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 174
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 112

  176 call-expression: apostrophe-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 175
    compound-expression      go to state 52


State 113

  175 call-expression: call-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 176
    compound-expression      go to state 52


State 114

  177 call-expression: lambda-expression "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 177
    compound-expression      go to state 52


State 115

  168 apostrophe-expression: "APOSTROPHE" syntax-expression "APOSTROPHE" .

    $default  reduce using rule 168 (apostrophe-expression)


State 116

  181 pack-expression: identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 178
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 117

  145 syntax-expression-wo-ii: "`(`" pack-expression "`)`" .

    $default  reduce using rule 145 (syntax-expression-wo-ii)


State 118

  182 pack-expression: pack-expression "," . syntax-expression
  183                | pack-expression "," . identifier "`:`" syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 179
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 180
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 119

  146 syntax-expression-wo-ii: "`[`" expression-list "`]`" .

    $default  reduce using rule 146 (syntax-expression-wo-ii)


State 120

   73 expression-list: expression-list "," . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 181
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 121

  147 syntax-expression-wo-ii: "`[[`" expression-list "`]]`" .

    $default  reduce using rule 147 (syntax-expression-wo-ii)


State 122

   19 let-decl-start: "weak modifier" identifier .

    $default  reduce using rule 19 (let-decl-start)


State 123

   21 let-decl-start-with-opt-type: let-decl-start "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 189


State 124

   17 let-decl: let-decl-start-with-opt-type "`=`" . pack-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 190
    compound-expression      go to state 52


State 125

   10 statement: EXTERN VAR identifier . "`:`" type-expr

    "`:`"  shift, and go to state 191


State 126

   59 fn-decl: fn-name . "`(`" parameter-list-opt "`)`"
   60        | fn-name . "`(`" parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name . "`(`" parameter-list-opt "`)`" "`->`" pattern

    "`(`"  shift, and go to state 192


State 127

   11 statement: EXTERN "`fn`" fn-decl .

    $default  reduce using rule 11 (statement)


State 128

  171 new-expression: "`new`" qname "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 193
    qname                    go to state 41
    fn-start-decl            go to state 50
    argument-list-opt        go to state 194
    argument-list            go to state 195
    argument                 go to state 196
    argument-name            go to state 197
    syntax-expression        go to state 198
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 129

  172 new-expression: "`new`" apostrophe-expression "`(`" . argument-list-opt "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 74 (argument-list-opt)

    identifier               go to state 193
    qname                    go to state 41
    fn-start-decl            go to state 50
    argument-list-opt        go to state 199
    argument-list            go to state 195
    argument                 go to state 196
    argument-name            go to state 197
    syntax-expression        go to state 198
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 130

   29 braced-statements: "`{`" . infunction-statement-set "`}`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 200
    "`break`"            shift, and go to state 201
    "`return`"           shift, and go to state 202
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 203
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 22 (infunction-statement-any)

    infunction-statement-any           go to state 204
    finished-infunction-statement-any  go to state 205
    finished-statement                 go to state 206
    infunction-statement-set           go to state 207
    generic-statement                  go to state 208
    infunction-statement               go to state 209
    identifier                         go to state 40
    qname                              go to state 41
    fn-start-decl                      go to state 210
    syntax-expression                  go to state 43
    syntax-expression-wo-ii            go to state 44
    apostrophe-expression              go to state 45
    new-expression                     go to state 46
    call-expression                    go to state 47
    lambda-expression                  go to state 48
    compound-expression                go to state 49


State 131

   31 finished-statement: "`while`" syntax-expression "`;`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 211
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 132

   30 finished-statement: "`while`" syntax-expression braced-statements .

    $default  reduce using rule 30 (finished-statement)


State 133

   32 finished-statement: "`for`" syntax-expression "`in`" . syntax-expression braced-statements

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 212
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 134

   33 finished-statement: "`if`" syntax-expression braced-statements .
   34                   | "`if`" syntax-expression braced-statements . "`else`" braced-statements

    "`else`"  shift, and go to state 213

    $default  reduce using rule 33 (finished-statement)


State 135

   70 using-decl: qname "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 214
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 136

   71 using-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    $default  reduce using rule 90 (parameter-list-opt)

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-list-opt       go to state 215
    parameter-list           go to state 154
    parameter-decl           go to state 155
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 137

   62 enum-decl: qname "`{`" . case-list-opt "`}`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 63 (case-list-opt)

    identifier     go to state 216
    case-list-opt  go to state 217
    case-list      go to state 218
    case-decl      go to state 219


State 138

   68 struct-decl: qname "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 220


State 139

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements
   69 struct-decl: qname "`(`" . parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    $default  reduce using rule 90 (parameter-list-opt)

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-list-opt       go to state 221
    parameter-list           go to state 154
    parameter-decl           go to state 155
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 140

   36 finished-statement: STRUCT qname braced-statements .

    $default  reduce using rule 36 (finished-statement)


State 141

  174 call-expression: "mut modifier" "`(`" pack-expression . "`)`"
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 222
    ","    shift, and go to state 118


State 142

   54 qname: qname "`::`" identifier .

    $default  reduce using rule 54 (qname)


State 143

  173 call-expression: qname "`(`" pack-expression . "`)`"
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 223
    ","    shift, and go to state 118


State 144

   51 internal-identifier: CONTEXT_IDENTIFIER .

    $default  reduce using rule 51 (internal-identifier)


State 145

  127 concept-expression: "`@`" . qname

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 40
    qname       go to state 224


State 146

  120 pattern: "`_`" . subpatterns concept-expression-list-opt
  123        | "`_`" . concept-expression-list-opt
  125        | "`_`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 225
    "`(`"    shift, and go to state 226

    $default  reduce using rule 128 (concept-expression-list-opt)

    subpatterns                  go to state 227
    concept-expression           go to state 158
    concept-expression-list-opt  go to state 228
    concept-expression-list      go to state 229


State 147

  126 pattern: "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 145

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 230
    concept-expression-list      go to state 229


State 148

  121 pattern: "`(`" . syntax-expression "`)`" concept-expression-list-opt
  122        | "`(`" . syntax-expression "`)`" "`...`" concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 231
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 149

  104 constraint-expression: "`~`" . type-expr
  105                      | "`~`" . type-expr "`...`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 232


State 150

   53 qname: identifier .
   98 parameter-decl: identifier . internal-identifier-opt "`:`" pattern parameter-default-value-opt
  101               | identifier . internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt

    CONTEXT_IDENTIFIER  shift, and go to state 144

    "`:`"     reduce using rule 94 (internal-identifier-opt)
    $default  reduce using rule 53 (qname)

    internal-identifier      go to state 233
    internal-identifier-opt  go to state 234


State 151

   99 parameter-decl: internal-identifier . "`:`" pattern parameter-default-value-opt
  102               | internal-identifier . "`:`" constraint-expression parameter-default-value-opt
  118 pattern: internal-identifier . concept-expression-list-opt
  119        | internal-identifier . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 235
    "`:`"    shift, and go to state 236

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 237
    concept-expression-list      go to state 229


State 152

   54 qname: qname . "`::`" identifier
  116 pattern: qname . subpatterns-opt concept-expression-list-opt
  117        | qname . subpatterns-opt "`...`" concept-expression-list-opt

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 226

    $default  reduce using rule 106 (subpatterns-opt)

    subpatterns-opt  go to state 238
    subpatterns      go to state 239


State 153

  178 lambda-expression: fn-start-decl "`(`" parameter-list-opt . "`)`" braced-statements
  179                  | fn-start-decl "`(`" parameter-list-opt . "`)`" "`->`" type-expr braced-statements

    "`)`"  shift, and go to state 240


State 154

   91 parameter-list-opt: parameter-list .
   93 parameter-list: parameter-list . "," parameter-decl

    ","  shift, and go to state 241

    $default  reduce using rule 91 (parameter-list-opt)


State 155

   92 parameter-list: parameter-decl .

    $default  reduce using rule 92 (parameter-list)


State 156

  103 parameter-decl: constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 242

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 243


State 157

  100 parameter-decl: pattern . parameter-default-value-opt

    "`=`"  shift, and go to state 242

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 244


State 158

  130 concept-expression-list: concept-expression .

    $default  reduce using rule 130 (concept-expression-list)


State 159

  124 pattern: concept-expression-list .
  131 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 145

    $default  reduce using rule 124 (pattern)

    concept-expression  go to state 245


State 160

   13 statement: fn-start-decl fn-name "`(`" . parameter-list-opt "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    $default  reduce using rule 90 (parameter-list-opt)

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-list-opt       go to state 246
    parameter-list           go to state 154
    parameter-decl           go to state 155
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 161

   35 finished-statement: fn-start-decl fn-decl braced-statements .

    $default  reduce using rule 35 (finished-statement)


State 162

   44 generic-statement: syntax-expression "`=`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 44 (generic-statement)


State 163

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  157                        | syntax-expression "`==`" syntax-expression .
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 157 (syntax-expression-wo-ii)


State 164

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  158                        | syntax-expression "`!=`" syntax-expression .
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 158 (syntax-expression-wo-ii)


State 165

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  162                        | syntax-expression "`&&`" syntax-expression .
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 162 (syntax-expression-wo-ii)


State 166

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  163                        | syntax-expression "`||`" syntax-expression .
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 163 (syntax-expression-wo-ii)


State 167

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  159                        | syntax-expression "`..`" syntax-expression .
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 159 (syntax-expression-wo-ii)


State 168

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  148                        | syntax-expression "`[`" syntax-expression . "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`]`"          shift, and go to state 247
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 169

  150 syntax-expression-wo-ii: syntax-expression "`.`" identifier .

    $default  reduce using rule 150 (syntax-expression-wo-ii)


State 170

  151 syntax-expression-wo-ii: syntax-expression "`.`" apostrophe-expression .

    $default  reduce using rule 151 (syntax-expression-wo-ii)


State 171

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  155                        | syntax-expression "`+`" syntax-expression .
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 155 (syntax-expression-wo-ii)


State 172

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  156                        | syntax-expression "`-`" syntax-expression .
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107

    $default  reduce using rule 156 (syntax-expression-wo-ii)


State 173

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  160                        | syntax-expression "`&`" syntax-expression .
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109

    $default  reduce using rule 160 (syntax-expression-wo-ii)


State 174

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  161                        | syntax-expression "`|`" syntax-expression .
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`..`"         shift, and go to state 104
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110

    $default  reduce using rule 161 (syntax-expression-wo-ii)


State 175

  176 call-expression: apostrophe-expression "`(`" pack-expression . "`)`"
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 248
    ","    shift, and go to state 118


State 176

  175 call-expression: call-expression "`(`" pack-expression . "`)`"
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 249
    ","    shift, and go to state 118


State 177

  177 call-expression: lambda-expression "`(`" pack-expression . "`)`"
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    "`)`"  shift, and go to state 250
    ","    shift, and go to state 118


State 178

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  181 pack-expression: identifier "`:`" syntax-expression .
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 181 (pack-expression)


State 179

   53 qname: identifier .
  183 pack-expression: pack-expression "," identifier . "`:`" syntax-expression

    "`:`"  shift, and go to state 251

    $default  reduce using rule 53 (qname)


State 180

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  182 pack-expression: pack-expression "," syntax-expression .
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 182 (pack-expression)


State 181

   73 expression-list: expression-list "," syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 73 (expression-list)


State 182

  188 type-expr: CONTEXT_IDENTIFIER .

    $default  reduce using rule 188 (type-expr)


State 183

  190 type-expr: "`(`" . "`)`"
  191          | "`(`" . pack-expression "`)`"

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`)`"                shift, and go to state 252
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 54
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 55
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    pack-expression          go to state 253
    compound-expression      go to state 52


State 184

  189 type-expr: "`[`" . type-expr "`]`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 254


State 185

   54 qname: qname . "`::`" identifier
  173 call-expression: qname . "`(`" pack-expression "`)`"
  186 type-expr: qname .

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 92

    $default  reduce using rule 186 (type-expr)


State 186

  176 call-expression: apostrophe-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 112


State 187

  175 call-expression: call-expression . "`(`" pack-expression "`)`"
  187 type-expr: call-expression .

    "`(`"  shift, and go to state 113

    $default  reduce using rule 187 (type-expr)


State 188

  177 call-expression: lambda-expression . "`(`" pack-expression "`)`"

    "`(`"  shift, and go to state 114


State 189

   21 let-decl-start-with-opt-type: let-decl-start "`:`" type-expr .
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256
    "`|`"   shift, and go to state 257

    $default  reduce using rule 21 (let-decl-start-with-opt-type)


State 190

   17 let-decl: let-decl-start-with-opt-type "`=`" pack-expression .
  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression

    ","  shift, and go to state 118

    $default  reduce using rule 17 (let-decl)


State 191

   10 statement: EXTERN VAR identifier "`:`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 258


State 192

   59 fn-decl: fn-name "`(`" . parameter-list-opt "`)`"
   60        | fn-name "`(`" . parameter-list-opt "`)`" "`~>`" type-expr
   61        | fn-name "`(`" . parameter-list-opt "`)`" "`->`" pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    $default  reduce using rule 90 (parameter-list-opt)

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-list-opt       go to state 259
    parameter-list           go to state 154
    parameter-decl           go to state 155
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 193

   53 qname: identifier .
   80 argument-name: identifier . "`=`"
   81              | identifier . "`:`"

    "`=`"  shift, and go to state 260
    "`:`"  shift, and go to state 261

    $default  reduce using rule 53 (qname)


State 194

  171 new-expression: "`new`" qname "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 262


State 195

   75 argument-list-opt: argument-list .
   77 argument-list: argument-list . "," argument

    ","  shift, and go to state 263

    $default  reduce using rule 75 (argument-list-opt)


State 196

   76 argument-list: argument .

    $default  reduce using rule 76 (argument-list)


State 197

   78 argument: argument-name . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 264
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 198

   79 argument: syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 79 (argument)


State 199

  172 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt . "`)`"

    "`)`"  shift, and go to state 265


State 200

   47 infunction-statement: "`continue`" .

    $default  reduce using rule 47 (infunction-statement)


State 201

   46 infunction-statement: "`break`" .

    $default  reduce using rule 46 (infunction-statement)


State 202

   48 infunction-statement: "`return`" .
   49                     | "`return`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 48 (infunction-statement)

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 266
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 203

   36 finished-statement: STRUCT . qname braced-statements
   37                   | STRUCT . qname "`(`" parameter-list-opt "`)`" braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11

    identifier  go to state 40
    qname       go to state 267


State 204

   28 finished-infunction-statement-any: infunction-statement-any . "`;`"
   39 infunction-statement-set: infunction-statement-any .

    "`;`"  shift, and go to state 268

    $default  reduce using rule 39 (infunction-statement-set)


State 205

   24 infunction-statement-any: finished-infunction-statement-any . infunction-statement
   26 finished-infunction-statement-any: finished-infunction-statement-any . "`;`"
   27                                  | finished-infunction-statement-any . finished-statement
   40 infunction-statement-set: finished-infunction-statement-any .

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`;`"                shift, and go to state 269
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    LET                  shift, and go to state 18
    "`new`"              shift, and go to state 20
    "`while`"            shift, and go to state 21
    "`for`"              shift, and go to state 22
    "`if`"               shift, and go to state 23
    "`continue`"         shift, and go to state 200
    "`break`"            shift, and go to state 201
    "`return`"           shift, and go to state 202
    USING                shift, and go to state 24
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    ENUM                 shift, and go to state 28
    STRUCT               shift, and go to state 203
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    $default  reduce using rule 40 (infunction-statement-set)

    finished-statement       go to state 270
    generic-statement        go to state 208
    infunction-statement     go to state 271
    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 210
    syntax-expression        go to state 43
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 49


State 206

   25 finished-infunction-statement-any: finished-statement .

    $default  reduce using rule 25 (finished-infunction-statement-any)


State 207

   29 braced-statements: "`{`" infunction-statement-set . "`}`"

    "`}`"  shift, and go to state 272


State 208

   45 infunction-statement: generic-statement .

    $default  reduce using rule 45 (infunction-statement)


State 209

   23 infunction-statement-any: infunction-statement .

    $default  reduce using rule 23 (infunction-statement-any)


State 210

   35 finished-statement: fn-start-decl . fn-decl braced-statements
  178 lambda-expression: fn-start-decl . "`(`" parameter-list-opt "`)`" braced-statements
  179                  | fn-start-decl . "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements

    IDENTIFIER  shift, and go to state 2
    "`::`"      shift, and go to state 11
    "`(`"       shift, and go to state 93
    "`new`"     shift, and go to state 94

    identifier  go to state 40
    qname       go to state 95
    fn-name     go to state 126
    fn-decl     go to state 97


State 211

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression . braced-statements
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 130
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 273


State 212

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression . braced-statements
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`{`"          shift, and go to state 130
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    braced-statements  go to state 274


State 213

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" . braced-statements

    "`{`"  shift, and go to state 130

    braced-statements  go to state 275


State 214

   70 using-decl: qname "`=>`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 70 (using-decl)


State 215

   71 using-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression

    "`)`"  shift, and go to state 276


State 216

   67 case-decl: identifier .

    $default  reduce using rule 67 (case-decl)


State 217

   62 enum-decl: qname "`{`" case-list-opt . "`}`"

    "`}`"  shift, and go to state 277


State 218

   64 case-list-opt: case-list .
   66 case-list: case-list . "," case-decl

    ","  shift, and go to state 278

    $default  reduce using rule 64 (case-list-opt)


State 219

   65 case-list: case-decl .

    $default  reduce using rule 65 (case-list)


State 220

   68 struct-decl: qname "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 279
    field-list-opt  go to state 280
    field-list      go to state 281
    field           go to state 282


State 221

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt . "`)`" "`=>`" "`(`" field-list-opt "`)`"

    "`)`"  shift, and go to state 283


State 222

  174 call-expression: "mut modifier" "`(`" pack-expression "`)`" .

    $default  reduce using rule 174 (call-expression)


State 223

  173 call-expression: qname "`(`" pack-expression "`)`" .

    $default  reduce using rule 173 (call-expression)


State 224

   54 qname: qname . "`::`" identifier
  127 concept-expression: "`@`" qname .

    "`::`"  shift, and go to state 91

    $default  reduce using rule 127 (concept-expression)


State 225

  125 pattern: "`_`" "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 145

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 284
    concept-expression-list      go to state 229


State 226

  108 subpatterns: "`(`" . pattern-list "`)`"

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 285
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 286

    identifier               go to state 287
    internal-identifier      go to state 288
    qname                    go to state 152
    pattern-list             go to state 289
    pattern-field            go to state 290
    pattern                  go to state 291
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 227

  120 pattern: "`_`" subpatterns . concept-expression-list-opt

    "`@`"  shift, and go to state 145

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 292
    concept-expression-list      go to state 229


State 228

  123 pattern: "`_`" concept-expression-list-opt .

    $default  reduce using rule 123 (pattern)


State 229

  129 concept-expression-list-opt: concept-expression-list .
  131 concept-expression-list: concept-expression-list . concept-expression

    "`@`"  shift, and go to state 145

    $default  reduce using rule 129 (concept-expression-list-opt)

    concept-expression  go to state 245


State 230

  126 pattern: "`...`" concept-expression-list-opt .

    $default  reduce using rule 126 (pattern)


State 231

  121 pattern: "`(`" syntax-expression . "`)`" concept-expression-list-opt
  122        | "`(`" syntax-expression . "`)`" "`...`" concept-expression-list-opt
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`)`"          shift, and go to state 293
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 232

  104 constraint-expression: "`~`" type-expr .
  105                      | "`~`" type-expr . "`...`"
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`->`"   shift, and go to state 255
    "`...`"  shift, and go to state 294
    "`[`"    shift, and go to state 256
    "`|`"    shift, and go to state 257

    $default  reduce using rule 104 (constraint-expression)


State 233

   95 internal-identifier-opt: internal-identifier .

    $default  reduce using rule 95 (internal-identifier-opt)


State 234

   98 parameter-decl: identifier internal-identifier-opt . "`:`" pattern parameter-default-value-opt
  101               | identifier internal-identifier-opt . "`:`" constraint-expression parameter-default-value-opt

    "`:`"  shift, and go to state 295


State 235

  119 pattern: internal-identifier "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 145

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 296
    concept-expression-list      go to state 229


State 236

   99 parameter-decl: internal-identifier "`:`" . pattern parameter-default-value-opt
  102               | internal-identifier "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    constraint-expression    go to state 298
    pattern                  go to state 299
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 237

  118 pattern: internal-identifier concept-expression-list-opt .

    $default  reduce using rule 118 (pattern)


State 238

  116 pattern: qname subpatterns-opt . concept-expression-list-opt
  117        | qname subpatterns-opt . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 300

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 301
    concept-expression-list      go to state 229


State 239

  107 subpatterns-opt: subpatterns .

    $default  reduce using rule 107 (subpatterns-opt)


State 240

  178 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" . braced-statements
  179                  | fn-start-decl "`(`" parameter-list-opt "`)`" . "`->`" type-expr braced-statements

    "`->`"  shift, and go to state 302
    "`{`"   shift, and go to state 130

    braced-statements  go to state 303


State 241

   93 parameter-list: parameter-list "," . parameter-decl

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-decl           go to state 304
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 242

   97 parameter-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 305
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 243

  103 parameter-decl: constraint-expression parameter-default-value-opt .

    $default  reduce using rule 103 (parameter-decl)


State 244

  100 parameter-decl: pattern parameter-default-value-opt .

    $default  reduce using rule 100 (parameter-decl)


State 245

  131 concept-expression-list: concept-expression-list concept-expression .

    $default  reduce using rule 131 (concept-expression-list)


State 246

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt . "`)`" "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 306


State 247

  148 syntax-expression-wo-ii: syntax-expression "`[`" syntax-expression "`]`" .

    $default  reduce using rule 148 (syntax-expression-wo-ii)


State 248

  176 call-expression: apostrophe-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 176 (call-expression)


State 249

  175 call-expression: call-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 175 (call-expression)


State 250

  177 call-expression: lambda-expression "`(`" pack-expression "`)`" .

    $default  reduce using rule 177 (call-expression)


State 251

  183 pack-expression: pack-expression "," identifier "`:`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 307
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 252

  190 type-expr: "`(`" "`)`" .

    $default  reduce using rule 190 (type-expr)


State 253

  182 pack-expression: pack-expression . "," syntax-expression
  183                | pack-expression . "," identifier "`:`" syntax-expression
  191 type-expr: "`(`" pack-expression . "`)`"

    "`)`"  shift, and go to state 308
    ","    shift, and go to state 118


State 254

  189 type-expr: "`[`" type-expr . "`]`"
  192          | type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256
    "`]`"   shift, and go to state 309
    "`|`"   shift, and go to state 257


State 255

  194 type-expr: type-expr "`->`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 310


State 256

  192 type-expr: type-expr "`[`" . INTEGER "`]`"

    INTEGER  shift, and go to state 311


State 257

  193 type-expr: type-expr "`|`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 312


State 258

   10 statement: EXTERN VAR identifier "`:`" type-expr .
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256
    "`|`"   shift, and go to state 257

    $default  reduce using rule 10 (statement)


State 259

   59 fn-decl: fn-name "`(`" parameter-list-opt . "`)`"
   60        | fn-name "`(`" parameter-list-opt . "`)`" "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt . "`)`" "`->`" pattern

    "`)`"  shift, and go to state 313


State 260

   80 argument-name: identifier "`=`" .

    $default  reduce using rule 80 (argument-name)


State 261

   81 argument-name: identifier "`:`" .

    $default  reduce using rule 81 (argument-name)


State 262

  171 new-expression: "`new`" qname "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 171 (new-expression)


State 263

   77 argument-list: argument-list "," . argument

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 193
    qname                    go to state 41
    fn-start-decl            go to state 50
    argument                 go to state 314
    argument-name            go to state 197
    syntax-expression        go to state 198
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 264

   78 argument: argument-name syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 78 (argument)


State 265

  172 new-expression: "`new`" apostrophe-expression "`(`" argument-list-opt "`)`" .

    $default  reduce using rule 172 (new-expression)


State 266

   49 infunction-statement: "`return`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 49 (infunction-statement)


State 267

   36 finished-statement: STRUCT qname . braced-statements
   37                   | STRUCT qname . "`(`" parameter-list-opt "`)`" braced-statements
   54 qname: qname . "`::`" identifier

    "`::`"  shift, and go to state 91
    "`(`"   shift, and go to state 315
    "`{`"   shift, and go to state 130

    braced-statements  go to state 140


State 268

   28 finished-infunction-statement-any: infunction-statement-any "`;`" .

    $default  reduce using rule 28 (finished-infunction-statement-any)


State 269

   26 finished-infunction-statement-any: finished-infunction-statement-any "`;`" .

    $default  reduce using rule 26 (finished-infunction-statement-any)


State 270

   27 finished-infunction-statement-any: finished-infunction-statement-any finished-statement .

    $default  reduce using rule 27 (finished-infunction-statement-any)


State 271

   24 infunction-statement-any: finished-infunction-statement-any infunction-statement .

    $default  reduce using rule 24 (infunction-statement-any)


State 272

   29 braced-statements: "`{`" infunction-statement-set "`}`" .

    $default  reduce using rule 29 (braced-statements)


State 273

   31 finished-statement: "`while`" syntax-expression "`;`" syntax-expression braced-statements .

    $default  reduce using rule 31 (finished-statement)


State 274

   32 finished-statement: "`for`" syntax-expression "`in`" syntax-expression braced-statements .

    $default  reduce using rule 32 (finished-statement)


State 275

   34 finished-statement: "`if`" syntax-expression braced-statements "`else`" braced-statements .

    $default  reduce using rule 34 (finished-statement)


State 276

   71 using-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression

    "`=>`"  shift, and go to state 316


State 277

   62 enum-decl: qname "`{`" case-list-opt "`}`" .

    $default  reduce using rule 62 (enum-decl)


State 278

   66 case-list: case-list "," . case-decl

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 216
    case-decl   go to state 317


State 279

   88 field: identifier . "`:`" type-expr field-default-value-opt
   89      | identifier . "`=>`" type-expr field-default-value-opt

    "`=>`"  shift, and go to state 318
    "`:`"   shift, and go to state 319


State 280

   68 struct-decl: qname "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 320


State 281

   83 field-list-opt: field-list .
   85 field-list: field-list . "," field

    ","  shift, and go to state 321

    $default  reduce using rule 83 (field-list-opt)


State 282

   84 field-list: field .

    $default  reduce using rule 84 (field-list)


State 283

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements
   69 struct-decl: qname "`(`" parameter-list-opt "`)`" . "`=>`" "`(`" field-list-opt "`)`"

    "`=>`"  shift, and go to state 322
    "`{`"   shift, and go to state 130

    braced-statements  go to state 323


State 284

  125 pattern: "`_`" "`...`" concept-expression-list-opt .

    $default  reduce using rule 125 (pattern)


State 285

  112 pattern-field: "`_`" . "`:`" pattern
  120 pattern: "`_`" . subpatterns concept-expression-list-opt
  123        | "`_`" . concept-expression-list-opt
  125        | "`_`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 225
    "`:`"    shift, and go to state 324
    "`(`"    shift, and go to state 226

    $default  reduce using rule 128 (concept-expression-list-opt)

    subpatterns                  go to state 227
    concept-expression           go to state 158
    concept-expression-list-opt  go to state 228
    concept-expression-list      go to state 229


State 286

  115 pattern-field: "`(`" . syntax-expression "`)`" "`:`" pattern
  121 pattern: "`(`" . syntax-expression "`)`" concept-expression-list-opt
  122        | "`(`" . syntax-expression "`)`" "`...`" concept-expression-list-opt

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 325
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 287

   53 qname: identifier .
  113 pattern-field: identifier . "`:`" pattern

    "`:`"  shift, and go to state 326

    $default  reduce using rule 53 (qname)


State 288

  114 pattern-field: internal-identifier . "`:`" pattern
  118 pattern: internal-identifier . concept-expression-list-opt
  119        | internal-identifier . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 235
    "`:`"    shift, and go to state 327

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 237
    concept-expression-list      go to state 229


State 289

  108 subpatterns: "`(`" pattern-list . "`)`"
  110 pattern-list: pattern-list . "," pattern-field

    "`)`"  shift, and go to state 328
    ","    shift, and go to state 329


State 290

  109 pattern-list: pattern-field .

    $default  reduce using rule 109 (pattern-list)


State 291

  111 pattern-field: pattern .

    $default  reduce using rule 111 (pattern-field)


State 292

  120 pattern: "`_`" subpatterns concept-expression-list-opt .

    $default  reduce using rule 120 (pattern)


State 293

  121 pattern: "`(`" syntax-expression "`)`" . concept-expression-list-opt
  122        | "`(`" syntax-expression "`)`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 330

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 331
    concept-expression-list      go to state 229


State 294

  105 constraint-expression: "`~`" type-expr "`...`" .

    $default  reduce using rule 105 (constraint-expression)


State 295

   98 parameter-decl: identifier internal-identifier-opt "`:`" . pattern parameter-default-value-opt
  101               | identifier internal-identifier-opt "`:`" . constraint-expression parameter-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    constraint-expression    go to state 332
    pattern                  go to state 333
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 296

  119 pattern: internal-identifier "`...`" concept-expression-list-opt .

    $default  reduce using rule 119 (pattern)


State 297

  118 pattern: internal-identifier . concept-expression-list-opt
  119        | internal-identifier . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 235

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 237
    concept-expression-list      go to state 229


State 298

  102 parameter-decl: internal-identifier "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 242

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 334


State 299

   99 parameter-decl: internal-identifier "`:`" pattern . parameter-default-value-opt

    "`=`"  shift, and go to state 242

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 335


State 300

  117 pattern: qname subpatterns-opt "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 145

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 336
    concept-expression-list      go to state 229


State 301

  116 pattern: qname subpatterns-opt concept-expression-list-opt .

    $default  reduce using rule 116 (pattern)


State 302

  179 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" . type-expr braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 337


State 303

  178 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 178 (lambda-expression)


State 304

   93 parameter-list: parameter-list "," parameter-decl .

    $default  reduce using rule 93 (parameter-list)


State 305

   97 parameter-default-value-opt: "`=`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 97 (parameter-default-value-opt)


State 306

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" . "`=>`" syntax-expression
   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 338
    "`=>`"  shift, and go to state 339
    "`~>`"  shift, and go to state 340

    $default  reduce using rule 59 (fn-decl)


State 307

  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  183 pack-expression: pack-expression "," identifier "`:`" syntax-expression .
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 183 (pack-expression)


State 308

  191 type-expr: "`(`" pack-expression "`)`" .

    $default  reduce using rule 191 (type-expr)


State 309

  189 type-expr: "`[`" type-expr "`]`" .

    $default  reduce using rule 189 (type-expr)


State 310

  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr
  194          | type-expr "`->`" type-expr .

    $default  reduce using rule 194 (type-expr)


State 311

  192 type-expr: type-expr "`[`" INTEGER . "`]`"

    "`]`"  shift, and go to state 341


State 312

  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  193          | type-expr "`|`" type-expr .
  194          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256

    $default  reduce using rule 193 (type-expr)


State 313

   59 fn-decl: fn-name "`(`" parameter-list-opt "`)`" .
   60        | fn-name "`(`" parameter-list-opt "`)`" . "`~>`" type-expr
   61        | fn-name "`(`" parameter-list-opt "`)`" . "`->`" pattern

    "`->`"  shift, and go to state 338
    "`~>`"  shift, and go to state 340

    $default  reduce using rule 59 (fn-decl)


State 314

   77 argument-list: argument-list "," argument .

    $default  reduce using rule 77 (argument-list)


State 315

   37 finished-statement: STRUCT qname "`(`" . parameter-list-opt "`)`" braced-statements

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148
    "`~`"               shift, and go to state 149

    $default  reduce using rule 90 (parameter-list-opt)

    identifier               go to state 150
    internal-identifier      go to state 151
    qname                    go to state 152
    parameter-list-opt       go to state 342
    parameter-list           go to state 154
    parameter-decl           go to state 155
    constraint-expression    go to state 156
    pattern                  go to state 157
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 316

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 343
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 317

   66 case-list: case-list "," case-decl .

    $default  reduce using rule 66 (case-list)


State 318

   89 field: identifier "`=>`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 344


State 319

   88 field: identifier "`:`" . type-expr field-default-value-opt

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 345


State 320

   68 struct-decl: qname "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 68 (struct-decl)


State 321

   85 field-list: field-list "," . field

    IDENTIFIER  shift, and go to state 2

    identifier  go to state 279
    field       go to state 346


State 322

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" . "`(`" field-list-opt "`)`"

    "`(`"  shift, and go to state 347


State 323

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" braced-statements .

    $default  reduce using rule 37 (finished-statement)


State 324

  112 pattern-field: "`_`" "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    pattern                  go to state 348
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 325

  115 pattern-field: "`(`" syntax-expression . "`)`" "`:`" pattern
  121 pattern: "`(`" syntax-expression . "`)`" concept-expression-list-opt
  122        | "`(`" syntax-expression . "`)`" "`...`" concept-expression-list-opt
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`)`"          shift, and go to state 349
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111


State 326

  113 pattern-field: identifier "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    pattern                  go to state 350
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 327

  114 pattern-field: internal-identifier "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    pattern                  go to state 351
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 328

  108 subpatterns: "`(`" pattern-list "`)`" .

    $default  reduce using rule 108 (subpatterns)


State 329

  110 pattern-list: pattern-list "," . pattern-field

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 285
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 286

    identifier               go to state 287
    internal-identifier      go to state 288
    qname                    go to state 152
    pattern-field            go to state 352
    pattern                  go to state 291
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 330

  122 pattern: "`(`" syntax-expression "`)`" "`...`" . concept-expression-list-opt

    "`@`"  shift, and go to state 145

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 353
    concept-expression-list      go to state 229


State 331

  121 pattern: "`(`" syntax-expression "`)`" concept-expression-list-opt .

    $default  reduce using rule 121 (pattern)


State 332

  101 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression . parameter-default-value-opt

    "`=`"  shift, and go to state 242

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 354


State 333

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern . parameter-default-value-opt

    "`=`"  shift, and go to state 242

    $default  reduce using rule 96 (parameter-default-value-opt)

    parameter-default-value-opt  go to state 355


State 334

  102 parameter-decl: internal-identifier "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 102 (parameter-decl)


State 335

   99 parameter-decl: internal-identifier "`:`" pattern parameter-default-value-opt .

    $default  reduce using rule 99 (parameter-decl)


State 336

  117 pattern: qname subpatterns-opt "`...`" concept-expression-list-opt .

    $default  reduce using rule 117 (pattern)


State 337

  179 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr . braced-statements
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 255
    "`{`"   shift, and go to state 130
    "`[`"   shift, and go to state 256
    "`|`"   shift, and go to state 257

    braced-statements  go to state 356


State 338

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    pattern                  go to state 357
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 339

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 358
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 340

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" . type-expr

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 182
    "APOSTROPHE"        shift, and go to state 10
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 183
    "`[`"               shift, and go to state 184
    INLINE              shift, and go to state 26
    "`fn`"              shift, and go to state 27
    "mut modifier"      shift, and go to state 30

    identifier             go to state 40
    qname                  go to state 185
    fn-start-decl          go to state 50
    apostrophe-expression  go to state 186
    call-expression        go to state 187
    lambda-expression      go to state 188
    type-expr              go to state 359


State 341

  192 type-expr: type-expr "`[`" INTEGER "`]`" .

    $default  reduce using rule 192 (type-expr)


State 342

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt . "`)`" braced-statements

    "`)`"  shift, and go to state 360


State 343

   71 using-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 71 (using-decl)


State 344

   89 field: identifier "`=>`" type-expr . field-default-value-opt
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 361
    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256
    "`|`"   shift, and go to state 257

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 362


State 345

   88 field: identifier "`:`" type-expr . field-default-value-opt
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`=`"   shift, and go to state 361
    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256
    "`|`"   shift, and go to state 257

    $default  reduce using rule 86 (field-default-value-opt)

    field-default-value-opt  go to state 363


State 346

   85 field-list: field-list "," field .

    $default  reduce using rule 85 (field-list)


State 347

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" . field-list-opt "`)`"

    IDENTIFIER  shift, and go to state 2

    $default  reduce using rule 82 (field-list-opt)

    identifier      go to state 279
    field-list-opt  go to state 364
    field-list      go to state 281
    field           go to state 282


State 348

  112 pattern-field: "`_`" "`:`" pattern .

    $default  reduce using rule 112 (pattern-field)


State 349

  115 pattern-field: "`(`" syntax-expression "`)`" . "`:`" pattern
  121 pattern: "`(`" syntax-expression "`)`" . concept-expression-list-opt
  122        | "`(`" syntax-expression "`)`" . "`...`" concept-expression-list-opt

    "`@`"    shift, and go to state 145
    "`...`"  shift, and go to state 330
    "`:`"    shift, and go to state 365

    $default  reduce using rule 128 (concept-expression-list-opt)

    concept-expression           go to state 158
    concept-expression-list-opt  go to state 331
    concept-expression-list      go to state 229


State 350

  113 pattern-field: identifier "`:`" pattern .

    $default  reduce using rule 113 (pattern-field)


State 351

  114 pattern-field: internal-identifier "`:`" pattern .

    $default  reduce using rule 114 (pattern-field)


State 352

  110 pattern-list: pattern-list "," pattern-field .

    $default  reduce using rule 110 (pattern-list)


State 353

  122 pattern: "`(`" syntax-expression "`)`" "`...`" concept-expression-list-opt .

    $default  reduce using rule 122 (pattern)


State 354

  101 parameter-decl: identifier internal-identifier-opt "`:`" constraint-expression parameter-default-value-opt .

    $default  reduce using rule 101 (parameter-decl)


State 355

   98 parameter-decl: identifier internal-identifier-opt "`:`" pattern parameter-default-value-opt .

    $default  reduce using rule 98 (parameter-decl)


State 356

  179 lambda-expression: fn-start-decl "`(`" parameter-list-opt "`)`" "`->`" type-expr braced-statements .

    $default  reduce using rule 179 (lambda-expression)


State 357

   61 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`->`" pattern .

    $default  reduce using rule 61 (fn-decl)


State 358

   13 statement: fn-start-decl fn-name "`(`" parameter-list-opt "`)`" "`=>`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 13 (statement)


State 359

   60 fn-decl: fn-name "`(`" parameter-list-opt "`)`" "`~>`" type-expr .
  192 type-expr: type-expr . "`[`" INTEGER "`]`"
  193          | type-expr . "`|`" type-expr
  194          | type-expr . "`->`" type-expr

    "`->`"  shift, and go to state 255
    "`[`"   shift, and go to state 256
    "`|`"   shift, and go to state 257

    $default  reduce using rule 60 (fn-decl)


State 360

   37 finished-statement: STRUCT qname "`(`" parameter-list-opt "`)`" . braced-statements

    "`{`"  shift, and go to state 130

    braced-statements  go to state 323


State 361

   87 field-default-value-opt: "`=`" . syntax-expression

    STRING               shift, and go to state 1
    IDENTIFIER           shift, and go to state 2
    CONTEXT_IDENTIFIER   shift, and go to state 3
    RESERVED_IDENTIFIER  shift, and go to state 4
    CT_IDENTIFIER        shift, and go to state 5
    INTEGER_INDEX        shift, and go to state 6
    INTEGER              shift, and go to state 7
    DECIMAL              shift, and go to state 8
    DECIMAL_S            shift, and go to state 9
    "APOSTROPHE"         shift, and go to state 10
    "`::`"               shift, and go to state 11
    "`(`"                shift, and go to state 12
    "`[`"                shift, and go to state 13
    "`[[`"               shift, and go to state 14
    "`.`"                shift, and go to state 15
    "`*`"                shift, and go to state 16
    "`!`"                shift, and go to state 17
    "`new`"              shift, and go to state 20
    INLINE               shift, and go to state 26
    "`fn`"               shift, and go to state 27
    "mut modifier"       shift, and go to state 30
    "nil"                shift, and go to state 31
    "true"               shift, and go to state 32
    "false"              shift, and go to state 33

    identifier               go to state 40
    qname                    go to state 41
    fn-start-decl            go to state 50
    syntax-expression        go to state 366
    syntax-expression-wo-ii  go to state 44
    apostrophe-expression    go to state 45
    new-expression           go to state 46
    call-expression          go to state 47
    lambda-expression        go to state 48
    compound-expression      go to state 52


State 362

   89 field: identifier "`=>`" type-expr field-default-value-opt .

    $default  reduce using rule 89 (field)


State 363

   88 field: identifier "`:`" type-expr field-default-value-opt .

    $default  reduce using rule 88 (field)


State 364

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt . "`)`"

    "`)`"  shift, and go to state 367


State 365

  115 pattern-field: "`(`" syntax-expression "`)`" "`:`" . pattern

    IDENTIFIER          shift, and go to state 2
    CONTEXT_IDENTIFIER  shift, and go to state 144
    "`@`"               shift, and go to state 145
    "`_`"               shift, and go to state 146
    "`...`"             shift, and go to state 147
    "`::`"              shift, and go to state 11
    "`(`"               shift, and go to state 148

    identifier               go to state 40
    internal-identifier      go to state 297
    qname                    go to state 152
    pattern                  go to state 368
    concept-expression       go to state 158
    concept-expression-list  go to state 159


State 366

   87 field-default-value-opt: "`=`" syntax-expression .
  148 syntax-expression-wo-ii: syntax-expression . "`[`" syntax-expression "`]`"
  150                        | syntax-expression . "`.`" identifier
  151                        | syntax-expression . "`.`" apostrophe-expression
  152                        | syntax-expression . INTEGER_INDEX
  155                        | syntax-expression . "`+`" syntax-expression
  156                        | syntax-expression . "`-`" syntax-expression
  157                        | syntax-expression . "`==`" syntax-expression
  158                        | syntax-expression . "`!=`" syntax-expression
  159                        | syntax-expression . "`..`" syntax-expression
  160                        | syntax-expression . "`&`" syntax-expression
  161                        | syntax-expression . "`|`" syntax-expression
  162                        | syntax-expression . "`&&`" syntax-expression
  163                        | syntax-expression . "`||`" syntax-expression
  184 compound-expression: syntax-expression . "`...`"

    INTEGER_INDEX  shift, and go to state 98
    "`==`"         shift, and go to state 100
    "`!=`"         shift, and go to state 101
    "`&&`"         shift, and go to state 102
    "`||`"         shift, and go to state 103
    "`..`"         shift, and go to state 104
    "`...`"        shift, and go to state 105
    "`[`"          shift, and go to state 106
    "`.`"          shift, and go to state 107
    "`+`"          shift, and go to state 108
    "`-`"          shift, and go to state 109
    "`&`"          shift, and go to state 110
    "`|`"          shift, and go to state 111

    $default  reduce using rule 87 (field-default-value-opt)


State 367

   69 struct-decl: qname "`(`" parameter-list-opt "`)`" "`=>`" "`(`" field-list-opt "`)`" .

    $default  reduce using rule 69 (struct-decl)


State 368

  115 pattern-field: "`(`" syntax-expression "`)`" "`:`" pattern .

    $default  reduce using rule 115 (pattern-field)
